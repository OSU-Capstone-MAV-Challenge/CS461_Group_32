%!PS-Adobe-2.0
%%Creator: dvips(k) 5.993 Copyright 2013 Radical Eye Software
%%Title: Project_Review.dvi
%%CreationDate: Fri Feb 16 20:04:09 2018
%%Pages: 9
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: URWPalladioL-Roma URWPalladioL-Bold NimbusSanL-Bold
%%+ NimbusSanL-Regu
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -R -Poutline -t letter Project_Review.dvi -o
%+ Project_Review.ps
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2018.02.16:2004
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore}bind
def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave
pgfsoa .setopacityalpha stroke grestore}bind def}bind def /pgffoa 1
def /pgfsoa 1 def end

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: NimbusSanL-Bold
%!PS-AdobeFont-1.0: NimbusSanL-Bold 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Sans L Bold) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -155 def
/UnderlineThickness 69 def
end readonly def
/FontName /NimbusSanL-Bold def
/PaintType 0 def
/WMode 0 def
/FontBBox {-173 -307 1003 949} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8D62A63193C4AE94C086C1
552833DDD8F116B5DF33205AE709B3AA63DA7BEBB165B67281827B48FB5EDBED
02A1A5C0784FC57D3487DAA59520BADA1BE3FB9795669924321CE4F466CD8E3F
7E8EC2494AEE80E2DD7A48A6861AF5B9F0CCAA4A2FE2B03498EACACD6B9C39C6
A8F2E39E06BBB061CF2EC380A32EFAD0B790974BB5CC3DAF0992471456967362
77DE34813F27ABE99302F86BB4D293A37F84667E7F3DFEE4CFE9D1A676A5728C
AEB5222FF50DA97E74B2CDEBF725FBCA7015A188891C8A376B9DD8A642C4B184
B1BBF3F376A6D6E31EF1C8354DDF8039CB20FAABCB34D4749B3C8C8D6972CEB1
06B8A5AAE3AE40A91F1F2B1155681A9CC933F87528C99A2B0268B43A3E829E7F
3BD863CB52950773BD9B0731DC4992541D7DE7A055CA65DDD2317F1705C20D1F
93291BCC254CBABA425C032B3B15050D41DA14FFE1B3D684EEA428095A01E931
98D4F849B239AD9D79F4502F0271AFFB0C297F2F347BFB9C137782646F648F77
0076B85F5A929FCDEA2703333F6918B8F125627F8B505C688E30F258DED1AECF
2C86EDCD88C29249A8081731737195FAB7ADBB54743BD66511194DEE2516959B
A20701E2D97342248297425491F6C9471EC9A98E630D734DAC19721F0B324432
C8D7A0B751453F89F7008BA37BC48E0831EE3ECBD8A0A292D63CFC890B28F695
9E29AC3B4DDB78A6883B9272CE34A012A82ADEC0B6B641E3940A438A098CCFBF
C50544B94FACFD9D7AE09AD0632015F81D2F77FC6D80A42EC11D67D8A91C376C
13C8E3444CDFDE4D2A1ED021410F4D6A4E97804AE949BD913094D23108C9D384
56F11025E2D24939114B6BCF579A0315C52F3CA1BCC2860FC1A0B9FB8A37AE2F
C20C0FD44D215FC2AF737FD0339B070D54E664021240071C665DE4170DFA182D
4E385685FB41A2D85888B1149E9A766CB4F309B4E2BAA28CF1F8CC111688DE12
D35EADEF3243D6377A3CCDF0E5754C8509A44A40F838AD8B0682CF6FBF29302B
243192B9041EE868CC8103526C7DFF028DF85F2ED913B16022E06A761A62B391
A08E4CFA1B806DD6B0557683C1F73C5C8DDE321B1BABF9616E20B6B12B517C1E
389E7A85FDEBC0D6834EBA8A4703D4D84D1B7BC44064F2EE2B5D0646CD2C6ABE
DCF6F3ED9181CFAC6D5546FE69800ED5DAFFE353929EE38464952A74653881E1
35C695568ECD1640C8FE19CDAE0A1A00DC798E57E963DA36716FA250FD983574
D06F88861882EF3B6E6090245BE7A3DC5CB4A60C72B62704A385C873604771A5
8D2FD3034EF423860093D81FFA11EFC86F912171C1B58B5FE8506C4330DA185C
E61BE5B93DF45D0AD1FDAF194F7DCD648D8F14A5264B6277B6B9802F7D2702DB
352D0874442B2074859EB49313BC24762975AEC0D0D84A962DD0A04F4B6B420E
0A9814BE9B2B8C2CF1919579C0EABEB306843F230D5D210FC4496DA73D0D402F
3CAFC7DD736BB0C487962473062667D000AE87A0F2AB99689F12B25A7E3E9266
6F3C0B486DA8D9109C6B1726E4FE8C3B7F5F2F288CE75AA0B1EC678BB3B45FBE
BD4988B5ACFD71B15DD33ADDC5816773D7C81B519D9271C3B990C4709BB951B2
4B134C8E807806C7D90F8C2414CA1669749E13E6748CDBD77997D5E6F66432E6
7AA486B7CED4F7EF4A08743DF7DA94D2E6C23FBF532ADEE256CD4954D8D8F257
466803DFD8AAFE4A0CDBA36E71C609F729E5B266A1D06A3A7B66CDF9839B8144
FCD82130E6CE8CE152B40CD2B8C5CA59A58BF16C058CEAA70D7C758350587F24
8ECCE544FE6765A8126EA508E171DD6555B895F6DF92BD9DDAAA2086E7D346EA
AD0FD911F1D484563DD038529060B541F6E27060A85FFD6DED41E0AD41690F22
866F0EE5D39073FCD2E15A85EEFD4DB4B9B2E9C804FE27C8B6EB69128E5C2703
82DE1E5170AE081644B0AAC35736BFD3FEE0F626DC1157180A2641C1A294A568
C67AECF19BAD42EA721AE8908C75860C8E4C34BF1B668340001B78782CACB5C6
483429425112387E3A9D40DCF8F06178C5E73D59C1AB83B98945A1FAD6203F8C
21D9CC04E187BE53F8FED4F33633BA03A486D0EECF70D7BCE3B519FFA1FA6E54
E2459EF6283C1B7BAF358B097C143077FE9CF6CD045EB2051776F4F0F322D4D7
17677BF26B78F4A702BF5FDE5C111D685C84068DBF528C83F702021F1315F9C9
3BEE4E08D963664E16598E445AF7954A98264BEE074461A5109B85AB4772DA0F
23C2D60B23DB5CDFD801B70FC8668B1F92DA48487F93988FD7B475A7B57BF8CF
0ABCD0B060635BB6585337669661CC345DA580A44B7AC09C113DF5BAA7AB8DE0
B44E4CA96FE2EA1990E5255A4690269FF727E31A60107DF567FEF0DFEB71B17A
B6126C86158C699A205FA208DA4B20951FC4064D8B66404C57A92D58C6BC2643
0662D21A7C68BBDF1575126C1B79A1F3237F7522F402A7FEA9DE94B58708AF1E
5ED09B64B5377DEE498DFEF0122899A679D4FAD134E4D565A66BC16E6D63DC99
F2728F69FF2D34949FB569C4EE98D8103380A7239441475183C822187DD8B6B5
6E6D899A4F43A8D839B656022769E77672F25E3A6EA4ED4A4D375B2D42DBD1B7
0D7A5E03B4F6FCEFB6FCDD625749018A1EC11C8BC490B77A585A23F446F79409
6A7724D7CECA844184CD95ABD8A8624B52A5AA86EE07E4BB0C33B3B13426B735
484E5AEB2BE3B537A4D7597531519BBC09A1202AD6DC2F8437B384E23D011428
ABB7AD965E8A5A3ECEEB8BE703935D07BEE4589EA11EBE3A1C319053E9E9372F
EEA0BE4056DD7A4DA71508AB6249D79C68C1B6B85D67D213F7BA15C163308E7B
618CBC04AF59E03405522A6E07BBE577C2475456BF44D167D768237B76346FC0
7D7A60542F38E6B35C94DB5ADB399F08DB4F5443C55628D788DEEAD8A7B1560E
6D69D9DBF0CACD17A8C877C83CEB9BC7A95C0832ED8BBE98E51494A639DD781F
1C8B62B732C93AD6D525231290E7C58AF29A7BBB02DF84B813A690E7FB7AFC83
7DFCB7DCD537F4C3592A64D265374E37EAD55FA9C1CC2B39AD7DAE72C03CE776
8F9CA2AF37AD5C0012D4896C671DCBC11CF629219079C9C28486D636E2F7ED8F
2C9BCD260A0ED902CF77EC1A42DBBE977A802017EF51D04C072FEDF510FDA269
5083FFEC13CCE69DDFD661C0D1E9AC39C36C55E92393CA29C6BC9B85DB0FBD2D
B4B9F870C28C26556398FC933C7BF4710E1F1704B05C2EED56D59D6F98607BC1
4EDA3A1E103A28030F2B4381AA514287215A12E9A1EDFF8FE6FC0234B79E1E2F
F27DB65F91B1AB66CFEB33E7FB83D1CEE445EBC7F8251E4DDB62DF4BA842D1CE
26A0A0A9ACF3A60A695EF5F0C016BFFDDFD9D2C9913B3F8A4BE80BF649BA53B9
3C3CD4A9A135203BD8968CB94C38BE6B61BD504936ADAC74EB1D7F5D21D68FA7
729A126F93509DC2598B947D07745A84EBF5886C2A143A0679E80F5E26F4A460
E93E1C55BBA48E5A25A03D1E90B1B4B788BE82AEBD41B26949B970A089022F02
EA7E69863F584F1FFABFAD346537B100DE9E9245943A239E75560E640FAA7B5E
641B279F325195AD02B7EB6BF1EC0469DE0857E4454FA6E7CB49D9FC46A680DE
6AD3AFA4C96F8055285666AA0B8DD2E8800C543F30483CF6D2EC93811AEA454D
D6326BFD00F8E2C49C850B79084A2E5FE87CE51DE3C52F901713CC9998A1A724
2F32097F2068E518A37DC4B8CD1A835817228F77E5BBAB0AE5122A967C6BE208
8BEA49C5D06D6EB494248D2E42D4D0358B380B2ED5CAC184CE81DA149775CC11
810427A63160EFDBE6DB6B2616CC460BDD35D4B52D486237535E36460DB4AA62
7D43E727A5D0F5397FF995DC3CFFBDE3A80FF954B757143359F8EE27AB1905FF
7780AD4749A6C5C0F20571C577ED03D63028C645D5C3C6C486658937E811DEC0
282EE3D0E3C1A31D753D5E67080D2843D44A3585E078615BEA476C8824EF06A4
B34666168BDBB2073CEB54C50F3E6E2CA991A8E7CC6A62999A6D5E428B4FA636
A6A3152DEA46738AC83A3D0946E1CA8433C899EFF83A2BA99A7AB77DFE54237D
F86DE95F31449EF3D5D487748FC9C521763266B4D4268A3FDBF8F1AB7F0AFABF
6420F6F968B2F6AEFCD457997400F4BA822D93DAB68E1D6826D788CADE0D1438
358199BFE41B793C87DF5CAC2C944A2A78EBA43B1D7D4F69FEB1E8ED41EB54B7
E802445AA7F3728AE4C8A1ECC51146587C8BED6706E63748B6BF8F26EF568DC2
E12401C741C08BD0D40991A5C7C5B02D7A6AB342D4B2851CC351DEBFA68C9B4F
98E28334A415D75DA89E347DA6B354C221A5DBEBAC0103D1B506211FDCB6EE0A
1477CE6357B0CD623B5EFE2A133BAE860C5DAACEC5988BE65084655CC5720D3F
96412E6A80F8B677DC698E4BFEFD950BC216CAE0DABF7A48CB781D932290F662
1C1D2E7F04120FBDB7EEBCE135EF8943AE7B0BC6DB59314AE0FCE081A9DD4D8B
87CFB4AA3E3F00080AEC3F0AA14FD0E2D7D8A29BD62C37CD1D6C55544460DEDA
4F8244B2F06C933AB91593FA24BA11A61A8B40D3229C18FF654713F6E2DAE85D
8EA07DBF0F7CE8AF45BCAE8E07227B0103698375727743A699E872FEAC505B3B
45685EF547F36D9349174E5D0BF463CBB4A1566118C4E0C3B2421AAAFF105201
2B1DA153F7095F6E0C2E80C3CC69EBAA36D35161B3EB6C4035E27B1E2CD55387
107123A5FA67289DAAF80C0F5EA7D9E67929CF4142CD5612FFDC1281379FC2AD
3324AE6C9704D3078A7EDB52FAFB8C141457531E7E800C56BA3B85B8984CD86C
9704ACA4914DF3E56D335825BD5474328B7AD72AF93485CFF57472F27BC0D111
482C5E2407F0458D283931DD37369DD094770C1A1B8477244E8695B6DAF079BC
A53BCFE8DA1E521D197C5309C2919A8EEB28686F89236B62EDF98D758E1F5808
0BEEB5FE2A7348471CADDD7F73C1362CD7DAA18888C8FB3AB16DE73526878D37
BE199244EB2B4ED781D54C83108C095A1266F53BB231694651717275F3CA7FBF
60330585586996004719D73EA149626C3008D781AA49B521BFF9BF98A8E28DD6
6AA0203ECC51E7C455C308C0373A7CAC1869ACAC092A9C03E35F117363E6AF8C
D15028D54089AB88D996B3EE43660E70D22D607328465069765118A279DA8F3A
2C5248B69FDE631E977262119E30EB552079455C6B0398156AE3FB3294BFC99F
114BAF8F288FE94F5A7A51E284B29041099A378BFED5DC5AD52E632244EB7645
C85B0E154640F9C1683F3FBFCE5CCC5D7AE7D5B4C374DB8492DD3FC71B626AA8
0CA07EFFA667951106066085C13AF52E39D381CD39C7B4AEBDA5D1CFFFAF6EBB
E3E5F0B8799DBB87429FD1D9DA6F6DFE3B7B5B4A1B7CA0542072534222F145DD
EE92C2C7EE93E40A4FCE44578E8A4DCA9E71D0A70DCDF34A7808115B9C049B63
334402F76388AD6A3E633DBD16560C32CA7729132E53315FB06BBE4903FBEF72
A07053CD526DC3B746C64089B81E489200DC105F74999B0BEA674328993EC2EF
CA9159995DD26DB077B00447E66526C5F32E8F284D70420667FA9F12D8CC55AB
D8F16C8F0C86A15838D08ADE58135254A0B1B9A16C5F1DEBE19C1C27AAD6EBF4
CBBF8A7D8632883D9235708F3988B2668540D20345FA57D34BF2C6D3A0D4AAC6
16784D91B39A2809F93DFF84512C0C5D5E0D6D8225AD349E7B590693C510E78F
FA5A91E9A304D9C2D0B96915C2ADD25EBF77E8D865935B3701C2D0693D1F4EF5
DEDE9BD0939CEDB429AB42C252DDC344234E84AEA7D9D9AA85C8A5E58748231B
F261EA1210581E17E697F95CEC84B6F3447D427D778700E14D1136E4379C4FBB
28B52C00EE4055F16F2D5657858272EABA8C23D5DE5ED5D69CAA065007743E5E
522DE65BA324640B70E9B902E9FB32F894C4CF48A2D623D260F7A8EF5AA2548D
5A70F7A701141598F4ABE7C86504CA41D3562F89437CA7CE8267C80C7ACE01E8
76D31E04A412631402BC37D0B020026DF349F981CC1DB07526F0CA97D0D0EB2A
36D7F75790571F65D0A198E153F985573ADE3C9349AD531A9573CC39E0142DF4
966A3B90C568D41F82C083BCCFEFAACE47974795D62BA4CCA6BE6AD5D4759E5B
6550F1DC2BCEB6D17D206F7034D06A96224A25A1BBA4F9F3FFA07D935F671849
9577F6E400F8E6BE4CBBB353A8B7525DAAFF7B70569D981D4838ADD3C0B3A91B
A5C41346F6422F76D7C5A68044E806135D9789ED8296798B55D71C8C7AC0845D
F9DA66C5C229FAC520CB5FF62D36263BE78C0167EF026AB90C8CF690754164F8
8FAE5D7EDFC694B0E0D6ABFEA0754D28186A839A121E81C523702724BC9A3A60
3B1216B4D314CA32858827CB529471CB21B7673F17DC919A51D0CC80A85DED08
2F6CB6EDDB6C3C6BE7C365D68A64D44F2F18926F2CC366A30E3AF52F2409BEBC
1192E48C2E95C1D88680C0BD6897991C1F6CD54D1000737C9F1EF0F538F27E49
C8884979D55240D1B43CE67929CF4142CD507DB9B5DEBDD171A3100D4D69D8A5
6566C0FA3EAC58E90A3BC37E2339C9EDD67D765425ED182428EF94D98557ADEA
942CF992F9556FCF0E5969C8DF2D1CB3D58CEB6263F970D200FBEE2D9F246D08
BD44FCF0C4807966DD9ABF7DC6E7EE52EC5A8A0AB95692C967A755440EF11368
1B7FDFA4046F15D3048E629A14AC21316C183F6BEF6D7CFDBFAD9071498C534A
54F397F448DE76E222B49D41BCF1C74D7F7A16C7C9E01EB37413954E9C5F2AE1
E878744AC39A0C15A975959C95F6BF8D3F29A8376A0DF932E4F6167A6CA229FA
DA3E5D738804FC2BF34BB140E287E1F2152A557CC729964503B719B66107D5B9
2AC62F2A2426B0BFEF43380BB156CF5A877DBD87ACFD0BF67CCA2E9F69849932
71BAE4D1E2819694892224E9756F64A0FA7602032F76735905904249D2E7C391
5F549A93BD1498DC1A664CE0654E43F069CDD8A1497EB4286662D5915751C0D6
0A264A3E07EDFDA80594644936AFD09CC242DCF5AC23DCF696EBF5C7E725E303
05D8EC11E458D64A6E3C74144C1BBAA961E2C39A9D214FDBD8A4F43B8C4BBD65
AA43CD7E8E17FCB8B4ED57D7C61B0C70972F86F6733712F1B1C223E41D496A78
F5CFCB87C73B1D95A72DC2ADC7B798B3536CF6FC0B63913EAA9CC9D753C5E111
37C66FF2369AC32B27EA00943C3FD600E102C9333670EA6DA98F3BA355702043
D79630057B1ACC85B672EF8F379B5988967076D664A02F637333901B8625E954
65D068DD0BC18E3C64077DED2B862F6BF362F0287929B52C4D73C14467138539
B3E20FA7F817E4EFADADFE9D9BD5ECA24FAA616142411A452147573298577794
9E09BA718EB696357068D04955ED4834BA84FAF70F46855074272046B2573592
3A86AC583F315AB8C24BC28D2CB98B7D817311B63766ADFB7099864428EA3584
CDC638485DDEBAF95388BB7F6588A5E347A760B51AD5006519CA67DE7AE30BE8
6371DC189E1F2891DC185258AA45DD88C4018836F196A026E9814413F0AC533E
B8FF3F263D8288A3C4DCEEFA1F3076BB941B1832E3FDBFA77469B67DE7676E43
38BB923A4E3B2F946324EBDE7EF359FBADEAE9B8294267C7B7CF6B3815E2F744
AF97D7C964D15B400620E9AF4EE88CE2F79FFC9789586711C654685BDD25F3F8
A5335C37216FBFCB7BE1255583782E16B59A91EE154553896D6CAAFF7F81CBF9
47734D938D1B904C4DD8DDB484F625BEB57E28405D014E912B80B490C89E6E17
60B7B836E2D9A0B59DC7312A3CD10932FC7FA9DC4267B9B5FF1454AC7D54F59C
5D94588BB274601CE5D01CE5ADDCE021A7C84541082A2FE66D6852481694A3D3
E1E542CA198D45C3FC20749FC2732040F1A77F70E791CB62135BF116DD8A23AD
2C2B39CE01BDF9463E19DB0096B2E0C6564EF9A8E2D3ACFD8C67C2C4DC81E7F1
85657CF84050DFF8486F208903B29988331875BEB6B28FBEF7976BC57882FBF5
7A2727846578A87F78062708C347CA6DE3AF3681281ECE9FB5B57FCF5894D372
71FD395775405550A4FA7F181C5EBFC8534E0E6494BF36A317DFD1CBC8FE5BDC
F6C885FFA8B3E4AF3CF6F58B6FE756F711FCD4747C0868762B2627B0F609D66B
908E8A014003C19AB0195C0B9D8AA2604D44E97BAC3B8BB13E562CF7E636BA7A
1D1C0F5D1533474C1D92757D1EAEAA55B7F2853E36999482BF45A003B819B924
0E0346C843AF05F855CD46FFAC1019EEBEF540640ADF732D0F3522AEFE1D4DF8
93F8448258460E39549B418D703215E7B89ECDAEC09CAFEDE73032F1FFF8775B
8178DD68B5A21E570C8A555F84FF0C7A388469A4AFE96CD876F4C49F12FC3E33
E8AF4A2907418BBDD92209A560A1C2900D93C7D84334DDC6B6B7F51C9EDB5F17
FB9397AC08625C202E9BB2A81577A0BA6A227CA21B6B9EE8925F359EC5BC4024
42BBA33B2663D564461187560921CBE040A2AEFCBE4AC82DAFEEF86EB672A952
C15A51F4D95AA1618380D5DD66986E77AC8BDFCAD8977F88115812329ABCADAF
9CEB29E09A792E33194C4788261510E8B82A5E5CE852D1AB080F8E3F97843B17
28AF854C770479712E2A5A618FF3F138947E9552402C37212EA8155A2B4C4BFB
EF1E1A860AC2A2F2D25C1BCBD861F5D9406E4766C83F8A052743EE40BCA174B5
CC90297243C8C3A9D70992C1F31DC6753222850ECF459A7BEFF4F461EE965DD7
631276D51652A77823CAA8C4DFF3B684C59344553504742D31C0B69DA2958C1F
D84298CFCF1FF702B7EC5DB84C170590305569CC4D3B972E55D57FC85CD2C5AF
CF02DFFB4445692A49152ADE26F6A94321C8CEA614A5A206295152CE0A04DB2F
439C0589D714E5BC01BEA21F193023D02D89731372CD9172D4167DB96B594B7F
8296FCE3845ED8FAF19EF4A44726B51CADA6D39CFFDBA38C11C7238C738370C4
8FFBB00B9749C1033BF3AF51455B475EC9692E9E99F6A9098FADE1BC40550DBD
475801848196FF59D705A0D83B416F17437827D857FD477BA504F9CA39F74F70
7222259A3030A0A2B32A5790887B7DFD2C62E47353C3949FF9CB12318E5F3991
0133C32F21F1EB893470696BC9AEA20EDD1FB9C19AF299DAB254D70D389FEC76
2D8C23A8C5FD28B91F411CDD46C2D2491929FC3024998860E4D84C0C8FF53906
415947F14127DCB749519A1BF01CAFD6F498CE215EF889CE4952EF2037370BA7
C5B23A97D080C26419E7FBB1ECDBD0CA9C432E74C297CD8E181F6AFCC1913838
B487B839F7286C601AA92282609D8B3530902552E124DC9A56BA69327FF82C92
CDD4559E594CF3726E98460798513F62B64AE7F27B095730F96EFCAAAB51E763
52D79F47812499B36B89DCD22587608644830FE2DFAD32DC3E037C866AC384D8
8944505C62D6016DA6130901D8586ECB0CACA478A5F2702C85AEAE9E3AF87752
CA18F8147E2433486FAE6F284B44B3217E3C0C0C4A73D40777A8D987B9909D60
2F361A333DEF25926A0BD803BCDE05AE99E17F41F528A66B35883BBDE13DF3AE
0560FC23B372F205FE84496AB9E763D60F5E08919EBDA5B22AF8FF5C72F3B64E
CC35A852DF00B3D32005AC41454233709D1859700E576476FD4510AFF954552A
B5206F1B0F8056246EEB62B6CE3BEA6EF08ADA1D62412367CDF650F08F6DCA21
4F7DDCC1A0BECA4380C0BF6048C35C1DDC563F72DB2CC64166AE0FDC5CDFD81A
8017324CA0EE76BDE487B030827CAC23896FB53AEFA56D91E05F442A908B0FBF
DF061A34243CD58F88EEAC7B0D5A138BB51F4ADC62FC5890998A99BF236C68E8
75F2CE598267A7912B6B56441577355FF609202E74519F043C7C70E9FD54CF93
55971CBF35CCF0783D9372D902068E4B9C263C14437EB916B0EB617B45903D00
B61A7DDC842195B6EEF4441EFBFA69AB4A575A7F4F914935EEB58D14B825A78C
D741749E33E53942167577168E8977CDA919140CE900830186253E8716EED0CE
AB70DDFA67BB8BC1E128401BAB4E3322FAECB1F3B6ECB9945C58C63EBE2ADBDD
061D29416E68AA228B9C47E3E78CCF3AC2A0862BF00F945E02BE349DD3C5CA9F
840C218521AB6B8FC85ABED066A231183F0D89EDA83880A1B7C73F144857D0A7
6E12CE43B02B9A8F4ACE7B6D6D6E10AC863A858D7705AC9649DF0643E231A20C
F8B020E3DCF4EA89AA5AA9B8FA99033A2BD1D82FCA08E0962248587801B9EE0A
30A171047D9D7ACC225CAF76B88F916C276F3785F9BB82E89E7DC3953B7242FD
9BDD64FB6D29C60BD5FEE0783F087B9A52E80BB3122FB7C27DB3F84F0265F646
C9AC457A50995A2AB0B9C42CD79C58ADD1D5652CECD4284E2505685BB4388BE0
BFDE518CAD12E9D28736A12F8B970D9A5E77B36D31F10E6F46BBE5E9868BE0AC
B7EFB8E9C3B5946C93EB36CF6F13AC8047CE0BDD5171DD4BF6987E16B47B9A77
8BC1CA1052589CD17C22E8FC4F356491CF92851DABEDE2D36CA6FFC39DC53292
208D2144C32A7F3DF00FBD668AB99CCA7061E370754666B2F86528C703480897
065564762FC6A8A7254FA5AC0D43A5326672481FC77B5C6DD443EEBF6C360C1E
B78383F2027785B21955E0FC8A03DA0F4F7211B5B5CCC70F0731C0889F092ECE
D205F4792456A126D557A2711A96FE5C17B2F5BBD9D6563B2F1746ACBE5D3224
9964A7E48EE0F979F4F35C9E5D50FFF9734965DD455BA489824A87542C48089D
9B83A0154673B382D82FF96B1C9748E3C4B24A8842568A06F9172E848C18EC4B
BCECEB40C8CA2721564B8709C55F3EF42DD64BEC85DE4C810676D5C2A75C2FED
ED6BFCBBFAB32BCDC051BE408604F3E0156C50730351EF3D7F9B062949E00835
AE2BEE7006163F27C1F98F6FDA50FAADDE120FBB4F5D5D5FAE7204C5A1790D51
6C846CB94CC3C3726D8C2BE6F0EE26687FB6D4A3DD22DC8704C4BE050641A99E
5E09087A89275CA485DF41827BEDC7F0A98B579518140AFCB003007AC2072416
D2DF35228B6DD0FEB8FA92435FFB7C097451DE6135B380ECD65FF372CB9CFAF7
DA3C6A8B99E7CCB89711FE5032245558D06E39635C73B2E2044D63EA1E87EA4F
5A69C31D39F48EC18C9D0A82777A2D6E5DA4C3E0C7D33105B547D4D7F16025BA
C0C1711E4187277A1D06108BC0EEDB2094EE9539E62FBC7D4000CA147B3B893A
2A9F4DA5B422F7554A560B9574D310758A65B55A97C79248CB0F0947A8D096D0
421EC9F319725E803F25CB8699710162868E39EC29ADC4749666E97F05845740
75B0D522D8031BD6C638971FF7B7526AE1FA16D3E6AA2477BC7B4F8372EBF6B3
3F5809E83E336BA0A926E3947ACC73C5A1B3A49819805955F88BDD2DB3E2E6AE
FE15F309204FCF98FE6FEA6CD8B4D8C00C2DDF41B316BAC0F02F18A10C4F5544
E46BE9C7E0124A96E1A9DFBBEEFD6FD53E4A2D9E72BC0732C66CCEB9708B8666
C5B4C8EEFACDABA5383C4D4494F952ACCFAA80A497C2AFDFD3FCF015EFF6D202
69A6F48854300CBE0707484BC28AB30FE65BD493428FA9C3CA14AE654EF64DC8
37018886C794DC8461295DBBE19BC600A8EDBF4636BEC75415E0D0567FE96950
1740802ED1208E8C5740FAFE5EAFEBDEF08E8E702B6C1D88EC186353B9C4B2BF
FC7E8E97B40B8F7DE6928EAB4C6869A7D80917B3CD2232F5C443B6F76BE58FE0
8AE1F3768E0CF56D31E07F2159A13F689DB83A8D40EE831F2DF576A6AD0BA92E
C98EDFAFF58153A2D01867C9436FBE817F72262BA4685BAE8F5E1F6DF2902AE2
3986729D9C0AE990AD469A0E0ADF46814C633851AA4CAE0221E2C18D397E8944
ADCE602AC0B590B001C6E35F2B6C070E68F29FADFEB0EFCB72E245B89BAC44C1
D73D24EF37CE87D86E06CA8543BCDE1EF37F75F9D0C130C95AAE7E10991701A0
E5B71D89422CF3CA3BABB677BF3E255DA2F8FCD16F7164AEE47D756BE8D9FCB0
86B6CA5488F5C9EE8BD2EC12C60738F14FD7A3F5F99EA391E138B94068F5FD37
86826440805CEF1FF0096E052661168C4EF4704C2E0B76AEC234987FE1A8FF45
3F92FD7F6047B7A0F59F13B0C246D28AB285347F32C5F47F1CBDEB01E705A5CB
60008CEE002C5EB6984034A62973AB750F8E6B801D711CC531195393BFFE569C
0B4E3A4D4FC98A4BCA8FA0EA751A9BCC5420318F852377C89EFB05AB4897DE09
C5E6688A87B213A6D2D488E935AC41D8CF5C0579F01B9E561EBCC5F079158F05
8247638554BBCFDF0F94D734738E9A2E43A2C2BDE2D931942B5ADD58AA941051
AA03551E242F229586D10B9B0B341AA8671904420936DCB7C63267C60F0D866B
63A9575FECB2016CBFE23D63D21EE42DA19A0BBC5874DF3B2B684EB4083457E0
D693A84EB218C36C2E0D8A1ABA7AE15E323063AB72239292C1631B7622722474
0B47C84112A7BAFB92183527B1B7BB1033B0C300AF96E603039AED5C5481E82A
589E94F71BB6894F9A9BBEE7202BF21FEBB7A3BE23CFF6BD8B893CC2869D621F
881345BDD7F757E64D29668432ECC8566B1E7D694DDBA379CF0F548867019E33
91EDDB69A30B0DC19D27BAE26CA7DC5B0C8AAC02EFBF023FB36C9A85D160B7D6
78AE0828A605528322E56B288A499FE02BD8A55A920FA250C7417AB9906ABE1F
81AF3B8BE3CA55BE5D1F91FFBA4AEA2B269DEA487160FF215002710956A270EA
98669617961F770A85B101C25D3338326729D22ED3758E53428B78BA16A290AE
E1C86A5F1214B9B8B9266F9EBBA5B588F3EAAB15BCD1985F59A0951074F51AE4
7C20BCA34D37F11AA38AEB9ACCDBBE13ABC4884775A83F55371AAA95C99C31EF
BFF2F0F7545DF99C7A6E08EF1A84D603E9919DA57DFA2DC040F3C4A660E27A52
2B83242C3124FA2ECF3E1324F6FB5E929F98056A3C4044429AAB1FA201AACBDD
A261A409B4B4DD754BF8D9E9B029E2D7BA3AD062705A7CE57BE99BAC974AB2A1
76B6325235AFA450555F98CAED6F9AC2C84D447D1E2D1EC9BCA2C0030B1BB75A
0CD6FB2A4DAA7B93D235A060561BC4619B6D59369473E546D5F22E4EA7EB4CB1
2ABCB985677514AB89A3F05FFBB4EABADB2725A9452350E54345F71FEE1D0E7F
55AD500C7FDFEF7F3CA1EAA2C042C14B7AAE7E656FECCEFF93FC8D0588688790
04CFC12980C2F1A0F3AB8BB024F37B08547612F0AB6A9CA3E9F6E95396C74305
152F51B0832B3BBA145D1C902FFB6F39C288F6DE4BE4361995E03AE8A8054A30
8553B5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: URWPalladioL-Roma
%!PS-AdobeFont-1.0: URWPalladioL-Roma 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (URW Palladio L Roman) readonly def
/FamilyName (URW Palladio L) readonly def
/Weight (Roman) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /URWPalladioL-Roma def
/PaintType 0 def
/WMode 0 def
/FontBBox {-166 -283 1021 943} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AA45ACB756B8E2BF5B37627E46
DAFD4A4F741A859BB5F7D7C77FC7AA96EE6AC93C06CA829B81FE31E32D59C6DE
B1BF3B6CCC5C3C9296DC86D01487F08AB668F656CDD88EB816AEDD1EFA47F014
FF598E78C978DF18F8F66057351BC96B48015AF2E09E3E318053E952E9AD4037
BFC7EEF9CBFD7BC35746565B7EFBF241639793AE357220843147FADB929FBD24
01C88A382F00BF79554D125C543455330002B0FE6D229830470C78541E78DAD5
3E7C1A619B91215AE025F81561441BFC9ADA446035B8EB9C3D69BA746AD0CCAA
049D1FE4D905DF3F48D22900E02A23FB23F6B571DDC8B2CF7008431C1EAD7F6B
D92A2C42CAED94F9714F44E3CE31FBAF23A064AA2A7F13D6E5378E28539F0009
323A0755E58BA7564A408B142C230672A423DA6A6E54ED162AFBF8FADFA75B0B
FC648D5DA6EC31251B62B9F619AD9460876EEFCB8F9D2369CA3055820306533F
3C1D47D5A2EF97619FC2C780BCD9540A820748369FFDAB9D52492F130C0AC3C8
E0C87377DA6C21F1DE429C15AA939877876F84605F6785B5ADEA97321BF29DEF
3692AF535EEFE801975F94645272142128A3FEC8B1BCEB6E57B83520B5C4DD69
36DB8CDEF6E49B8944CA31C59F8790CD3FED58F1182D9AC6DCB2D75B4881B430
C67DB769B4745EA54233CDFD5600BB2A96209A83FD04C13D4AA4AE27DED97D25
93F6FDA5F64711EC7A2899AC98BD8D8879A6A348265832994C3BAD80E1D12291
CB05924302B780443A76A09E1C27E8DCDCD87FFE3BE17DE0421A47733C2BD723
9C876942155834190F65598810AF8CAD9842F8A1E3BBD2AE3348BD8FC9189FE2
ED5643EC4D87148775121702EEB7639ACD80EF4F07542BBBC09F98F81FB91A1C
89C691BF38CE4239B11C1C0D9A6B864753E204C0BCCB093E139F9D6104FE0584
DF022C621F86E5BFE2E047FD560E8A89B3872C87F7811E9EBCA9CF182472841A
88E7C421E5CE69DAD123B88D4E6C0FD85C86C74435BFCAE28C2B5CAD57D91A9B
4473906D044085B5336B066C6D9CE994D2B333F470AD32D3BC28BA2D699B7AE6
2B689CD50CE2D458501EBCD2381F3430C3059EDCA22D9F15CA03CD18CB160E59
C0E960F79010DC1E9EC40BA6914F9FB7951CB4D5AAFAA135C17D5D64CD848A32
C71A5C856CC9C94F24B6C9AF854B83771678C0B0B4C6A4D9C05ADE69E5C04697
8751F11D2AD3F78D45115A0F0D564DABAC8AEC177C91C2946D5B9FD8DECF1E26
FAE568E3CEE9DF3897D4256F3134B7F3A134993536AB81B2E45EF42240778A79
4A4F10E1AAF04B24CEFDB78D3C62F09DB1789801729BCF2F196EBD7415B504C1
EB30A98240A5DBBAD1FAD5AFA9BD1B7B08ED668CB7AE8D8FD27767696AF2A888
D2012CD5E72B92E80B1EB0FAC4FFE1122AC115B0E9987359D656AB8E6CE48266
18615F0F6BFA0F998FBA3EBC109801F114AC328677F7767018909002301A0AFE
9D416B32570E543CB79A87ABE184590223348E51452B505DD0522F8F04594611
58E05FF7F59AE40665B1C9C4B100BE8334ABEAB252698E633408FF890A429693
98178E8E9086980397402BA2F164CAFB78E4914D224B57B06250F720769FD0F3
D31C6BFE42F3BFB8ADAB12E05085C22882274BCE02E58CCB2DD80A97CA2CC3C9
71D049B3CCA668E5E7DFC7B15FBD608B0262F7CA566AF899DB068706113FD771
A03C633FB7CC59DC52C83F609BB496317EEC7597BC2C48552E6F3E76B34C04A2
1773E2EB42020B9DA1C53FA40FE42FA89CAFDDE49CDBAC5D23D5D91FFF4EE43C
79B2D1BE3072D6898B2707243F409731FFDF5CC59DD39D8D40759EE9B3BED754
A63D9D962E225BE4CDDBFCD51A4E1260CFFE758ECD59EAE9ED878D047D2E7467
A552F704EBEAF9F9AF6A649DD0F7E5D013A694453D99349FC4F65130127A3BE6
7847808336771B8093FF5CC9FE8D9AD16D04DE108727FD7C001FC630378E0843
451E4D9840AF87F800D3B6E0248AC51AE90769453DD157B162EC914D673AA42D
3DC00BB1E2FA5671C1DA26CAC3FCFFE7C6728D9E330928C1E5FF577B80FE1C82
074518D7466BB2B91FDE11773B6435A5C58CB39775D460226F20388BBF95B334
2044FBBAD6904EBBD089B189203DF723F44B7870557B23B9D45CF28667266402
E11621A5A623CAAD1FA80328613C1D1030F6CC9B504E1FFFCCA352431A0D5BFC
FCFAD30F86768E3BEC5E192ACC1FBF937035DB4920F0B8ECF0E0617987E8E672
F4865524FCC099290D716C9C1BEB9A81479EF18DA2237CD71F4CF359B4AE356D
1DB317D48BFC971B79387EB20F148A6D598FF2805240F62B2393161B2701068C
DB309F3DB39CA8CF2A2177502BC2879708341E84D32AF03079C8A53CFF146BC9
BA85094B7AD0D23F47F26B6BE853545FBE99F703A6FFABEEC41B415182F40F52
3E462687AE0F3B838C3B4527EA4929E4C6E6FE9D66123C78D762FDC1622DF8D7
6298C73296E42990B31A07577CB8A9AB3E9D95324248249AEB37B5B9678729BE
B61E702A78D3660E42732DC0CA8E68B4823E482FC5A3EBF6F30C1D2EDC39FF4D
BC037F2C19602304394C529C4783A7ACA621BB7A2850B9D40BF976BB3F13781C
6F65C0854708346913A8E0C73C256A2B140AC79767C883413632D88DE8FFE4EF
7005FAA7AF982C172A2E03F8F09397A487334FDE106450D2E633583994419B27
566260F6ED768BD87C1879FD06ADB7C99B976EE2C88AF259C11067EF1272CE4D
E2AD8E509B7F1E51DC0EA1314D41EC6841074A8E0DC7DF3BD0BD84389B4D97DF
A7B1024E22917F39E015E59EC31B3EE964CD0E9A173DFE09A8210577042DBF4B
F45B9D80E84C9200B574CA2EFC9F6DDE8FFC6DFB3D21373B5766BAB99BF06D24
1D07496805F58E624078BCECC9384B0D14AF8EF62A0A7347F6A3ABAEF099DB30
85D6BACC2E900088AD6841C7D22C0071F5BF6F6786D9CFC2BC8E99CD9A8FE88E
81759A3C57F31A1B749A92CE78B4069D631047678177F03AD7B8BB595B3A9549
660A19A1E6464D99B6F77692F226175A38CF69B612B32BC4A432F6142FC8CB29
49498A322E6C2DD254985D1DED29E1B72F8EF51ACA4F77E2C0A459FA2AEDE315
E9364411DBD79B6FDA788B2A4A0EE7735795304A6430A70EC98E981E7921962D
745036951CBEAC78234AB640F5B4E5B6787D5E769003941B363A7D885B414B59
1354D461B2681AAC169B271FC609982B9E69DBC55E6DD283F1D3A52C5BF591B0
A9B27B9B609B64D559B0F0A75EE969665E34962ECA8E4E071F214E6FF63A3860
6D791E652BA9425D440C556AF480C03BFCB416F0F3C758E8D4A22604726AE9F6
AF49B864CD07DF756EDB47A8F71C3BE0DC673E8C2374CD62184F41224E08003A
D66D4825C650D6B995593B67BB57B6D5F857BD4C118AE533F46E819D11CDE003
14D4E0DF2FB49F8BA556DB5633EFC8C67C61E95290E11A6BEC7C285F0092AD48
ADCAADDFE69C00E187DFEBA20450BF2D7051B1C5C921293446A024AFFA9AC0A9
FBE3771E8C46BD42E14DA219B27B514F98284BEAC44FBAFA2ED3C350AC0C64B8
24E7E38C93136CBEDE51AA6CF0186BC094CEC2F97E5005FCED9FFC797E6207C1
BEFACA6E743770557EDCAAE9A2E23ADE6D0B92057A04BE4F2F53E89DF89C13B3
0A85ABF31B62E3BE1E806C7855509CD57489F07108D995887AEA9D20B3C1E85B
4C766F93041FAA0DBB196B0A220B8E3A9FCA62D47023463DD07C26FF1769A4C8
A2518CFEEC51A393401A2C3E8EABE227B936313AAFB000437E042266D191D963
D97E95A2589E5DF9D6FADD368A715AC0D3B7A1ECFC649A61E39641465400B651
11C0CD77AC6662DF2F9C524527DD20505648123C0BBD2C7DB1F1CC74B4A64602
A7207A5E4B76E2E09A64136BA119E4F7B9DC42002C4C553EB9111573C1FFCC36
79ADC9A0298869ACCAC8EC6AE482EE93B3A900D0164240FB570FE1D7CF1A12D1
6A4EE7037A492C6E299BEFCE25597AE756DA5CA9D1FDA61E88C998834DCE29CD
3505992AD7680BD4723D09BF281CCA25DD384DCDD067444272BD8E263B7E189B
065832EDFE86D243B72B3E700F97E1451C4DA6A0946805D0E9BEA948830E6987
404A4ABB37B2BD32CF9286D250ED22087A14C454EDD9570EC1EF7BFE2DA4B5BE
5CFF57FD2CAC717013E61F8FF3A115780B4E2257FBAC3970B2B20819C87E85D8
16CA5EBC25D24A2FA55862DD786E2770228B5319E19372F8A8F55F7AE5824893
E3F2A4776EB709ABE1ECB515BA32E9A537E4183EA50C25F204C393931F99F40B
7D04BA3D5612F7522AACABC814AA2DAD380B69A047B8DA4F052F1D50AA8767E4
FAA063A02F0FEA69C9063EA1D43063342040C1351D1BAF3C46AC27CE1449920F
9A073DE8A77D3E67E54011D9DCF8C70A6E4AF6B269BAE0CA28563B02CAB57B9D
C5BF98B15B08D0B6E2FD051D5AA7DF9BCDE600EF35D20AE7CE47AE35A156DDAD
111959E0AF61865A3684B6E0FDE48DD0EC6EAC821F83722848601E71F3318F41
061465C24DAFD54593AE7614981A0678BB2138370763770C3BF284B76390DD9A
A7963A47EF2E39A813FC4891B49EF46BB96E974FC51702C2C33127357E9CE2E0
925A350676B2C4890EF433B6612A7C8D7CD3B041C16FD67CD878035F25FFDF86
EF1ECB8BE2E564A375F6820E9117E037C77F024BCECA515BD60076098A654CAE
2B7D54F8A7C1B4C40FFDAC0040D9EB9C436FDF8904A4BAC6FA1D90B17A57940B
DB45DBD0D04A282E37DDCC88E6B3E92C8F04DB2D952FF423341BC32B742E2379
30B6498C50F36EC39D1DFCE54BBBECB23FC1C7CDCA7D5229975EB19FBEAB936A
5CD8DDFED8FA29EF15E654020F34D2E4564D557FF2F59C5E6A27F6FA044B2856
E5573D30CBD27D95C4B672323894D5B24CDC33D18F40332E781289C284BDF5D1
E26FD6A5236B90CBA876AD485BAE73FA5299A6343F5838C666B61470DA712B94
7316AFA38D30B70C958A3C0D7CB61535E56121B290A62E6F51A1FA52F08BAE1D
E76D4CEDF6C1C609350E18E00FD0752A640EAB1BDC36EBE59576BE157F0840F3
EF427451AA0BD9CA1FCD7D86C31D12776C4CAA93CEDE2B7FF63FC9A763254F24
95AD591D39A5CA4B4ACE447ACF9876496B13818E067D3EF1DBCB5E4FC89568B3
5A3AA86DF0E2354CCF5C5EF4C9F3DF525CF8B66F3DBC506B313D823947D0051F
18B5373B7CA0A6537478517E6456B0EBD937AE2B584ED999960282C49EE6ACF0
944E02A74E923BA1B8451EB8C8663FBE2620AF8DCDED6153BF5AE98A02993C18
F5228D9C3519B73CDA023468630AF059DB826E567081D625B60EE20D1141AE2C
28F3C3D62F90C2221D7A8E39782ACB8A908C5E8C355DAB38E029492A3761D716
5BB086AF5244AC88A48C5DEF86D09D48A6D111C1B4DDED2D1718F457722DACE7
A51B93C9AF2FD3107EB16E658A5ED2AD984AB22B92C60EBC22673030FCD12153
EF75A00DC20A649218FAF36BF07045D62BDAC3AB80DB4844F2C3DDA83E0D3865
ABAEBE8A6A325CEC720FF99651B8EA2DB2812E7FCDBA672C3E6A26B4F69672BE
3616C49C07BEDA6A23C990FEE5DED4CB035948752BD90CF4641D3A1AB90C8C47
A8A338C4F7B3F6AF8E6FC439F43CFD47832A28C93F537B8F053390E2ED53A475
F388C614331792901E33FAB46F16E05C447E85BFB421A319D7DE21E91DC93BC4
29BEFF450B6951F120944F679A2FD2A0910F421C621232A49DE26F3F7182BDDA
A77C93DA2ED4351666F90CC1B24EEFC1D47A92BB56F0352BA829E167AB5A5F7D
6C95E27EE33AAFA730E8E2000E51275CD0A783ADE845BF88E18DC3731E91453A
73CEB92BC6CFDA2C4C8749702D9BB011C7D04A81D8A671BA39880E2C98150B2A
4EDBF125CC1C30D674BEEF419BE8E5B70A0023068437AF28BE161CF8FAA12AD8
73C74850FC8B69D15E90A59C5AD07CA7E3A6500E4D89B09DD5563FEF3467B4DF
7732AD755319FF7DFF97FA9E86D7C5F02F2250BEA09653B74753FD7BB4C479A5
9BAA3A105282DF6A35151D7C34EEEAB5D91E09884555A1C85E26A087B2C9397B
1FFE3252825E52935EA24E96E00E5F95EBCECE33C86CCB5C80EE1E1AA94D1F8C
50639747D4FC9092E14B0BA7554EBADBDDBD21A64F1A8AD69F8E5C9750C4C99B
979F631BD3814EF639E5FC79015FA7625F2D535767C7FCC48150F1DFEB71B17A
B6126C864AD7A343F782B071F59BB055F151B8486E0E1E5D62EE921BA1C11EEC
B26A0473B30C8E4A400571DAB6F722080B1908C5200EEE87CC6C676DA85B3AC7
8EB1619EA7E09A17E7892CC8930B6C0481EDF2724FDE4A5B2FAB1B41D31D0D0C
E89A319CD781504EA2CCCCE5C888A572A7F9D3FDFB32501CFDD650E0C997B175
48D1A3E777E280AFD236FE46EBAE04002C119C74A5EF039C8EC4523BAB1D12DE
774C78A0BAF50693838109D0DEAEA56974B27AC623150AAB3E8287C307F553A7
69F6124346CD79B5F21694D87989110E575F71214886E42C0E595681980B7728
5AF5BCAF6C0D9233E1D1F61B549704DFF82BF14931B22B465D1EA917B10B32ED
08E70482F0658D21297DDB8E781B16E78E2D2932F4590EDA5DF4A1E25783E9B5
CDCE5F2B1CA7379A8627F62C3D658462322630C2D4515FA048047C0B78FD1C24
4BB68376F4A6B72B91DCC5B8A7A8C3B3E175B1D22F687066179B05F4EB955747
2998F574AF99DF6CF36D15257F758B5D150CB3584CB2DD40E8B29EF1F8CD6F62
21B5CBB72AFCAEB3130AB232E69939AE5D6FC720EE76C2804AF5DCA6A0F79002
9D97FB8286992F49CD0A2D2644A1F10D20FE170CA56A6688B2F97A82DA55BEEF
A17485FC2D8977D3D8466485E76E3FB313B37C455191E057F5D6E69C678E05F8
68C2ED17BD1FE69671678BA5B3A01015244779FDED72256089CF8C3FB1769452
632D38F7E2EF4017C6AFC828B9D4E6FA617AA5E4D5A49724B7C251841AC84485
E28084F09311819C67296CB735C41F862CECCABBFFEBF0F70C0EDD576583A6F6
192952FD53DF52FBB756C7D21AAFA482B4A7DD0E27D8ABC8583B1FB0BC61C722
E20FD71907F2CF57CAD8667DFD674256D084155932533218338E38694FE57394
6F9445D28DEC20233EC224762E467D2C62B3B23045F09209436C7EAAA7F093ED
8AD1FF483D54921DC59103E42C36B213F9C7704512110EB66A0EA595C5436389
55925AB08B3BEAC8E02C097DF4B2A85C797DE5E7C25DD24D9889E0CA5E640AA3
6E6BE2E5186292AE697DD80428CAEB99606BC079F3A0B8B5F70D97A0E9B896DB
F8B707129C8244F42FD757CE24139474F1DC187D03B7892E8A8974097A0F3E30
FFE8EA6D1A87561E6E4CD9500856589AAE84BDB3DCE4EBE2C249E7CB351ECBF0
AB3D57FC926C63C7418B4BCFC127CCAA55742540433187CDE5C0831925ABCAAF
29E069A1C60A2F0B1EA9B65541298379A98F8FC8169F6CA53AC196D0D29564C5
44DBFCE1ADA35F64393E93E3AE7E97E9BDD216C1D27D4C68E3F319A59BD87CFD
884D20698E6DC6477B2D359A05F39571E4B523AE3C895912EA1E6C6053599475
4BC83945F39AEF223DB2AC8055C6553DD7903A49977230F1F85044E95BF43F40
164319055DF4B81270743CB2F9CDF1DCE3D915F0F79509EC88FBDAE805AB5ADE
4422DBDA36EB00514439893A89D6E72D28C39E8FA4E174E17218D8ED6141212E
7F76255229BCB27AA1554CA4065043D5B388A0202CD3F14B50C6167E73E9B60B
2958DBB188C3F36121DE09572D78139DD5C2816F47E2A95DEBBABF1503D2FBE7
8C1B072B9412B07D7887C9BDB503DE6673BE9126E6179FF4C5DDC045ACC13539
438BB83563D5DAA8215ACFE498A4419A69F3E7E0AA72D8AD26474A54037EBAF5
E5D307C877767CE1B56486AC17A6FA7F657D1525E30092E15743EA001EED778D
8F5D20963818BB3C7190C5586A9E13D21B18FA38D5FDCCDE87B27999F868C594
6A2DA6ECFAA0C0183F757CEACBD342C33441E29BC79E5CAB3F094943D47D7004
9664362BFBF455B10F9D0BD4DFD06288B9B26C152C003677C3F244FC8C76D967
3891C83401DE0793282E80495ADE69D6B045FA34328D15C875A5DF621FBD8416
3C13A65128994D74CAD21F2BA38348EC06A534F29DCF33411B194DEE2EC1B99F
36FA1A16D9D00D7B576B958780A86E89DF637B777B16C0F388D3493A151F90B7
8C210ED9972B0A84BD44A23F67673A849CA6A7EBBCECF6D1E6D060743F745236
3DA1BA69C728B6B4B4177CE8CECB8FEB6EC5CB1E2301B2DCC11D878C975E3A18
19CB2732460837EDC62035D7D232AD000EDC4D152327B87433F828DE8110D58A
5C22434C5FC148B139567BD052199E7ECB02B4BED28A8EFEE408348CF978A6C5
68E9A7CFFB1F54474C29EE038E8DBFF2EB908D91B245112FF0308B0F7256FBC4
51E7C1EDDFCE777B796C1D677ECBC8F2D72214907842316AB9E1AD2F461D8E78
1B16E78E2D20F0AB237053EBAB1A189F424831752589C17BBA71AE27B27A17C5
10EB9563EBAC553889D1D79F2B876A3089BD5BB4A6524EF84B393EF336763C8D
F24638BDB3AB0EC87C8896847DCB297BFE9336E593D4450742EF9088E078DA2A
68DC4D10D701CB38C13BEB22E4DCBB78130F07AF010FB68544E8229DF99CB2AB
936C82F031A5EEDA2EB151D457842AA2D1D6E3D3A60EC76E1544A818FA973CC2
DE392214AB5E5BE8BD28E4C8D3FD646261592E87AC2BB978077B29D96D1C7F27
5360D8EF90392B001CBE8ED52FD59023520DBE906EFF044AFDB966CD2C1D1AA4
6B8E7B55CD1F7001D83B887C55939A73441AFCF6FFA2F4520D658651C4ED8341
D2893306797162B67756D65C6A9F553CB5B1D771F9E7F93FFE1AA93273DAC2A3
FD2C49E0BD2FFBF80C756386291444CF416FD16AC45D2A4FFB2737F4AC0D4C8A
2199EC1C82966D19BF986954219C25778226F48C5EA4079868EF9367C5D27DC5
1B407D44468B5D789CC00FBB1FA9612DD39C767BFB2AB200348A9D78AC1D3EC5
C70D329E38BB435192291FE509CE9EF796BBF90289B1E585B418D14BB44E5A25
9B7240C76F0A2452DAB39779E735CA48CBECCDCBA5658D8C154171225377FCCB
CFB8333BE934A979B1E48DD06E3A5D30203F826C28A4E2AE13F282B0C2E5DD7E
36C49E6E8739BA38822B81BD75C48C85C85E6CEC031BB9D83FE3497FAEC1E183
E43ABD401F41B7DBE9225C4743D751699EBA194A2D5E77F5E826D15A01F2E686
D7B7D5DE0E55535DB8A9CC9957076B316712420B4B56C7F519435F2359E372DF
28BB7DB86376BC7F7708D9DCA348F8DC2BE720FCF55AEA0E7CBE23CF6D927C59
A5807D237087EDC522B8682FB988983C1298ED156A0881303EB6F8EA95C1625B
55A0E9FBCE5C95B7240F7804FB337194AACB4A10A9B75142A4F86E27E5BF5701
F9D4D8E4170262D705E1ECC35934343FFF768A9C7C69C1DCB4086F1E8AF162CD
D5480E97BB4606EE953350A75AD01DA8E2D1CEE3CCE7DBFA0C956505B6DA60B8
A8A3DF0F0C2FBBF92B0C32C6028CA6D11849D17B5DA8ED647B79AB412E0D5811
1FE8E9B9CDC1B4F27BDAD2A04EAFC90D9DEE76C17DC555BA5E53124F7FC66680
1C182AF99D4A8A3DEAE2B9A71ED8CB928BA33D61D0F17C1E7D2A1403C4ACB7D9
20623BDBCF293B2A872B82D007FB89B9FA1CBA7297A13DF66327535C49207CB2
2CD7D371D2156E4C040D7FFF63A2D342F765C725ADD7B0D3769CA55C5BBF59EA
7207A7BCA4E8C577857F27E6671E663C8F925F1926F3A7B5A41297A47DE7D10E
A7D651D211517C1CFBBE233249953FE3259DA36A6265656E6A8906B4990C2133
C543BCB73475B260AD139BFB95228A1BCD10E7A5DAF8B7067CA70C78AB66FDC9
EE9B42E408F434B46D861BD97B7CF8E99E0D24D33226DC92437A2070B53F465A
C16DC4F2E393A4569D0D01FB1360243BEA84B47B2F83281B0E9F6BDD30B1A7B1
7D163C42C5FEB387AF7BE3FEDF65E84A150AFA25D9A0C1314CFB1D9821D7F921
90F1A726F99E5780523A7ED3E2E12FA3B8659DBD711A9D4E22404CD779900A41
569307063E21BA861770559A07761684D721083208D76FB9A7E21431D00C7029
8B5350D1307DC5820AEB3F5A7835AC67C16221ECCD01B2B83E71DF2CB89CCCC1
B5422EFE46B38FB51783950C394DAA497B71C1E241F05748E61DD82B73F3E355
0E5775B77F6CBF5587658D9852430E6A15059F914DBE112C8396A1FEFCE1162E
D96F2191AEB4D4ED28D91A7AA04789A9620BA199EE75EEF8E7991AA1FC412895
108F1806CECF844CED8E72DAD4ECC30A520EB726DC2B062D8736FE328A05551D
9167C58C91B09A87038595A6027DB3D8AD1A3D7B88C292D2EE17E48118811EC2
CC08A4032EE691D9CDB170A7583D56A2B0C79E23925524EFF4F69F2A35B0F025
446BA59C36FC23F9BCFDA557E2DA13D985B086FC90BE4C6D7031CF8485F8CE6F
C7449E9295141D60E614A8717EEF6B3530DE02B5A52C31719E5BE56FC748903B
E279D2E5638BDB6AEC7B6621057CE581794EF52B5CD6FDC30BF9C6BB9A847991
26F7B05B4DB5BD81850350E764479A6665B6A128950A6B0B41AD5DC4EC93B335
05DF47884B6AB0805F74F65BD4D4F1CB3CD4A379FD33EAFA71EAEF13324640BC
BD838A4EFEBF0EFBD42DAAFA2B031F2E7D30D2623BC8DAAD78FE8CF2271C8468
FE08660943BA1FE181CBD21181D6922BD02554B579A4C86D668AB159EA05EED7
688D001714C20582611C3890B45A88A28C11C7501E7629654A2C432454796DE3
C76D15290AC846D71607978912B7A6D47613FDCE5703033052D848F31725BBBF
84FD9994054A585B994DFDDE5C38B305841459D20BCC18C1C11B96F12A82E36F
57C4B309FA76BC36F8A7A3493137F59EA50D0E26199821C4E8B32B7BE01927BD
85A77F10017E7958CAD3452A7FE5A52723D18E45939BD4EF87EA60BA926A0549
9B3033192ED702CF2868F8A1A0E8E686759EAC5A51D80B76D9A26F35F91D61E5
E88EA638EF858E8F7FB80F46CEA7C83FB421823B47C06E54A16AC3011DA8D275
8A6D55D1500E5926AA784E56A91A507795474A45F732CE2FFE1BAEEA89AEC3A3
3BF68EEA18E6E0621CB46F6729D0FBFCF937DD3BE40AD438CDC562429F428A09
82A597DD386CEEA2841DC880E06C858AF7C462A9DBFE25A6241A9E8ED9817152
B74678360C1A0CFA44930D68F16432548D98308F509BC08FAF9FC4F4CB3009E5
3AB8A422796A9C8D64E0977E804C3B3DA78A0B3D420184050281FAE4635DD796
98A8E295929D1DC7351A1D262391D617E104E90A87A7E88EAA6D75A0E9215301
6C6E3835AB4FE145BEC6008F62E8BAB5B0DB198F355CF4F5ECD3B76F7829F28B
635EC87CB5EA3E23ABB963B150FC7D9F41C0E37470968B5E312EEF2298017C93
04EC972BFEC11950BA2C64A70D54771DDE1EBCC751265DD59CF4A57DDB313CD1
D23D5C8E17CF1B43A482C44FE52E57AF48D672502EAE18188849E708A4E69F2C
5A3E08AAD4A9BBC25A1EA73B5CF621EFA31491F5716595A08356F0703972C549
C70C22568949E624D8FE780D65910243575ACA25C9EB360E6B5746DDE2AE0B93
554896A1FF99CA74B2F319C18497B4850BDD181EB8A96ABE64730301A06C16AE
2A122EEAD0BCCA6315D5D70AC07AC571FE97F0350982E4BD50DF4B609AA7E868
3F0D72BB9334996DDCB190243F8EDC8BBD23B356B7A1488750A4D98DD7966737
1118F61EBB5E4F958D452D448485D7F64F8FEE8212CD77213B32F78DDC203A17
4028CBB2A2F2361411AAEC34A9689D004933ABE5E1D920876CBFD7E0747745A8
1F5C60D50B95E3012F36ABC8703D5AEB8BA8BB09D492E1B65D16FCEF1BA925CD
13FFBAAF86E40B3070A8741843FF539DBAAFF593D3F0E6EE31D084043EEF7FD4
F69F54AFD34590E91F9DB45370B2E3DFFAA0D2AF855E9B7021DED17A331A0163
FD799388EBE7A4098CA65C48B5A356C589B06001B3875EE2D065A922B8596AD1
9EE7D28DFCA3321084D688FFF30297DCB1D2D8F1CAC50887F9AD1CDFD668BC7A
C6B5F9BE51F741CA511B6F464A198EBEE6C1FB7CBF1D497704AD5892D7F2E601
3A1DA1921811779DEAE43472BF8916009390C81AEFC50FB613D3BCB378440713
F0485384DDAEA17FA73028EC199D313FE6C8A51F12C7EA89E4830B4EBF904E6C
116D03DF2D24D3BE380A957EC787CF4F3FB177952A40A24492F894B706489163
0F9C4A607450E8A533EB269CB62716443D5E42C25D0D6F49D45D55FAE48AE214
A93D432EA7262F03E87CDCCB423F7825613A3D37F1BCF32EA6822EBBB7BC011C
0C7A43011E721B992A9FC9C9185C2CDF91BA43E1FEC4F95A060377B9D1DE5063
88D25D4F1028B02EEBE98FD8CBFEEAD82FC6B0B7301F320EF6DE93CA18821F9B
5D78D2D2CAAD99CD3BDEC1DE0131CD1173F7C317CABD60326FC11D7A06139A13
040A19A884C4BCD2C3B2EC0D684B15348F4B09722C554E8960AC2F71BE066D3E
B7088158DAE228AAA0B7552866B7E26858F186AA9D67870D9601C38464DBBAFA
6249A43314EF97151D919B16429A164498A9C9E6BADF717AD3D206B4C3B3B388
AAA323AB6C18D6544234C00031E6E009113C626CB466950C42D70641EEAD8943
8ACF1E6990F38E5F3B91656FCE1A7A0D47BB7A8C7ECE88ABC74A4FABB7DB713B
3520BCA4B20D21E37EC180FD1E7F61223A7073ED5368B922E9E2DBD3E0BF23FA
008BA70185A0435FED7C1E74E5D54E58AA6EDFDE4C1F23B16A9440AD00F6BA56
01CEB6D079BE8677AD693098FEDD429B1B1B85D323AB30C1CBB1ED7F6D53F76F
3056C27E990143B213A287F8D31AC42CAE2B083A43796966C6381B934EE6151E
1B11439826D9CCD763F5BA300EA14A3FAB09F1A5BDA9010BA5FCB0794623D99D
98B71E63B69BF99C8690A47D493EEF843B32B4DE2D3AC84FE96507DEAB3539CB
A90685C7C24E70ACB8EDF78BB96076F9980758AE68D6587EDE41209BFFA2DC19
14076E4A90E27C28E12557326A69AC45CD6628ED9FE3E6EEED340B65FDE54A6F
953A414121258A9107BEBCAD433BBF381B0EFBC5B208E3C7A43203387536DD2B
0D3DA9613B7A10D1FCC77570DB7A6EAD741D0934E4526625912614A113A0F52A
9F2FF1A1CFA24060FA7951947D838F69F2E75B4DA1CC9BBC8863D02E7CBBBFF2
73C73FB0B5E4813AB63BE1CBBDD626883D5D0AD2625874B098F7029F6829A6B5
5DCA316C0E7FBB89A8A4EE1C3C437358A3AF8A5C4C8BDF7D65FE2C14EB00C07D
CD765139F5FF255FDDE3EC945395A1E79173A28874BC99C16744A62BAA674981
85E98E9577DE92AF6A0488ED4A5E1BE68DEA6CBC96DE8BEA1505CA813819D506
476C8F2641A0331A1B92D3463CEA7D694F5B859A4F12B9EF2A2B545375EF0C66
0164205012A9FCB946094665AD5E2547BE628F16ABAFB6B10D6B81DCD529B0B1
0D5D491BD99B0463438831747B69BFA50746142F8747F8764C03027D90D62C19
991EAF205ADB82A5913B5276505BE65E86795E212D31C1569B98A174E31EED93
FC368D4023D31C64D1B1F36730C04A1931825E5C0E0FFE02BBE489FCFC1756EE
0BD6BD5423B5C4C0F0053040E40D34A483128079DD25DFAAC92B25E543144C66
F9E557DF04604BC4A0A97D38E68EA1A7A42B5EB6D2DC10C1B4B0B0154A7288FD
D1FA12F275319E97EDF5ADF5A0BEA90906A145255AFD14F1D33B0068F0F2FD2C
24BA9D6B6838D0AB718C0035AEC944200BA9DE64A89D9789FC47736801CD2C78
F6C952A998C69B40979CB8EDAD4DDF40C385187EA1E4CE7C0A4D3FF3B1245EC4
AF8EC64F816066E5E5F0EC7A0EA96A7129D4793359237F795310818252AA45E0
15ED2217F8FD6502FD78655F18E0F548AF36F41E219BCE77E5CE30586958C707
F0205CBF40040F433612321C0B6EB7E8C455A6398D7BF42B16DC4207DEC332AC
167E28A74D68313C10B55EE22EF44F88DC224D329F45725A180AF1DC0912EAC8
754AE29E27FE7F9BF376327C75457B4012F637CCABCAA7FB2A0D3F51A8D53926
6EB248E127513F9616FE0E51725060F22A6207CAB4521A1E431DAC21D49D3FA0
7E2EF48720AF79A2A05B6D876FCE8B244E149903CE1FB78F141620CB655CDA4A
190EB2B838081B389F7E4BBF0654464DC13A3EBF02A745BFC938087314C0A558
58EFC5CB07F38F14EB704B780951FCBCBFE7D0A5B0CE8AA78C6FB72E1FABB5DB
82AC88B1867A364AF6733B624EA775399531543057FCA963E4CD6E010FCE3295
817E73A24023069E3E67C852B199A800BBA9D77123DCA177BA0160862F1FF527
0E8BB680CBFE709FC2904A9780A08F539AD1740A544010508C5CC94FF4EAD30C
045BF7FBB42D9B6734854F40F1A9A97D6B703A32D8EAE059EE0B189BBE7EA6F7
323092C51F87273B9A911AE63109202E37DC37A4A13CB32D01AEB013B0369F0E
0EE1B20C688215B6FEA8305D7E1E8C6A6CA81607FAF4044441D089A21FA53273
01300FE4B642EBDE245973767893B06BC65D92D917E2BBBA58AA672DD4664969
A9546795D1C40F620A03420F960880C2E5A57DA126093C7326A6C4DBF7F71098
08EA2C320CDB46B106ABEB773CD5E3892ADDC8C34F9088C8FF8224C5DA91B18B
212D48B43926315F70D5B1373A39BA5EB0AE5E1E17202375456EED6A8C0C24C5
A39759B5B114CA693BEB19C59567E9E02714679C91BE7868E231EDC4B11849FB
DB35DD9DEF20DAA1B3B03CC58218D3D03AE7A4AF8CECB726764401E7A70284DA
A9D33A30852B981B515DF742E4E29B9753B67C9894CFA6BFE0A16F9D12BA25AA
223CEB65A1F86729F8833AC6ACE9679471A118F45F2C6718C0860FA2F52C517E
BB7EE95C3A43926685FF502BBD2ACAE119D82FDA474FB08C08665B47ACC5619C
8C6C57D5D190F986977994BDC068A61B0DD5FF9CA582782EEB927FB1464DA2E3
E3FA4916BC5A352D4237219BC63DD7539662C1591B12A9B82CBE1F3F03D7E973
E74B0DBCAE392F5BD7E4E96C71479FE3A4A54F7ADA635F1F85A0B24C1063C614
7A0AE075A599D2E11AEF151F68A9F8D36B49ECAF57E50997C9560E91F4B1D4C3
AC1036F4D5CEFE7871577B7654174F36521DC518453ADF92C0EC6688E2E6D41B
3BDA6A441508331FD85DE412DFF47B080716ED92AA945D11D07282A8ADE9327E
54958A9AE005F0CC6872A942A6E1E455DC892E256A38F05A0C2B95149010B49F
36C0D0C2585E9D55CB753675FB01EBAFA72804B0B07828D6B9272E3D5C010F07
9490176CCB19AB0A6101608B6BFB295BB2C6962CDC778CFCDDC47F88F2C242AB
26E57C1CEC80582CD4D64015483B887B2A7E74A4D74E8AEDBFE3534013B323E0
C2248805581F479D6A63ED1D62DBFEAD2AF83B2DE5EE010332BE7D2DB97789A1
30EACEE40AFE2068FC618945860121C4BF9C536E068F0F2BFB2C8381E13CB69A
288CFB8408890ECB590F121ABB8F138F1F254A77EA74602C6D2BD4D780571678
07D46D426B269537BD1E24DF0D018CF19B1E97754347F2C0A3A1A1BE80ED8FF0
A9C509420006D2229CC525B2E3C00CB94140E58C4627A127D4600DB448D32BF2
E94A05F762CDD5480E97BB4606EE953350A75AD01DA8E2D2FB8C06EE909DE8C5
040FE630E1FAFDB99DFF29348A9F933F732A7BF2B0150F2F0E35F4D000DC45CD
6405E4C58ECCA0C2802E41B372B91DD572B8B7AA8E04E0E695644C2DA14B0C75
E8E5D87E08A2CE7C04C343D3AA6D70651488D5AD2D39391AFF7663FDD254121E
9AC4C4AF100F187778A2D702DA1E05B8B32000D4F623657DB58B3D9291699A5D
F592E76DB0FE966C9832860DB39ABCCE5FDA3C196B7DFE837DB33914554329C1
FFF5E7B731968E1D3C1A442F7A4577D6C20414EFF1C7E386084C4560D8DF4183
D3AA50204B895B4E5B2362C67ADAA5EE2DA2105FC2D898DF5C151A9133D09785
408DF04F04C9A2E56141EDE355A35F7CF034B16BD1AB637019D2DCC3A85463A2
B3BD3FA2B3E0609871A86A13195ACA2468C31918DFA69314DC48B862B72FFA7E
7B56E8E2869E4A9E248638FCC2FD5B04E6E63AFCBC646229028ABC08FB2793B4
7DF7934E149D8D33F3B21AA6B30547145D36FAA7D8FC2439F3AF1B989BD948A6
5323FAEEF9473A1EAF88B803D98245FF249309A7F87B1F8052B4C6F73AB857A1
28D43EC71195A51B86E8961052E24BA0E4925F9F6712B28EA21D6F5F6FA1BDEC
F5F5ADE953A509F1BAB3051000FC3795A3D197AC731FB97CC66F87A5FB9F6925
6B876FBF9406F5FEECC447FADCFC2CB54CF69A7C9A447820B08DFDE19EBC1945
9FEA665D8C4432AFFCBFB4F6664AC049D09052402E85BB27364B3D8058783639
6D19DD155E2A3355CA6B6DDDFF3EAC10DA1A458C3F7BDE162165FB1A4A5E6C8C
FF29AA30A07A35CF2E4C380E50E1FA337097907B1B2CBD6628C9ABD6241D2D9C
1AA705B3C0BFC0DA272517598EEABB3DC8951330F2CB938D936C3EA18C21E736
E1E66FAC7765C2FEB82AD03AF0677FD651B24BE5317A0C87502C143E1BF270E3
2762530F0CDFC0EEFAEAA4F656E9BC0423C39D9BFBD561588BF30178F05BB185
EB7D3520192B3940FEFBC27B3A08467E29D1FDB6364E610BC72F86169E1F9FD2
151F83B2286FA97B5FA35C5E30A79F2EF46AF98FF43B1D23ED27CE0882C13710
F72DDE3B6EBB800DFB555B9E8EF4ED49A5DCFAB92717094ECB693C6A287E40B4
4F6435D089AE68F850B78BEB3E44B78C50316C61B6FE484CE582EB7FB72987E8
593468D6AA9082BD8532DF27CC202BE4E1B1EE2DD17A23E5BD03AE612624714E
9347EB76B1AFBF0CEB6D9409127509854D16573B1A35137947B8D1D0BDC6018E
A1AE0F66B2652B9E71D3AF022B675E9A48B8C3E763051E6A779C73E575948744
853BCF5547A7870E7F6195928829DD36C8D4557D1CC21A3B4BCCD2A5984EAF9D
29EDA3B8D0BA678E6DAE545D73489F0EF522D68614EF81BAA7CF53A6E23373FB
2B49D59F95377431850FE284B0CFA91D1645E399B20090DBB60D0B3F5EA1A13F
B288AFFA61D5A523C43FE8BE4C93534D92A1F7EE43181ACD137FB181E187DCEF
F026052802E70BCB2C63BC975934FD03065340E6298B3B7A30E87F9D6EF48AFB
E10EED9B19C9D32E16737434C5B5DACA56859C91356A47E901AD593F4E2F8A56
C95877234F9FD6BB97B3AB5C0F27DBD4DA6758948BA3817DE8E54F71FAC58442
6F531F4A3F9C4CEBD835181C68B2BBBBFF91738A9FCBFE2EEDCFB12B2C76E24E
1F4E6D6FFE6BE23910E7F181D048F238829D470336DAC9F6A3D650579C2FC6D6
C73ED842B33A93968F58B2A93C5A22632DD205AF0786A79AFDDB23227CCD9D6E
401D8AF667C2130B69C698E1454B0DC4DB2F973E205FE2155EBDF9AB2A053F43
2A3149B7BA168CA488A7CDFE71E01E9401FF961C4A20C8F09061B1430C204D4E
7E50B999A8327BB50ACF8FBB2C8AAE9E22BA5728CCB61AA4463C5F063BBDAC0A
A5733D35471A43C4AC73B8339FD249B90FF5FEAD48C9D149D5AB137C14821689
1BC4D4515FA048047C0B0AAE27E1EF3027FE0877A384CB3AD5F0AA910B10F164
1CEC855B765AC37A0D73DA73F2A3EBA6E0C619059FFB5D8392628CF9E54476B4
CA350FACA04DC0296750D8A3D5091585D0977817EF7B2D89FF33120741EF2F23
E14A5A5A00BAFBCFE8F5D07B521E3353E893B9555DF9A6FED0A943B4425A3F17
430C320B0804DCFF18C81229AF428F3F75B7A8816806B34BBDEA99A13F659089
4263923197D591B783529D3C858DDC79631440A55FC456EC4056C1DF51E9B76B
E1D021CEC5EDF441802D31F91BAA40400F7E39D5708E65E54B1E8E2CC57A8D7C
A479E41A7559850898B777EEB850C7481BBA2BF91EAB9EFDB885FBEC3FC8B27B
83F0AC269B2CE9C17B631C14589ACE9FDD2C3848D655AAE8E0DBA5E908114346
C5B6AE0763505AE4F066486CB43C147006C5D8C7FAAD84FEBC79674B4CB7EC78
0458D82C59FCB5FF73E4E7C4154EBDFC06A1499A5C7ED85B50648CBEEEAD5218
376B67959037D6CAA2B9B2FF9BA845ECC86171F2D2151A145089EF0A0C333CFC
4B7EE1DC737637D9DFD06A45E5DD4D9297A01687670A863D21F2B28B80E5501D
8F3362192C798CA8DC0AA1B54D55FA951DC8D8B6FEC5043968686DC51827D924
82B903E093F21C6F5EEF83701567EED3DD7565C4C297EA3BFB5323FDAD9B9200
011FF1A615B73F3DA2FB25FBFCA987DBD4BF3F41D35D45ADFCD296F8DC849799
F752E74D20C808A76835E5356DD9470582E82C11740F302EEB1108B629E81060
CE63BED46CB01805A1CC71A93F10F41BFFF224FF7527760650357942ED050866
3E38C363965FAE3667C057DDF0AEED8DC67754FA1BC2150EBC8BD658B488A4A3
88D48E279B5767184DE86C3EDB3BEAE68EE79FAB1ADC4D2A55C8D9896F2BFD0D
101F80EC8BEAE36F3E9E75ED639DF611FD8AB2FC75CAD1888311BA565D0C0B79
5AA0CE8D74EE65697AC92E821C769735FB86DB837D2B12743F6BC297629E8E0A
A9D646594BF4D608E3C4EAB4A2712C41DF47626F617D81BC6C0FADF9A6C05BE3
499567E930F710682B89541327ABF70B7ADBB35E0F1641F668817E64481B4479
C739234F9B40B30938935CDA0B2CB8C62F533276BC137169439B50659E50B557
045B2EB87EFEA0F0830E3017168525C35CDEB55E33E66A5461DE6CE070923A72
6334618467D7A2FA6A9FD41793A8303B6BBCBA18708C378F40416ACDBDD5F0AA
B6C7A4A26946E9BD79B50A9825D71AED854133F9E70B0455B6097E73553EED34
DF8DA712C29AEE33ECDA85428419DC74E5342FB54C048336BD21D97ED2BE356F
66B6CBDFE9D437F55F17C33AB41E835231B3A169D69E7127AC4128988F493604
E1BC8DCE99225BC1D3AFA4080A732B877EA2DED6026CFA1807B087EAB33E757B
6B274E64D31D345CCA3ECFFCEC8D83BCED6066F88B95C833542D813C360E9E1A
A155E0C8DD27C89956CDE4B7B8BB46BA0B2A96E810DECF6C6DB8F03151EB9F05
477951786C70C17BFA087FEE624A56DAE0C2DCE98E7DEF5EF9CA02A6E5FE2C44
4CB9E4CD049011D8526850A860E9918AB68DC6051F575628E411F7BC6C58F7B7
BBD226DC44B67CA7C3BA8638CD1701D6B2E7D88E022488F58CCD71508F6A73E6
CEC7A329460CF59CB08829DBF6FD6DEDA4861DE9ECBEE1A27E064C037D222695
FED9D86F4A3B5B022409B7B1AEC824AA973658BA187935BBC37D4FBB63817B4E
0A00032531B4EFA1C918A7906736E8931682AAD5CC22C5A0C62C074F3CAF69AE
F40FB3A47875BBFF4EB0165FECC03853B091530FF8029F6829A6B55DCACECD54
C5169685D23F2DDC294F85FCCC23D29A563527B4E6ED935F4E10824A8EB84608
A569EB5DA1FC62CF5EDDBF85C39D57DD280BEF8E9964EBAD75A420946ADDFEE4
4D3D4AB4C117C531608A398111300FC5D4DF0D3F43D356D1FDC2B869C2FEB82A
D03AF067FC6D600734F599392348BA988C374FA53EEFAD183275E0BC3537CEB9
19F48A5588B4760D2257AD918525794DE9B9603F2F5CD08137507B376D48ABC3
F5E23ED8FC35BA33F568888E01A80061947CCF94D46E085D6B51FD3EDDA3EBD2
1CB5B571D21B12176497041C6BF0D15CEBFD453284869BED4F94E75132A3DC86
1E74BD8E120C808767DE8FEF9E5EFFEF0E8C3E319E894B54BE2FBF521083ACEB
FD70A6CD51D43841CC873136448E9B34F947B2B548D2379F1F2D120F6901C654
20318F852377C8B3E77ECC8DF91D96F49C5F4D443468222960ACA8945D6C2F36
AFF88F9FCCC7E2A144C8F7133A671C4AA6A5B49B42DEAD15A1F0E15FBA21FD5D
A3E9FC028BCC8ECA1D79BC0B451B80E1DCBF9CFE74BC3BF32EBB01BD69C5C3E9
C58C0283897AAEF7BAEB149987FB4F2A0E033DE308A825106E01874BA8127BCD
C22F50CE348C151F8F41E58435168E47C179E067F8F1FEB716F852E839CD586D
C516B895F7C5C62DF833DB9B74C4D0ED8CB03949A7FDD2D0381A291674DAB5FD
497380A1ADF5E1547E05F600FD03CC51DABE7462E3C6ABDAABB083F416B2782E
760633ED19D2A307F65BE61A3B558D9D594AF21276B0F2BA27E3E1F510EC677B
DACF7600C3D4F004274AB5E55B3DA022239AA17057DAB28FD7BB304B99180053
42425F4332877AAC80326FCCFDE27AA0C176DE14385E8269E3982113791C051A
E3C2D3C0CCBEA8CFA3C86296F7689B51B74C73C814DBA1C0CD3901BC496C003D
0ABD28289D215A8F035FFA5B7481050ED9EF7A99E3FE103AB285CE54CCD734A2
87BC52FA90B551817128AC48A4BC9A1CFD7F9799963EFAB9552ABC4F14ADD19C
613A869CE5E2465619F35697E1E5A8B467F6A0977BF8BF827381B96043362CE4
E54041F97A726D2708EDE5A1513CEE9710990A366C138F430E8470A2D7137E9A
69AAB13B8C5C0B2D0979820132923ACE057116BF388C8C0FE4267213204FF26E
A2748EB7607B9877A4729FC7697EEFE344F7665D5E6157C59424D820DD846E4D
2302F417F4A1711EE8BC62107618285D7870A35ED47BAD47B8515251D639861A
09CFB7BC5DD0E9B0DA30F412AA3F768A46728B1EE1953C2DB32DD4EB1344A56C
114BBE89EE5A81BD60DB6D20A29B75111AEE7458F188847C75F0EAA59C4E9F54
67E2F4137BDD3C1932BAC1D804936343D9B263468BEAE99C6135BBBB9B824344
815E0AECD597CDF047E120183EE0D28585E096405CA92AB1E898366778B17D70
70C9DD0BF47CB1895A695F210A2270781B56ED1079DFC29F37129A39D27C1AAA
C50D7C88435E8450C1250166DA507A0B6C787E57C7138BC239F74AFC90C04357
C1E00E5A04DD6410DEE008B70686B83FCAB580E0CBDA4C0747B0DAB2DA4A7D8F
B7B06DE807F9F3805CDCC5D1AA74B6AEDA5BED7802F5B2B50C0A88F3D8F89FD9
EC933346ED82E8368077AB4946FBCBBE358D59CFE9A5D9F97769A69A9323CC32
DA7ECF7C5DD0B7C723E5C1F1E7BE830FA453DEAC98A1D58868B22466B39ADA0F
6A6542C7D6F815AAE66B8546E0415055A6B853F79A543BAE1FBFCA8808215A6E
84C2E2DC0B7547A0806013B70E3A1701EE4029625E9A1C1B397781329825BC13
B99808B7F2E6E1ADA4D11457C6876AFBE810822F634A96C5D1929D1A7FE7C211
A8D455662E414A0C22A237779B8C9ED1AF30488219EF7FF6049C8BF18ACF1876
4BF10380B2C6C0E815318BF2E66DE483011A4F30F0F18BACB7E954363368C25F
65497BD85E8120DA124096B3E85FD253972F2827ED4B5CA73BB3168423384F4C
32468BA5D2FEAFA57E5413EB6F295BC8CD852B01C8444A428840C2C375948723
CDF5919C3D42D3F01E96BDDD7E8F2567558CF8E79BB18BCBF57ED1D545214EB5
133545C4764003CF42A6FD10A3A0956CB66723A9F5A12A7B752E16D87EDD942B
BDCF8AA46A865A47B3E54563919E8DDD35D8228F7F3873B4B863B476985FF07E
6C4E01193FA8511E979D13BA9417C01CDED7BAF4FBFAFE7F97A5237532E61C80
15492B9B3883205F479C23721D3EEEDC91FCC5700B950FE6A3429256FEB4F8FE
BEF49AACC86A5172E1C1828186F1A61270BCE4B6DABA46970916035B6F79C061
DF17BF17B1DC37BB710EAFAAFB328861D61B9A1A335C92C444D1C19D6776F961
020CA74821596124CD656C8D6A6FD2DE2AE0A12AA501D4F5DB300D6060C60F20
B722C2EC55AD3804449C0E68D2F8E4ECF887BB49EA4ABED43A1E78B9E47DC26B
FC2831CA384DBAF4DB7EC0E06EE754E7215C1F6215751B1853B88BDCB11A550D
D4FC5E45AEBC4B761363467597E0D20D840A8EB72ED3F23309EDE93A759F0CF8
70BB1D4240D0813C8B0527E107B27FB28A64AB1D088189E33663C908CBDF5EDF
5FE38706929CA04C50467CD5A71D1F4877531D1AB10723371E2C6D143D24EF1E
CFB6E194E3D4C42E5105B8A4C74036872AA202445DC5AFADC35C8D6BC208F747
A0A269F8722F87AA2C7BF36EB6CD861AA5F8080B53C4B726C8FB13A11B75C170
24BBE52089327DB941D2ED6837625FC01908C1023530896E7FE536ACD0655133
14421DE98C9A6D7645927B8125E8A8D9381BB57F4DC5F1EDE406B9C802D91C08
7F0FF3FC7A4610773445DC6F472C9CAD8DAC3D288C4A8713AC23425B133F877B
55842E5A2A3E618370D670100E8FD15071175858FD0C9B1A2520379741264AC7
21A9D63471EBF5739689131EC4EF931C741DE7C4928D9E827C4D25A1A400F2CF
DBDE0462CA73D02FBE2909263E60AFE15BD06D581D34EFFAC323393F71851720
5E75A98EE2F7A8F5B088A48190E148AE0D9D651DA5B901FFC2D19B8DF6C71F9B
B43E4E4B1F7677255EDDE941C4F9F4B85AD07ECBF544E1888528C8205E56575C
F8455A4F1BA981F2039938D00DC15571E1CBF0B81A7C22B251C6099CE8BBB215
F79B3D8DB3377DF402CC7B6A9194A7500252D73E45C6EFCB485283890F9C3047
6E77F49B074BDC1A2DE9B7A3FFEB409BDB95BEB8FE68C5D638F4C563DB2A5C4B
D116F3583AF6948CF7CA95D10775666AD34DBA899910F1E9FAFBFFD3D149ACB9
E475D0869935E33FEEDC304F71FA486A339D476461D9E69B49B502EB85D03B9C
BD53FC38A6BF0EE576228CD094C376B86659643F617F865B67AE60B6A7AFE01E
DDA7D89F082F77D665B99993A80F29CF778431F6BEF71756EAECF332A5AE18C9
F429098A26B901790B3780CDEEC2BA105FDD79B9CBB83B15C17BA1E66AF15E0B
1A71A8176295DA5025B248FA70BFC6F1A007AA0D7CFB3B855AB270D13E90033F
E9832FE3F0E8393F2A4C0CE2233154E92A134278CEE0386FB0E122DA6E18DB32
31C728F38F53357FAC87A62F02F5A1586E9596DF25C32F2D862C547935586E5F
072048493D2412B3EBA32FBA713F4A6B4758D19D6CCF68B5DCE60056BE675641
37D61E41FB1B4EB3995252DDDE1EED2E5948531E3788DF5063BB703DDBE972C4
CE474C540F127A8BD6D9516C7067E79BF279F5B8877BAD8C04E593D38F8CF6FD
13B154990ADDDBFCAF37BA25AA63566D9413D1A12ACFBDA81EDFA8A03D4A4B8E
8D30BFBE36A2ADACC37E45509EF03CB162CC2F14BDF4ED31883F8F007D7A6319
D137F3ACC5B81A89103180C6D76FE48D1ADF55F5B1BF214E40D82D32CEA6272B
697975ED197027077FBA17F099707607C598D4444BAB6774A0539F23ECCE3953
753FBC82E96D39BA1B834D7B6B51554D1BC4A3FF97964E860B2455BE69AAABC9
6A2A64C83A0F2A99A401DB625E387B03426BC2F534CF6B9B3F79796A57F340EA
2429908FC65500C95AF274BAC52F2ED34DABFC94E243ABCC20B1845056634EA5
7CB1D6E623D1BFFA034D2716A2EC976EA7C1372F67C6567DEE7469DEFB4A37DB
C8CB8E548723B95D7BA2EE21CE158924C8F18502A8BE0E3F934D327FB7E5E398
28552975158B76E522F4DE66781528A5F18069D8B3C3DD8EE1FA51E991C525AE
6E8CCD7A069A99B70510E4E9B35AE5CC50F1EE3438752F0D6098BA1734E61652
FA510A045B99B9202268E41EE3631F37297DDE125886F4B7064218771D4CA39C
D249A0AE307EB3B10D202C0DE5C44416F14FB8A582AD2DB3F63B749A33D076DA
D356E4E651E363A73858120E323252B7E54FC323043DE284C6228529CDFE3088
90CA04EE13D494AAB413F08FF87D6991B9F046710C058A6C6BFFBE85500A1E41
A126980C789079D26320412B67682A0198EAFD8270A6E8544043AE6E0793E9B1
2D633DA7D76FA9E258A0188D6B12E4637B05E111085255B63E2644C542653D0D
6A42A0DB248DB5DEC9000A829A61372A40204DFFAD927426684F727AA30833CD
378B95670E4A382D54AD709C6AC67CB31281165A3E5285604D728DD3AFB7F924
46F4E4F0FD3F3B3B1DF56F4C395DC821D31EE8570E6EF5E5FDAC7A3DE45E5983
B4DA67AC3C5917EB436761F19AB7D21604D15A7E63FE2604B3B1053CB0FD3EAD
70B0A19C15C6E19E7E729B450D693E48C0BF34FB77D107652B4A8EE0ABE4BA21
52870D0882EECAE2869674B3C2FAD4A0689DF68098DCBBE315EE84511F8A3805
C9121E63C41E29923BB6C4CE32DA306F6F29C434D2DC045C1CBC3C19271551ED
A332DE15083E78696D1B4C9C1BAB998D3EE2C0BAD07D916D72EF1C7A2CF73D58
7F3F4CD81E8CCBF50943E3B5AF9E1BAC254D0F4432BC3DFAE92D98356D3BB1A9
371570CE63939C1E9F9B05D30C60E48233A2F5D95CB37BF414315BBA4C6F5126
E2B7327D59930AB83D199C7BC67C7B5BDB31181455223D57584CD9E6315D5CD3
9806C1400E6BE04CF4DB5A0C5A56E9293DDA4F07279F899CE7994A56254BC1B0
58887B8461CEA108F801B306FF6CBFE7E1CB7B4616CAB5CD29E71ED06E05B815
BB21FD88A9327C36097D71CAAD74C7D257DB0BEBA69B08477E3E309E953EBD7E
C3FC61330B589DAFE4D9D9BAF0567BB20466E634E62BAC67346FE2FD6EB7783F
2A4D9C9D22F16E4018E3A3D16E9EE934108818951F6EA0631EE234EB2EC9CBF8
AD6B39F7FA53FFE0C3BA1F4A453457DAD26CD15B567D6B5F46A517887FF38F7F
F13E0C73030DAE54C769171B3DF51E4200AEB035A9B97E2B2B4849BBC55CF3D1
5669A7A666D0A2F49D627A3EBEA5DC1C6E9A300E769DF5F5C88543C82B02F89E
61558D5AD84CF6F03321398C94DD73410E453534AD6D51DC8D2576CA56CC3014
17114D78776B1A1D36B49A5C7F18979A6AB5680E996508367DD7F87A79E98F58
B2BB108AA57C32E41FCF50E41851024432A474DCCE4C11E3DBCD1FE8823D72F6
A2F8AAFF505E6B8A68D274BDE5BB8C9096F87AB7780FFFE336338F3ECAD432DF
71017837045BC373E562DC83078B8097E989B64538621C20187EAB9531014F7D
D3A3B0C62EEB9A97E28A443DA5283ED1113D915BD9DFFAA0B59A15373043D2C2
FA955DDE6610BC9AAE7E62832F186466D41AB82568F72A71B8CB6C80306D0292
0DA47BEEEB48F10ADA039210ACDF07F211A21D4410B9863839066F419FA7158A
42DCC934CA6C942DCCDBA5432CFA52AE3E529BC70833629B2F8A9A019C0EBC6E
A34AD43A203BFB6948099D260B2D1F81EBE25A8D488D312EA2DF881F5DE66D48
4A8FC8AAACD235E579DEA2822FF9C81B96950E3354740269DA79B4E54467402B
FAB5EE9FA6650D08478695CC20ECB6FFE102A355655B04607B1B08DAE29CF851
A319190DBEB0C445A1F6543A06CC67C87158E84D521D832DC1C884AE27BBE088
A6DF3EE50839F9FB43B830587D55BE7CD703F8EDB8E1CB22E5521793B66D34A9
674A4A27B90A8F07159F1F0D076C877977EA1E93770AC56339D98674659873B2
7C5C6D51095B910226460E72692696E400B041D1C071A3F24EABC9369D9A237B
41BBB8CB3304B2490EE6A4BA2C914E330A9653ABE05E81FD53525522931AAFE7
9FD9DDCD4A9CF3171362B3551FF735C740305147035E4409834FBDB74C34F332
9FFAD3C2FC56AEDAD9D7CEBA399B94C35B3DD5E7898A4F476A9F6F2A5D007455
F7A46B080E01BB3BD8F7FABDDB1557951480489D0A515053607967262B173231
BB3D0784304C029B7FEBECB00B9CE66A56347D26EFCF90D7BE9A3A5F2E44F02D
8742C5A6E6607FCA152AD0943D607B207651EBE448C4B496248354172B15ED3E
8DEF3047483AF30E6A184C2DE3B5ADE74BD220E665E3F328BC850440CD015EA2
09005257773032555BB94F0BDC87E8F4067D20FB64C47D7B34250F9349F79DAB
7FB5EA7E6F83C9DDCC22DA1248FEC855817F9F688EC1700E0B87208B052688F3
3119E2B8513C12E15FA0460D9647E3D960849021DC0E00B88E456FAB17E8409A
E50D14B510D9C093E20CA8B7630365DEA5EDF98E337FD918AEC5744C2F296A50
17D3B29B13AE00366E38C5B528CCD1700F51F21FEAA57657531D85AD34B808ED
C3B0EAAEB101602781F871FCAE1DA5FBE871D899F8FA903CEB46B6EAED6A1054
1E5ADCE6E497BD2F06F1F10F1F0CBBCB3182FEA0CEAB676E083619AEEB3CFBEF
6398E8FCD1AEF25E67185C0A63D485FCC987A70E0529B5F847F2601758FC5E82
043CC5EE66E3064E67FE6589DCE90E95DFC2224BC52FF8F1B4BCA1845A95F025
CE64ACF6D3D098F8C9816E0D2778102939EB1D709AECF6C86137B9B664BFB945
4046E245E231768FDC46040B5BC73D2D165CDE5EA694CBF9A81810136E176421
7711DFF6775538C286C16AF25724B90AD6307E87C53F2CAE07E817DBB550E013
1F84F8051B20E031C37FB47C74A7C05DAC22F73C6F3B9F7760EEDFBBEE1B1C93
B66AFFFB7E35ADE192070C8392A541C0221353AB05D3F12E6BD3E4B93F95F9B0
4B16D672A556BB48F3D1675AB418CB94BE419B3CF8D11342E6968615C33A69A7
B661C8D40D177E6D86B4E37ABE940B307D56013E21A5E60B822F011AA10FF310
5B0704E111336F2B8D005DAAB9377AA9A2B3EC5DD617B95C75C54AE28D20CA51
62C68480319B914108A8DB0E603F230F0560B87AB21A5DDF53EB8A161A932004
75E93CD6E312D8D6F98F43EC48CB4A4A907320E70612AA636A32DC4408166AEB
25E733C85E31AD0350A3128664125C1BA4E06C6A07727DA0B0FA3C035F5AB95F
4ABFC8AEF8EDB5E15AA35F9A3D74162C8529437C02F2B768483062CEF8DA7268
4F50CE53BCE369C291D07C82504696F1A864CFEED5A2EBE1506090936CE792F7
E79876A4983A37416580262393B6EFDEA408B29078D1846A8206EA0B7B907F19
BBEC08A334F4E7415EF5F69DCD8FB92B33B5288B07BE0C008F2FC9C8E2B1EA3C
E4E6A76C9BDA9BCBB7236F0CCCA5D06E241D8CA25AE5F12B00A97E8EF1C650B5
0BF7FEBDF64047CC81D04F75A89E5B5CA34181390C66533870D9AE5376BACC41
6FE04FD65DC9888870515238FB00C7063CD15ED4CC579A148E26AB7AF7A74399
EC3C271D6F3CF1CF729F6D4C93755412EFC73061FA4F2BCD3DD86DFBBFFB5D0F
B8805E099F0099FD3F215EC34D0BDA6B470AA3C256E865210F0532074C0E8F56
143AC8A80D56312909AA37D171F01DE7B36432DC8EFF756D2C09387CE9C5AF0D
9ED51FF2A257AAF4AF34446A47802871C1C17BF94573E968DACE0A734A7CBCDF
11EE8401AAF3DF2D7E8A7A6C5C7D3DEA774B4376D91BE93C7D08A23004F8461E
BBE44EE2224C017AE399403CB745FC8564C2F9549BFB8B5EAD2544A3C2AB89FC
81695517AB6AAC7F87CD528F81ECDCC5758C05F20E12588796F6BC18619FC133
DF03D08205643E67861696E1B2826A84A43E946BA41DDB3F3EDC5FA135470BE9
F6EEF94721FFB2BB243590CBF7F6A0B02B5B4402FFC09C156BE2CE6CDD7BF3F1
1EC9BDB4B633130DBA828B86C081E40AD4FB60A8F6D883EA9F86FC1E16646F71
3478831DC74A4BD8D3E9D7F82B61F4DC8733F1B4D9236C58969AA62A63134C20
99763FAE8D5BF6A4FCECFCB3F43F684DEACFB1F9BC3F2BB0EECF90A6A24A2290
A4F8043CD5967EB2C96FBB921A244C1541C782FB46091D53D42F7821433D7573
910225E5780F3D7FBE15A347F3E0C271AD64E42AE6B79485E43722A8E1861546
A96D176B4C3EC4C62D25B1ED56A051E7175CCF5EDBF43796B1CB4D4FC9858A5B
347163879FBDDDA0902ED1495F3054E10BB71B126DA1610E448C630B568AD404
1293FB25E33D685716F6A646D2CF553805D236D974A3346954003EDA8D3BF257
D47FC113565229FD554280D91449B85B2460596E85A66B98305AA93D461A9FC1
F9524F0A812F9C32F4CB37E44660F3AFF901D3B582A66BC901BF65353D37D74E
24394CCDB64656140712FE275FD916E666675366EAF7F00075DF5D15A1C239CF
6EE3FE9B3AB10DC99EEA6BFA229F74895CD09B996F3A01526DB8EE6BFEE58888
0C608B1BFBCE936DE6E6F91E7072BF9DB687BD9290494E2C074C0FE3D2F527D2
43C4A9E5277824FFED9E845FCC4B5FE7A68D97C924EC071849B31815A09F1FF9
FF272DED1028024A1BB69504DEE9120182452B6BBAB62325332A4CBA3565ECC6
993026A47A4B337B7FB3F0BC41E79BE2E35B545B2537BAD689F0905663F27E41
DA1337242F0D9CC02F1BEDF6DBABD7FD429B962BB75B263F9002D14C798AD6D0
EACC91B610B9F0E525C5B7116A58219559145BB79106B49871B2261002D5BED7
96486B315473FDEDD50898561C20CC5CEAD13C50BFA6F4F425D90E2513523395
4C261B8774D6596363BF8112C4905427302B042EAB73D0ED54E262A00058EFDA
31E20ADF2A8C05AF5FF6178C835F1EE7E183CE20661CCAF8F34E0266DF6FC4AB
52DB563B8F4436E57D040501A7ABACABCB31E283AA40A231CCDA4196642DB9AF
8C8629FBE517B0D666063A0BFBA05AD8B8FA6A0CEEE0F448C3055D2DFA169126
7DDB596CBC2003C89FE14B82E57EA0A217F6320AF137BEB77107E0F9296CF806
DBAC4C5F555EC9A2E7F8C69828F4F715291FB866E24239170968740C4AB4A55A
7051E7CD1A26CCA6CB812FF44E77A01485913B0089E1B1673F9A2D6AF6AC59CC
1995AAFA569E5BAE5AB86C7725DB5ED098A684750F46F91AEB5336B745AD82A5
5E3C1A91A081BD2B163517D08452DC31D9C8A4716DAF861F58C71D2CC5A998B8
415D472BEDCB35B69369C888AAA9B0427B9BED172CB3A9E818C027615A58FD23
AD7B7CF6930F182BB760E8149B38B2A4619D93606738875625BA9FFE588BC1FA
AD2C158F50C50C8F9D1A1BEFE959214DA3EAFA29BB57D066112CDD61FD68B5FB
F4B96B59BB573FD0F224589530815FC89800D07F68E33786CC59CD6BC036B72E
558CB5F3F9CD1A7F6DFA2449C8EC5C93CF031A464F43A1B64278C53158DE0BB7
A26FD1D63A398A6DE4B7B02270DB655D9E075A193F1E338AFDCCBF8FFF089B91
50852896CBECC01861C1AEA31F0BC951CA4D1027FE84474728F989027BAB301F
831D054DA9CD55039012D498E65E2C87C566E6229871E6203B18B1D51E753CDE
778478C57BC9F2EEBCB2022B829F3BAB5D93782F709B68FABBF8310EAE6F7FEF
C1BC8CF0FC2AA10E6532A55F62C9D5CC5510783F3CFD3ED96F7F1F3D5F6AC718
AD44F5A71916311D628B51A7BCC4B0B902ED5E8E5E28227756024E222B6374BE
E1F29D25BC8614D6C219F9E079C838376E0E2155A97345914C788A7BDE61ADF1
988EC570473EC8DD9073A946F9601964CFF53B8C714928FBC604B51087F00843
F8A63CC3BBABC4D50DD1ACE6DE0004AC2EB521420CC1A87134121AFC45A15B7B
9108E8BDAE4349DC3707969EED9946B9ED6B8D2BB26333FD86E1A803804116BE
19F923204F6FF2F60023B69E04756E636658D0AD1F12BF76E4FC37CB83DD169F
E398CF68F8192664DADA749E32CBF10F9CEF5DD216D0AF1EF9FC168A64E358EA
0E835269F11BA1F65A13D2D604B1F160B01790DD1E83D9B49A31588A35EF932E
EF5256117B2013A3BE5AECC83DE0979D13B37315D234657F35F4C97C7D1A5A74
2FE0CDC8BCE86F6DEF57BAE439CC52B6C3248F233F232BE3514232DDBFA51476
D9D954BCFCC8BD1D62655B737CB44ED0043FE649777C324637082697FEF65FEB
174BB57B80DB38C5A23E9A1410A6ACC8040396DC6378D0583D9F91D8744E771D
0CB30B8625C244C5CC0AEDA74EB994C345EA1FB9FD6F83EA27D79CCB4D4325E3
950FA1C9BEE4FF26820A8372F8285E37CC93554F6B00FC5206910CAE22418F15
8BDA023DD8979FB9269DA34B58DAE5AECC0636CAEFAE3F825A65D875FD2D6CD7
35D8180139EF2ED42FF2B6F7737B05AE95A5CEC9556B220EB24639C68456B0A4
72BB05A5E84E3F0B7240147EA1144A970FD80D6A813C2661D00E90951796BF20
04060E936D1BCDA1048BA7267D0D19BAFC5B200B1694326DFAA85D2E2B2A144F
95D2C7EFE9AF30C3DF20A08927E95E32FCF2B477E3DEEDF48F45669C192AAC7D
79AC3EEC4EA09A8ADDB8CED2158263FF7D457961AD111FEC8AF203F8E8D12DCE
A29FAD4740D4D33FF97431A259A3193F6B2302B0362BA3A2DDF29C628D5675A2
7B12E0AB0C508B3B76E9D4FF2D84049E5C92F5D50DA21DCF9A25E9CA7105843B
FB164D69BA961A7E241F2CFF630F12FDDDDFBD274A48C8E4BB57014C32FEA80B
EF791A8F8C03E4835229B6EEDB21F557706FAEA618AFEFECA0A9F63165B36EB6
AAB82CAF1334E1DC596CBD0086C5373CE77AB9C99386B4F7A2C85CB909F8DBBE
79C2B48C233AB0E27B83295CC4039ED8C85A759F784950571084D1D8206E2CF6
80E94CCC37BF5DC4BB8C31F2BBC481BA6F9E1BA848F9FDECC660DA3B9B507D8D
9548858B9A250857B9BBCAC8498506A2F5F420DFA3FDB9A8D60AA3D52C966B9A
9A0CAA34D8F6A4D91308F22E5E98FC93D02EDCDB7631551220BBCB8C6EF45B3D
5A884D6AD2C79A296B6313F9B65629B92074D7D979F65A6D345ACBE127B8365A
C7AE9FAB90AA896F1C87935727BB2ED409A18D60E2E83A243F6A365FE38611A2
D878FB2541B5610DC6864426D6018C0FECEB781C46971895765FBCC7828A27DB
1445E2347299B9B8F8EB04D75248AF99F28EEC1668F6DF675C6A8AFF7C289C77
B3ECE6BA5762CCBFDF7A83C6BEC4ACB60E878BAABF7A69CDE002E98FAE8EB034
3408047D48012E023DEA28F2DD1016E347D87F9428152847767478C27F2CDC36
FC16EF6AFBF86036C7A84E7EF909AEA8116F5125D77945EAFB3B7087046A369A
C7E76E4D2ABACB90A87376E50BCCE275BB51155A3C2B0AB81D6F224017C53F34
8B14813B87CAD187B81AE8BD7A62228D199571FF8106835696208D562869550E
956D571A6F4CDDFECEE7F651401FE82151840D9D5B1A77CB6437C18A6FE633D1
B09BB97269CE18C05C5287EB459B6F77D5D072A39303272CBD2E5A47CED5A4F6
EDD72BC0AB1557C17D00E8903674302499A1212E521334B5B84BDB265A5708CE
89B5CD52ACB0F250360D93305D1DB9BBCF35EF0E8CAB5EA757E63AC7C618F541
FF030A4B4B31083E31E7C43196450E70DCAA087706EB11D0A23FE5C6C03EBC63
EC1D769F02C8A91563A9FF1C9461926FF716C0C6B4DBDBC3CCD83E255B5E95EF
13100F328EE9F31CA3C48B035956CEF49380867510499B429B85E5AC89917318
A0B21245C23632594D7D6AEF54D9A711923548B887693D3F4D9A315D8051EA48
16442FA8563EE5526727F440FF796F14931ECC99CA295C328F3367907441F783
25CA190CBB9342906567F003785F126F06636D7B8C3A51BEC2398D7BD9B3FA0A
9563182BCC6A1FEF1544EEAEBA75CCC25DC2750A9EDF0D22010E46C5ED147401
B44767E6E2C4B2CBCF60B0762950B3CCAA811FE3D23D6A51489A98DEC48FF875
F36FF8AC5EB00D9C66302F2C5CC563D384EB2594103108EEF40816A489D29AEA
35D9CBC5920CC2B761F94727480331F982C115C34D7F4D1C83B73162BEA461B2
4EC2A2E58FF7A2527B2D386A12B9854B03C82F58C7AD13A57093A2E23D6B6227
79FC5B23E030ECD74D9E07C4B4DF01F6633498BDD8BB32D2B8DA16808ED7F804
FB5AB0419FCD7B016C9134FEDBDBF2EB530217F087DC54040A424E831D58EA4F
0ED88765F9F5A3227B1006B3AA6DE421C87A84F5177B83C6199FE1ADD391A772
8D51B18AAED7C97B8BB4C00859739E4ABBCBAA89C7E01BE71447B90BE4406EB8
F57856F1FAD7B772925877768672379D8E0B2B0806277AAB844F6CC1993FC2E2
D53A8D47BB2E5394C88DB0B8F259230690251CFB1AD2A3AE7BF981E9CE750367
9B06CF16EF9825F6B20041061CC840004BC98C4C417873A0EEF59520726C187A
625CAF03FCC63C343D0F2DE7B42ED3A31AF35E3719D78904881A3B8AFC8633DB
6DB6699578CEC992A57CD9D9B79724E33503C8119A1D0151816165AD5A5BBB1C
938FD1CB29CE3ACD95A43EDC6BBC5DFDCF0DCE386422BE637B1DC7B7AC6C906C
2FA931B74C400A2F05C52C35F285B8A0906BE868D3D0A3261A9BE4AD8A5C5737
7A9D0435A1243DE697CF16F86A82190C44B30970154B8CFDF6638EBDDED0DC98
2616AC58F05F98CAE3C3B58567A106110B66ED8656898285B94ED3D4254E05EC
8104978CDBCF5399483F1FD5E26FB9314C07AEC479BE5B90C1C5A1DAA551AB97
32A746AF87881A88B220E8B0E7F86AE9D43B8597C595514B04D6C105A4B955A8
AE1A955B6CCB8F75D0F43599C19EC2795113F5F5D7E583A6B678FBA91E55BC18
F1FFE6216812C30A897A85335A26F70888AF2AAF508B71FFF9EBBC7F0908BE10
E6388880C9A4B0F46415C507E56DF287386DB1A316BF9C1CBA9E3B763DEF2035
F792DDC67BE0E9EF704A6AFA595161113FC12D5C2713D69C0477D61F1A705737
130168171E87FFAE789605388C2DB116A66F723602A5629B5B2379F7FC5CA62D
A0EBA76BC1AAF7E3A2A4E5BDF3C8518442AF8824994ED416FA8D7C82A12EDD1D
F5AB16487DDE47A81B4480C5DB5F165170992001B5CDDCEAA38882BEA1E5805E
E5FA01CABE0BA5DB49858AB2389D88F0F8E26239E7BB0A92CD6D7A29D1B82E91
A80EE4256CEEEA702E9E54A639DC3C9047BFE757845713E12FDD268F0D72F9D3
294BEA716A5ADFC5A8923B8968AF660E64C526B39FA29BF451B0255590239637
A0A130A4F9C0AC44A8F2CEF0A776123BE5032A78925837199D30FF5D689E6958
4529C173DAB8B827F118DD374B7AFBF51E06DF77798AE00F0EF73BB87BE6F908
F0E935225EA7A215B15C80A2764EBBD6A655F529744186E94DC4A5CE74C9EB6B
732F713709C484083452D61DF8E1B63B52F9CC58B504EA1BF8024C05350C1064
BBE6521767728D2B5176EDEBE94147C0FEB8C8CFAD5EB11B7F701CF32931D066
B43B66BCAE6EF60079170F5E1FE878959713D1959AF73BB452B39659E352BB69
91D1E501360F60E4312A3F0FAD613B4915F140E48FAE58497C9B6324DE707934
96FBB914580851C8533C443C224DA6C6B00A13BD2ABC286138CAC5F70E6F10AD
DC5F42B8234202C1A24B9A81EA0C872A94294F26823796210E0C1363B06EB9F3
33FC7A64607DF03B675F96781D56F41AAADC101796EFEDF059DA2E4BB878D0EE
517B693DC1AA7C0CE695BEE7A0E716872A762E1D5DA066060746C0A627E3D5BE
FE427476CBA406DE5DE4BC0D33D62BDB68A2B796305D60D16E2B8B133017FC7D
94C295EEA8C30954401360DD046BAE763282DC2F62078B05975B4625D543C032
9C73B5C9DF3E7AB7A51F38BB506B5C1300367853E57BB04F171FEE05ABC06FB4
0488827DB520DB2D8B1042DE4351BE6FDBE11092BB40DA41F104F36F742D1666
BEF3C69F919B329B02CCC0B14AAB265259A80FAD550C648613C6B755D14A927A
8FD37AED7F55BB0049
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: URWPalladioL-Bold
%!PS-AdobeFont-1.0: URWPalladioL-Bold 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (URW Palladio L Bold) readonly def
/FamilyName (URW Palladio L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /URWPalladioL-Bold def
/PaintType 0 def
/WMode 0 def
/FontBBox {-152 -301 1000 935} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AA45ACB42B05EEB99F8B643CE3
F4B6449ED5A733594F70CCCD7BDB073E630C93A502476CEBA5741BEEE5938FCE
3E77996A2C56EBAE52B2701DEBC95E363E995ACEEDFD1CF8EDC72768951885B9
84F82225B3BB8E9522E784197B8AF13D70B2CD113F7501CD9333EB9A28CD9D56
824E9A3A689741D4577777676015723D17033D2815122B32062451E15DD271BA
6831FBB953F03DB40513901CE59ACCFD6C2D6F05E2B6C8AAC7EE97D4C56B8F52
BCADC9DC83D5C7C45F5C6E60DF9F9471D42B1D6F45EF98EBE41997BEF7D56981
8F9AE898AFA16089A91654ADB0AE2631539262C43BC5206D6CB73867B19EDFF9
024F9C3C7D790946F34742A688BFD183A1307649A36F782DAEAA2D8E581C911C
B42485441FCE5FFBF911F1D9988FC5C601D09514633B415378648CA65F2D6F40
F7CC23901787522154CC33941615849C4E5F2600BE11CE10B78AE007EC0E5137
4C66EF207977C2C2CE5FD8E70A74DA9968C71790516F1489FB5A2585DF9F5E06
9552F391999992E23975398FA0F539A299EF090B9CA16E940104614A4FA8C6D3
495975F6ADCA90522557B3F02FACDAB68EBFFBB8579876F09895D723E482DDF4
FDAE645CD275F3A8DE44AAD1D4C2987B6CD35FBB18312851D858E2F382FC606E
41B7B9393EA57A7FB9903CE835BF1F8E67C15EC8AF980D14FAB1A56EF1A62E14
5433A36160111440DE43D4C8F28013504ABFA5BE40DFA52D34AF251629A70368
73B22EC87849070CC52FE3B74D259E603996AAF50D77304A8B6631C652E482D4
C36A5EA242B3F6A979331BB593EDF29F2D9DC6B35BB39A5876E5378E71CF09BD
151E4B759D53762BB109DE5D452919DE87197C14A816E6970C6476C8A4F1BE28
E6FBCDD677D4379E9D96A978EDA97A0F256534A641017C46F0637A6886CF10E1
EBD75689D3CAD47F1ED6096F825036BFE59A50A550F0FCC978EFE560113A6231
60AE7DFF1BEB6846A97F44BA6196DFF0E9AAAB0F3F34EA25A98ABC50DE2C1812
47CD8A7E2F2BFB159544B845133FCD3B9F46D1C48462A806E9E614D5EB37B65F
BDE52075686731382196CAC3AE3161EBF89944F88A19A5CDCCA280C5A47CEDDE
B826B08AC1581B76BE95036D3797DF9D68406C79A4B51ADF64776AE9BCAA6D51
1362E7A00FDF2C9A6D40F64DDA4B706FAB728B6F6FA9302B4455661480719E97
CFB7A10536081E4E417984862DAD762591F1E352EB919871CFB4FC7DF309CEAA
B7C79374C6ED59B683387237758B75F5ECCDF586AA7D9B6F5DC5D57AE3AF6937
F45C869DD22CBF20D876F5D5A2FDA8A63762932F4CD50CE835A135D14563C415
9E5848B3062ADB9E374E3A43781E2FAB047819D53A6266B49E540D79100A0E59
9A49AF94B6B56D166BF13E0CE6FF00F936211D0A901008A5F92C905F9EFE3617
171592865C8E1C9388867DA6FD1437C9820D05B81C78F8E580B1D1E6A8D59462
D7590018F976036FAE7E1CBAD7095BFE6125C409D42CBBEDE059D026A5226CA0
5E1D2A286E8FA222DD130F673A76223216CAC3FBF49EA5A6EF120F4A3F2C1B5C
38F173AE00D797B4E7A37299C66DA33CA8EBF0126C1CB47C6DF8D6174E4A8719
6CAF738F6E876E120688B1C94EE092DE61423FB884E8C232A272869933573A5E
6D11425F597322685C524FE51760E641740521DA6D26C5A4557B01EB5D6E32C0
B45CFE0792F62396267EB558053CC1522CCA218E15A942D8CD5171BB4E8B23C5
D7A89889FEC8199C1BFBF2E9C2B5A859D37B9477AC9344F102CEBA0918668AB3
C1AB139105EF0F98F0F39B52268F7905AA00D9C8857D728F53F195E1C608A8A3
653169F39638D9D9F421F4A3F808E890D1582BF08EA447E70EC4C7F0956A5909
692CF258F8A6D0BF53C26E96BB76E360801E608E05496BE7619B8C69F4248F44
CD9D5F5127D99FA2132E6C41628AC3150F9B644491CBF50E1AAB4DB1875D107D
8180396BA6046C2BA8F8E14A7959731A74DC4B215D7EC095EBE86A3FCF3E59AC
014D4FB55480AE371254368CDDB5880CB89D95A07DCCF0DE54B996C728BD3334
2978D99464D46BB5E26CAD7951FBF3D7B27121FF01DEA6F49C7A44936D8F4AEA
ACEBDE3D65EA4F36C4CCD5E728CA781CD9ACF89FABF737E42204D7CA411E72AA
4240AC015EA28CCFDC7A2ED1CC6EF05E7BE3767D68053B9A33CB768846E38E37
4DE01977C142E0ED10318333382EA1345D6AFED8EB3CDE280D8103C72CB4F311
1D1B8690DD33C3CB3F5BB87F30B80F15A0082D1D59D9E92F477FB54885C6489A
CCAE019742EE40CF5D7031A7D3D21CC50CB35B53E1B9BDC776BFCF8D8058FB7F
8F1BA4BEB2C75F7E13D6E20F68B00C105B49DE64887E6AA4AC90A011EAB0A70B
24AA3B455D30B21BFE4033113461F81C9A1F7319F7BFB76E360BBE84C67C3DBF
FC1AB608DA6794EBB5E11AB0723C34AF488BA3A411E8E31CDAE8245C2C313EC5
9BD6C5F625B21D088FD737663538EAD5C8185DB3513C364C054BBF7F35F0B627
DDC5FE2AA948AE738E0A6C4670C92D7236CD1D199C612555168BCFE359EB492A
0ECE784F633E3161FA6E6452ED50E04548108126D3AE5EF9C240EB792EB349A6
84547B6F5E170EBE8408565B1F8768FB56B3F2C98AEFBBC8914D0B4827F3980A
50D39360DC793D9C260F9A68379C031C3F37E0DA0EF472C5E80621E494870178
EF18AA9E830504C86F89D1E697FCEAF6DF385B4B58E7A2A0FE2D47166DC623E9
340B6012508B79112C0E8D91E533070AB9BFAD33B2561867A9E967295E45271D
85FAC12D39F88E87D4554BBD45FF7EF6EB96BB55BF51577D5DB10402948C59B5
D8C75ADA3F1A59CF89484ACFE000A0ABE41BABD286B681E3A88CE3B95FC3F93C
4D68370AA6671A5F1F78D005581EEEDD6C8F062EF60941AF81F91F7A741811A0
E6506B268858170E6AC275036811DB7A567FF505FF67FD240FC417C52C213694
5E34669A4E9E5EF4B84D81DDD1955D1E74C83B03CD1BE8FE2A3A3886527B5A24
8F2F9BB14D0A63C18A71DF9ABF6629458F4B681209FC6A7466F8890CE45D40B1
7A9FEB579AE8983BE16CA7DBACEB44F420BB75AEE13DDEC360ECEA0DB924F0B1
FEDAD31AD6931C635163D3A053653055D0EA5684437515E59E7232F2E0D32A90
550A85C163761B5AABABD0F1CFD790348BDCE1E46E58731E224754FD44B49675
8FDB35B090533C23918A47190434CB351DF139271F8903FB070B0BF7C049F576
638B2AF034C738EFD85CDB54556BC6C7FF68FBD042BBEA757EA7676D23FC0E90
F03456E1231CFB3CC4E2F9A94760FF7862337BB4A2C3A8C8803E49B60712632F
58A479B4A21449B2F252B70C4E6A2E6A34DC95A02346F46CA78C897700C09C21
50FF9F4296940872FB32BDB9A0598941E7DB8D7BD463F63A4C06680D808300C4
9A46FCEF1F7DECECCCFAEE2574665B3F320296399C24EE8AC85E4D7CEA17058F
4CD47D28F91E4442AA7C74A473EEFD5DA78B4F9FBC1A8A55E686B5D85DADC189
F63975298E39DDA8B503E77D5B89E048686ED38F0FA8F9921866133681A61A8A
C7F1F3F766A51DABEDE2DF6AC42219BADCB93BF3783CE603DFF905839DA4BC0A
A8BF128CD1E4C9137482228A2B91A3FE811284970E40C11E882C6FF9260E54AC
35157C4557984EBB5645D175505AFB1AC5CE8B31013891596813FA42C53DC7E3
9ED5DF5D5B049F09A5729640AEA87352E69E4370442D6CA86D083E18D9F88CF8
42BB594E6886ABEF80DED110C73353313F8B58C2D0BAF8BC4BE9FB8CB1F2B597
146838AC021AE1826675A5F7CCD596F31A6055A2E102D54822CCEF7FB704CD23
F12493B0CB7FEAFC9B2C43CDD80C28B47B47B6B134260078203CEEE5712B1434
B56B8EE3C13B4EA7E84D41500E49FBB18163611716154C793F88F4FFB62DEFDC
FE4FB4BA95261AC732DE36879601A3F651E57C3A6EF3743A3A8EC944AEDC806C
29D6E14DB451D15E07EBA402A10FCC02A8746D1A89457A15300C42F87E99BC97
3EF98A453428D2C381A7CF3315A44103BDF543934037781A7CFA7A9CB4335D68
7A58F61800FB46DF8BFE982C7C8890636CDEFDED3CA00B86C57DEF55FC15C69D
4382C1418C66C90D4A6B47B1BE056932F3E94F7B1829AD57AF9DCF94E70A6212
1A46982BC42D9DC234F963A21D117B2109F37383902B4E16617E57B8F15DF4EB
0148F58684686871ED111C0AF0352A8CA1EDC755E7BA3DE63C32C3C2864C63C7
68455B99DC99BB44A74A69B2D48512BA6B21E0272D443F5050DEA499563C06EF
0F64D00E0EDEF714B1C4FE78178D6B9A7B839C2F732427FFC12E379EFC93DD1B
A483A268F0A8FA15A157615893C161837EB98CF3E03F8F7A73729931F71ACD7A
85658536D95C17758EA05A109EFEEFAF689F1F49EFDB2010287E01B0F874BE56
0A1AAD848759AABE0765A712264B5285A06C988D99ABE4202CAEA2276C01CF98
D3F2F36EE30695E3DA16BBB215E47107A17454A4B4234536BFA1677F984E4B51
0BBD233F45464221CD83BB0FFC9D031B2306A19BFDB26B9E623761D24C0BFF7C
9A0F7EE4694A58E5607E195238F06E7E7F6D9B01FE983AD9DCFF798F2ABFC4F3
5313D374461FB5FF8F0AD3E316D1EE10374626F443B447154D25A87AD26E8B77
4C5124D4BE7EDD346C86033ED727B5BFC009F9334C363D74D9022512B07ACCBC
81EBE502D3A47C92AFA99621F49A2787814333C50AAC637307A4E6CDBC99204A
A6AD1374EA7E841F708B963EEBF77B500BCABFC6B32E1230BE38957F577FA071
9481B03E5C611A28CAC19D4B73A35457249326B61602DBA5423C3C1F16DC53AB
95762DFD8F513D6D1AA04E58A43A6591EB08A8F3E33426D988A8BA40DA3F4388
9A1157E15FF959EAF5114269985A8A0A7E8A501C75D4A2BBF4264B4861514CDA
EF78CECC9FC16F7974F498724D86415A03B3CA5D0577ADADEC9EA775DC9C7F8C
E1151E5EAB5DDB34579DADBB6CFCC6ED8239419EDC2CDBF50704CE39D819D28A
90E52AFB038CDAF0561AE24ED6E8D5D6E5D0AAC0858943DD35DF49C4D0829045
56162ACF0563A3933A7CE9D35CE1DB62FD672B2E715CDCAEA934D7233B7658BE
C296A316E93F6337772827989AFFA6856663E6EFFC5239708D5B18D1504855CB
07A04691AA633BD5995BBEE010B455CFAF8D9575608A408039237B1A8B24DE2F
E627E5582244482747726D722E3358A5163F4065B389BB6DFF6156B8DFF94DD2
B8CEC9BAC14F33BF9787B150B9E9CEDEF26D0D00DE39BEDEE391344E2B3EB75F
1E511EB39D7563E18B28804119AA4043CC2E4B5E8189C85E98339B2E9FD0B4AE
A10E8E04BE44489BF4A42AA27DA04D2DC9F36BAD1803E02B4CB67BD3D3E4BC61
F86791B443AD981ED397A0A080646636ABF7B0E03EB7CAF8461A2781F34A0D18
5443AEC997E939AAC716BA6CCA8E7D6653291395C141525CA338B1EEBC7A035B
B8E031E694F9AAD8241B5A21BBDC4B026809E9D28B9FC63F29F6BF484A398152
ABB89CF1C7EAC3587BDF985BD7557839683D5E2ADC89CF698C61B8A963D292B5
0A7B6FE6AF18CD6AAB49ACFF46283F10364F04C80641E48C7E1C1E7ED50C4B0C
EBC7EEC8CD8B0D819F280F9571EC39E647AEFF6B0324D77C75422C200B3BFE49
7538F456F2F40D78F0C47221623AED2354EAE6BC910442FD6CFF8E39369DFD75
1829BB6A4377A647A303C62D9136C896BF115A2F2B686AA227F8C54011AB3E98
8DDBB73E7050B758A3230E2D19A03CB2C7E6212255CA65D7497241A827CFE386
F53081E70188E0769720FEC5E573E4200C0724C8E376CC61C08586487F9033D1
9D19CB2F973549AE03CBB976C9151056EACA082DA887BC7F4E752AC206AE58AE
63FCB3DB48355B3D1870D8E7ED695CAC79C3E5F3CD8A5CEAC7AD25B14D58CFF4
39DB215B9998DC3331FE8B68830117B4ACA0DA4268CEE53B5DADBDD2D7B5BCB2
7BE6F23C92C3A047D7F14D199FBCDD510585509930BAAFB34C82D65703FF540C
8D75BBE57713F532166B6EC19CD9FDFCC69A28AAED8A2F9A3705369CCF74AAEE
07321C0BEA7DC2D8B4977746E623370C82E423A4FF7B1EB40C8A664FE68BFEDB
98E14E3073ABF39EFC871ABD559211C7C5A97895C63B7B93E614D29823613990
05DFDBC7ECDA793F537AB616249B0358EEE0A6D1EBE4AD895425E4FB3315BEA6
E2A5443A083B4ECD118790F54058F1C057CC45791A347A273B4422C598003D3B
8D6DDC59C6DA3DB9B063A7C548C585760812BFBFA8CCF2642F49C46C207344FF
4829CB0AAA5826E5995AE0C0BA47B411DF2A901DFC75DFD29D53AF3EE71A2C9C
92ED9DD00D8541F3384CFDCEC2B611688BE82BB4102894D7FECB5B22D91ED0C4
35CB7B0558539EA4CFCF5990DEBF6D37B0B84C63EAACAD82CB34E82B072C34FC
76E3AF14D72D031CD36D3E9057A3BA4DE91738C316B9B73B25A87ECC1C43BFD4
8C6B2346AAAF172FEA29C26F376B19B3A134AEDBB309739827B9A49BBF24C28F
E1A3477A4E9B9178D33F3F54D6279D558D2E084FCC9A4D766993FA25CD41EC94
EAE84D0817EA6C977AA62E02885292714A8F491E24CEE42EAF7947EAAAB55B45
B7A5C2477D79AF990E5CD8A0A06FB5E7EE151EE99A61A68FC2FB7A553605CE43
A63ADB37464D62F20B23574B38A2E4A9594E065C09795A6CB08AF08E8E864A16
3A4B146C1704927020031209B70BA56CBBC8F894B06AB69A867B1C0322FB586A
98FAB7997436CF1E5061B465C20788CBAE0C0CA88FCCD4AD3E5D9D90235EB33B
AED5794A3926878DE1155201A3EFD273A2A0DC843097C71408FD1E8FDEE25970
3167002ACA1C42FD15FCC4C0F0F5BA7AC1F37E9CE41298E97164C1FF24BE58E8
56FE5EBE3C8095A19415FB2FDCC84CF8DBBE924D0DA8D8EA2256CF0A9DB7EECA
58DE0BB7A26FD1D6ABF8A2A38E96EBE70EAFC2112F7ED5B36C3AD33E1B31038F
25819C130B7BA3AC81A414A41C0BFF9240EBA6DBA43BA20FF624A59FE2D80FBB
F56B65BC6BC08C8DDDB54136A4C5E37C0C9ECF45E3423C3E040312AA0240DE21
BEE83B575AB06AB808EA664C29343B25B68C987D54904FB9E7BC9FC853C852AB
9265B6D4AE9A5651A1C3D9A5584C8610C0FB9A2B8BC293A7C4ABF32E8A739221
081D1C75F39CBF9A818658F19DE51072F7FB0206DFC3205A6BF9330306CB5E11
A1DF5740E759B3D65E3604351E4D829560C83A3304973C3FE16359C3A0B74F21
DBCC8F9669866C311DF019C4B442F0E9B65FDBC870FC7C5E6C97917584AA5CBA
F974CFCBDD9018CDB8653AF31715A0C4EFBA3417205505AA31AEE0D8D3D14CCC
C58543DE524471CA33F4DAC4693499D06F0867F43F53E11DF224C695863CD504
7B9BF8250EE2A7C2540FDCCE612BC0DE5AFB3C85244E96C3F2AD59967ECC936E
A8E8CB1C67B69FAC8F538FF81C1D2864BCFE48EAC66A915501CA71C62FE2C9CF
68C32E490D242887FE69D967A45718D6C0E3C2D09EE70A73C1EFF9EDB5667F1E
ED49B01EBE53BFC106C7652F7A9073E6C8ABFFCD83AF9E560C2D938AA4F67248
C166797ABD0AD78C30A9CD748CB6C0489438BE0AF39881CDBF5B260085624EE0
54457C67C54DC08F2FA74D95E5648A99D75B0C6E56E59A97456E2FE1425D0DCC
B73100C27F99EC32C1B8A2803CFC4BC7DA1A9AB3C09DD38A6CB4B0B032F8F5B5
746CE799DC98A6A9AD2F24620366F20C1D69E7BE49325D42D1AC4C7D1E7BB61A
153F6E2C44D10B345CC6D7AFAE4A2886F5E849F22A339005723A5D49D049F420
ABEB4953EAD70162D698C82B88BF10BD533AFB17726345D8A87D04DCA62C2D74
7237169902608E7768973D2F393686F4F8AB57AD5FAE797C26FB7E521E8E049A
2E4457203100302737FEB634A600D23462B90985C0B44D5CA55D03712BA1B026
EB404C2A3BC1692E760508D4D77FA3A9FC82B816851A59AC7B0FF3FCA3F0C790
42F891C2A0B8C087C3BA79365BEA7DDF6BD5C6995FD32DB28F005F407A9391B6
544EC684A68BEDED688A65E78819CC4FEBEAAAD3FA4D56C5A927A2E7001730D7
CE823CA5968AE062D9AB2F8E30DE59B50522C8AEFA5451F931870F2A99727DEE
A1094F688025BA4F6EABB40CD8F32C222A02DF36EDE5A987FB10B05068A2B78F
F2155D163B130980CE6355302E0FD4EF898C821C238EF04DF7BD7343B7724669
B2406B0F64F18D7164BC597A28D5E06E1A1833C74A1F06885E7B83B7D17D92D6
BDB5B0D6B3719AADE20B16F950C6B7BB18317E3AF85EF0E05ADBB822FA6AE823
D871F577FCFE3CD1E8FE988132C263A316141ED0F25A4455CB30D3738EB7D296
FDFB736747800773AF74ED5B7B4E0AE7CD5508A0084305994178AD6CF3CE058A
3D5FC2F130D1AA3F21F171B38D2554D7D0F73C71CE4123BA815A56F62880AC14
C297746AD019DFB4D758FD83A3B8E481D021FF3C11D446008225808FFFC2BB5B
5CBE1EE2033535B8AC7B2E52F2B9E896549C8050F55E35B4AE9BFCD9390D9A0D
D572CD605F5E64FCB19D176C24DBEDD2808DB67E8B5D72653D9A62EF76D4422E
27F4227102CF7D56805049B4400EBBEF6436AAA3C6526E6DB6C905057A9D4FC8
A0642A91F1947AAB4A780D034BC00B16D7C4D77CA1A809EDF98CE5BA1AB235E1
190BA23732E42841B2BF693D3307F4C015F22DE6C9243D2CAAA5ABF67ABEE3A6
F535680DF4235799769EED04E8002730CD189F1D89F575FE7F1B0A607197A0BE
E095C604130471503204710CBA51271E41503CC1ABA280A99FECD357C3BE8A03
7DF40B66E9BBF0EFFC0D29E5F22019D51471C8F58880689447166285F9866D93
7094EACEBCDB4888E040AF6CAD511BFA2E7C1CFD0F8CE3EB41721759187368F6
C756F684DA04693A47F0914A3C1232DC9ED13A432DE1B93A1E315C41E989A145
E9A0DD00103F28037B503629661E08732CC388A6140AB9DC46A3E01092F57C1C
E1A5474A92C4CB847E25011308B37C2903F6FF36A794FE4D1704BC0AA1D4FFC1
37858D49BA7B27E4904BF8D855940AF0DF3BEEA12311E323C2C363E3D499F3DC
7411DCE3D20E2E9F670040F22CB217DB07076D4391E99DF321D0D871A37C34FB
485587F4261444111E1CB316702DAA740300CC2654A56B82E6D211546E24F0D8
870B6957EA599F304384CB5E8DDD21E13894AE7F8B784A1B4BB62430511F4868
6A04D404FCC6345DF34AAA57C2F64F2AEA6BC668325DD034629643618A5A822B
0BCDB03FDEA6BBF79910583873E8667C2C6BC2F91D9E724CBBD53982E2FE82CF
72A27FA3E40C0997A9C24515355F9825C832A1FC6C5C85BC54EE3C021A335A90
6E068C3FB7C817DB100A8FB20B7662677D7CAB5F77B74401AB0F4DD399056FA0
388215195843B9A0CE458A6538D93E1609BD1FB46ACFAED20DB528FD2A9CD2AA
329040A9544314EC32A23CDA9E8A2C01073A2CE83988496234163A960EE4736D
EF5AFA8D076B0B28DD4638C0DA510C6D226D237957DB3ED16100DEB2613ADF07
540B3D0A89603A0BC5ADF247BCFFC4BFA4DFE3FD4AE99F5A8595EA84A2A7DD43
002BBACAB46E5B0A716382C75D4A6D3CCD5C31F902370FE4A040B775CD84D3EF
EB0AE28025D6337BDBB52AA6B136559500CB56060EA62DD23BC871C9D6A11630
982BA47AC0C285B79904C2D960005D56FCA54913C9C82A3213846A61C260DE4E
E2ACC4FAB315791D6274E9EEFA98EADF457CD7568B11740AA6FE4FE745496C10
7AA2E246F28BCFDF1D312FC0FCF1B6EB9B3BE2C92026A5E56FB39BFD5EE919E7
063FB465E9C8F83A69A5AF81CB2217C7F56EA44E5F6ADBDE5E08BC288BE0A4A1
28A76296463EA647C389BDDC394DE9E8ACEC5258DB5E3A60B567ADBB0F5D2E7B
C50B071589F6A4201FAF86EB325CA10FA46F6345FCE3CF33DE87EC6C685E1443
9EAF6D9D43F6609FDDBC7989BDAB842B80AF3E9869EB0BC1B60BFF2883504C68
FA4377F680DD814433BD488DB01B788B091C24234C8B4005B3F5C2326CDA82F0
E7958CC03C1E5529387A6333E64915C8660EBAE4516A9270CB5617386F0B6F6A
2447D9B9A86F9CF8A253953AD6D5595E0212D68784B0AE03A254BB44C085816D
8E8F6C3F2A30F36805273BD749500EC232E580BC762F8E26C3580226A151F583
857E2F142D2EAF095215A88FAB1C999BD8C391F4F045EE1155E8E993352EC580
A39E4CBD884D4994A7EC9407F5280FE5690CC34729A844A8C1BAA6F0814A94CA
3CBC21146CB0A5B4A8AB095E0C516DCF6D389B34C824D03725A532D5BC59DF8E
C0A9062F476691EDAA1A8F565EAB0AC337BE0C2A552670FCE315DA4E6CF116E7
19C5E43B9389E0FDF1A09DEE836C88978E21ECA581ABEAB4644A54F4C3BB10AA
7ED257500B93D5A4AFA1DE82AD27FAC8AE3D9505EFE161005A933CAA161CE582
5500E876D2505F69FF85459A650D81B98C5670F0C979BDE4A73134E781152656
1FEF8DA8BC62DE6A87A8ECF7BC89E226BB1497CF4017814216450B0B43D23E00
6ECB282D4EB573A5EF106F365321CE68099DE5D68A54056BCB1078ACEFC0042B
B5151E4C98B0BD07C1A9DE2C9F209D1C30D13BBBD899E191FB1FE5E699B38FCF
5401AABA1693AA67B0569BCE90A14A638E4862A624D51147593CB82C85FF5724
B2F6B0E53BF15A4A9BA5766D89D2DA0BB5BE58157AB246DCAD32202C7F74C3F9
E6C371265FA18979DBC08238E17A63DC636EE6CEACFB0F5EBD595C8FBA5FE616
E33EA24736D1827DAB6AF16B66CA7C995A3AA22A739EFDF16FCF439024A32B7E
F67A453D7B6FC1CECF84E9E56EAF39ACB62F07407AEF3FB994FCA49A4754DAC5
DE400403810B58A562AE027C3629B086D7D759D0F495508A18EF736A974C3AE7
5FB3FFF5A965042341697B7EF4D914997943E02558EC426D32AF76647F59E80A
199EB38198FC19D1B8EFE024462120AA74ED7F40A96C1BA1B36301DD6180BE44
582A51792E1A34C328310130663DA9097D867165BF0E0150053C6F41EED55710
78ADD828089EF0867CF81A031FF227B835894972D138BA3CEA1A7F9523E1DDB6
8B7EA69330C9C733780A7FAFA632EBD1969DEFD39C95ED5EDDAE85601A0D8854
A3291D0D32C76FAD46F0FCF556992F13524F8BB744382065046E220C6F72AEF8
7F27D962BDD2FB6BCC2EE509E4E648FC72423B714EAB7E6875A7F9320ABC586A
2763AAD673CC666FCB0A12CA088220D7CC2B4F8940696EAE0FF8E229649C8876
9C38306BFBC8B4DCB721D6BF15D02F8BD4FF27080B10DF144539C812010BC15B
2782264F633DA890BD15DE20FC750E7FEDA510521FD8E9125EFEA333972193DB
AB86A6F63899AAD438E87189F2F6E0F67DDB0049C69A216FE1A5F73DFF0FABA7
25C62EFC45D734080277F1ABBC8EE1F95DAD8E3CB2B37DEF54E48D319B4AE83B
C7F87CF1CE7AA8857897EBF576C2804F05B43B64467EBA99802CEF5F10250CF9
E984AB08444C4952DCD74194B78A662A36A028D04A7D1E3ACEF6E077C24B93B8
3E438FA7115926B507F632D20148E8DD6A47962A5E2128653DB138D0B8DF3104
18AA3E5A390396F1D3BE6F94AEF917C027FF4721C6799A64BB3FB592799E7E3F
9DB51B1E2D4AD5848731525029FA573B6399B15377976D87DD0B94381B625BC6
4849BCEFF6EFDFCFE71D95BE4F3F09EF4DE29E3FCEDCC1BD52F8EB5E0FD1A6D7
6B50EAAAC9F43F25E52B790FF6DE77DC312AB52F640EFB05C31E135D186815E2
1A0A492961BCB7BCDFB1BCCCC899EBA81175526D2DD96D712E62BFCEC183DD03
9E9A6AA73D0D402F3CAFC7AC462DB4DCFAFCB312A58D3358330FC41E95251DD1
1AC800091119DE5C2F147776A0BAFE06378BFDE5DD04FB5334790AB3CAB14322
CD36631CB9163084DB33704559580666841B29B941EA2743B28BE75373CD8CC0
C708D6C4EFCF04223F725826F56F9633CE043DB964B7B43D3BD1E0232AF3C4A4
91FA59D45D4C7AAD461F3FF2EF7166464AAF431FCB242497752CF9B0082FEDFD
718FA49C0859818500B284B3CA2F0DE0C0873CD9E05063308FC74C2A1061BF2D
3CE3DC38843ABFF30939525FA2CD9E35980C1D77BD0965E4A778DFD7AE56F764
4B54A9681E19B2AF185ABE396DA98E05688AFFB02D8E94207DD44727E68E66AF
24DF8FD49E04945B9CC87FC3EE565912FA4E3D392CB0EE8C34C88F583CF75A01
B991FD823ADD64C88D2046C061E9CCC1674380D666DE7AE2AB7077D31F344D71
E007DE841E6A80CEDF4180F408A534AF8DAAC172ABC912A7691EE5790ECC0659
DEDA84FF0AB1913B71CAE37CAF89A6B2DECC2974F6086B246C678DF9FB354926
8812190EA3ECFF5F2AA408D37B5999ACEDE6A1BEE9BBCF273DB32691BB90E55D
A4F78AF912E557E8EBAA8C40090C5C26ED148BAFE508A7B1B6C118504B6C74D1
B1215E283F4D103169202557823519C6D2E3797DCA78EB844D9FB37B67A972F7
0AB61041EAD89492C06C7B364E6040B5ED79A61B8EC343F3ABCD0570E5738606
EE14FB19A2EE1EA1089659C427DB8E6649B23F8FFF7A8A1939EF83DC9B287F09
87CF337A625F463F026E3023549C3E12567DEAD8FF6B0CC2CDC611F90C182242
0998CEF455AD8582F84A6C89AE98B3B61E31C576A39925178868DB4E477DA49B
EBFC8EC03AB53A07C21F3756027F7506D54A2BA36993A56599E63C3A27E1BC3E
9EA71F20E220317B93790C7AE8A23C751014185DE9AFC917F2D783A0838DB4F0
B9282797BEC19164512C80D1C6E8822B8F54C5E48194F0C0A09F68895770EC42
B469B08C7092733A204523D6B698B4D253969673DFF8ABCEFE681765B54067A2
EE9C737B975ACC280F484B9BEAD50B615B9585EF842C78BE6156FB00A1B25F2B
C121CF9F4F5687CE3FBE72992501DEB16460A55F02528ABF0F629B34522F0F34
6F76277706C02772E22C605E9F3240A1971AB1F757694CB3ADE3C8CB2ED43516
66F90CC1B2CD008B5941734D404646B488214494EEF9B605BC284EE34062E3B3
92D2CD3151BB5608CE84F249A1078F5584B2FCB41823CD2AD46270F69D473BE6
0EA5DD2C7E20D9FA68EB94D9FFB9C3E85F083403611DEBB530443E9AEC490116
A94C1982EEDF679C439BFF61D9A893DA0177CAB77BB183F54581052B66DF07F8
0009F4D98FE9E8ACEDDB346F8E75941C1189A56417A9D0ABFCC711F604B29E76
01EF35FB6F71300BBACB9C5CB1DF1C3829DB22E0317D73DB9E2CEEA0F1FAB1E5
F1B4B95F4CC83D93AFDE394A7F95FA260EA13D49E205B293990B04C3257D9AFF
E291DA3EB108F3896967A1F4D5EEF5BE6C97FB75F4A3B4BED6B1E3AF1B243B7A
D4830C04B4E0B767D2CD53DEE547D7DA10D5759EAEAC2E2D27B4301102BFF8AB
5B5A9B4E37E20C4EB673FAA833F56F87152485A610A2A4C8C2D01E96442F90C5
738712D5DDD28A2A7B231FBAEFF9D15E91CCF9B8B8F70BEBA497BED5E77E07C3
6E6961390372195BC84A16D09A4BBA410DE548B6276DFE2EA8FE05BDBE8E1395
2104D66E5E24FF9B333A6724B5C8AED183E2267C6484A6D424F87E49FD3F262B
4D50A929697B3A1F02DC9A55404241A67713B7BEAB728516EA983936A6C8C09C
EF2C0FC18FD7A0C09F19E94076D3CCC53CD9C95915C831BAC1F7CB9221317C8C
ED6BA351D23196B59C4A11C5BE6DCAFD377DC7772D26F79B18A6DA7EE8DC0A55
A95D6BAA5BAA1CDC394C32946D3C766ACB344238EDD985473D507C148435B6A7
4206D5AF6542A07BA30904F7417A79E626F03E2AF83287912988534257C9CDED
447235CE5A6B92B409383CCCA0CDA9B7FB0E0CB97D7FA008F741A62E357AFF24
9D2CF6CCE987C2E16E4FCD64B2BD59F2644B9B963D846A3BEB6C9F714EE62BCD
9E4265F8B4E1C490EF5ED18B0D1774E48FABF0405226E2D0C22CAA7BC9EF0AA3
5D291066CA9038E2527ED894EA44C40A9D5725872B0E477960179F204B8A791B
DB04215EB96834AD525BF61BA3FD2CB03DE9CF85810A295030140F8E91CE236E
BF2A001E3110AC62778876C399F54027C158296377C7DB009CC9D3C02792CB44
A20BA6FEA4A02D54D8BAF3802A83DC383C3E0FCD9101CB7E7009FA6A9DC95087
0C1B21681E096320225339A173D7309D37332AA4BA88CC27B978FF6411D4FE89
1B918DC0B7F6F98B2F8049269A04F484FF6E562765A7903EB695333745C4BBAB
DD475921CA39D69ECB4D83470628F1849D0F2FA297344E4DBFAA7388CF2CBAC5
670FAD97B72A12C91CBBDB137C36173A4DCC198C947F880BB007AC60E0273FCF
8A58D8DEE558D56E1465644E3722A5EAA0C8F43F36E1A974EA7B96311F8EF80D
DE7875C2F4C648D291642429DD61FAF86CC41BE0BCD5A0BF7268900465D114CA
FF0FCF67585A6BCBE22DA2935656101446BA8DF32E30062BC9CD9533DB03DDFF
8E5BE0A00BC42B92571D1CB29505E041FB5D15E78F084E525F3A18CC1B963DFC
1D7F5B9FABC9B989941219026A326099EEC281EEF14315CF0F9F714229942165
A6E8E652D4C0C8BB0B9B743486E0A343D68682DDD7E10A9FB2865E615CE32FCB
C1B02EA66BA63EC534C60B61F1B413E614D7811F33F65FC182620836FF3FA6A7
1FC346A14856110A23941B8257A2A5EC3F63FD62DD09890F4DF339F2B0484526
D2DBA06CB803B0E54FB18E1D3B530E8F70DE0D23282E63CE45DF7361876A760A
4D5A7D58A469531F6FF346F8F023272CD1DF9F8358F8A4D59C24055ECB562946
2A476A1F590B805B34FF465AB2A6DD504A9B6AD62EC11116C8028E77D0FE5ADD
EF0931C9EFBA2B76B789B3CF6804B66C3760BB3AD124FF837C7D4C084DF29036
C0AB3F113FCCCA9588C7FB72643EAB8F6D8AEAD1DF4D96EA7EACCFD32F670C45
D154E8F01C7F8542871DA7BDB45AAFA8A423ED3D482352EE710D6E40DFFD4601
D2083A2FA1254A1FE3C44528AFF1B6638CAF87F553DF1E5AA719237D25D5FC73
7A8F67AC79678830CA6BED68B4C09F8236AF7034155870747FCA1150FF64B719
550BB3956A310AC5152259D7DFADBBFB1295C7175929A360FD7F8EA53E21DA23
20F008BD50F3A7176453B4B7F6857275B8BE49F32A57A4764E0C948034D90F8F
B896D5153BD2A94671A6A97BD8C6807C21360D0C3F7742F47CBC2C438FEDC248
91948FCAE03F3DF3662F4808449A25EA4E0532680B481A526F5680F6A67AF006
0980329F95AB474108A2E7F18565BAA572405D314E4C4BB2A27D0F7DE2077708
5889C17B16ADA21CC16C258396B02B9A4C242BD89144526A845B71B48C29267B
EC1DB4C52F9B47E6165B03762540856C95819F0B43A01FB409B483F68072E9B2
33EB79DC69A1F0529DB71CEC0427D5FA06B29F527B6A236CE267095F21913C47
EA4515043C418049903E3F36885AD45509FC3F1BCBBB98281434E7D661083C7F
0D44C578AEA1FED62C6067A2581894B48A59841FFC19B889C86820D11266F791
3970444F4C4FA3A4B827E7EE75F98F1D531DC08C3D154265A22CD37AC6E78DE9
2D08CF118382A92BEF45DC0B0E27281789B03FCDB110E8AB17977A1A7C9451A5
A7C12A46D84014B8887FD4574E310C0664B3278D19620E7D012262EBEB518B52
4263D2C61F66B7574EAC934945ADEA6D37B700987BF618AFA406982B6B39189A
1D689C89B685C9F339E8DE7FEC306A5DE4703D35471A43C4AC73CBC8A949CBA5
36B3CCED456BEA8089820F41E2EF3D595454334906C1EFF8C22C24B1A63A6CCF
FC30819D7EB2024DF4B5C25B167ADD8067443C33B97B28C87C6082D9E03E2570
951103F4C8D90C060CAB8A06F6E369D3D200565F58DF9C93B7D613E293F6BBCE
936738F594EC4DFD7D5A3E8857CABBDCD34D08908ED9FE7959EE2EE52949E995
E7EF915300590A8C055AAA4B08E97B5BD3466C6897065446F7653445CF674497
9261877B66CD0DF79CC9AEC86718AB3AF8E00EAB19E90B330CD4CA8DAA5B4BB0
53230094B4DADD8E3D4CFBB603B4D547619947445CE74568279C78BBE6E13544
B856AD10C3E2EDC54063AFD716088B6E8FE0CD1702C2C331273579ABE0315C45
488D0B1F7C9F3575B4834449802197020140C30421EED1BC8C0976DCD965F5FC
4EE010D6ED3ECBC5C68559415D8B6C4206652AE8F04723A732022D38A8F6C102
B8A16F7DB74AF6D8B7A401DF26D9B605F7DA46EEC796FCAC962C6C24DF5B892B
E187B00481144E142E90B4EB9820A92F8C86B98A36AB956ECE9F5C562071306F
8B62796AA4E86A0917C4EEF9B96EC85F7F61CC55FC045D45FC32755B5CEED304
E60FBE05B62DCB58755BE95451E582C59264192CC13EA5A623CAAD1FA8032861
3C176F21AB851B2E87AFC42C04FF587430F65BA9DF158727F5C888F976BE53A8
E2F5D224FEFC2DEF84ECFA903ACCD0D4914D53B8EFF347467DF545E945F3E231
D1BB06CFA44C0D2D9D5B99DDB20E51F6E1CA132E6CB4FD94F04E1CC1E4B7DBF6
0FD0870068140DB45F90DE9249C5AA8D4B0D4976695D2851ADFE75F0E8AAEAF1
74FD8B2D526A912F11B7020A2D36E903F851A54EFE91D6C9987BD2C0976089F0
C35EC708D48FD3B3B6D764189B89472597D2784A0CF91F7087EE721F64CA0E33
B511878F1E0C8556B0A65D410D9F9BF7165218F0C90C55B3D9BE5338BD4E853D
02EBC561CDA7D32B64D1BAEE7735FFEFA9801D8859D3255479B96DDEE53455F4
1AB052F11C588936C7B01C2AE7219BFE341207F12B03968966A34F5891EA3679
30462687AE0F3B838C3B4527EA4929E4C6E6FE9D661C15FFA358EE448BBB24E1
B44CE0BB474DFA01B0F4CEF6D8823A21D4ECA36B55B270E20437A18E90172263
A506D3DD0E63DFED6DABF46761BD2A949ADE888AE4DEBE93AC22E3BC4257933F
986FA58C106E98B256E2293299859CEAC5B56CB925822B8D27EB6F68C267927F
EFD345148E81B1F6B9E2B7C0D5C3AFE9A67EEF8FB207ACB090CEBD5C2D0845AE
2B065A86E8C27F8FF024FCDE7FAD2BE566E420A2B0A8051318BF15427D3AA04D
5CAD9543A3ADBF976C2EDCF1A5EAE6735DE2C4F53139D4345D4C3739F6BB00A1
67FC23E36D559E4FAC70C344B21DFC172AD2E5ED14C9F553C08B02C2615EF98D
20DD3567585A6BCBE22DA35F2C57F8D336B87307C25B821859D315F96F74E14D
25766B08741D75FB34147D958444F693207F2FFE4B43314A58029FE2B1D093C9
6874EEEA0299D4FF7FBCFCDF21ABF27DE113BC618D2B53E105C7DFC9C0D32F69
0363E468FA9D3B48E824D8750089C01DADB5151507CAE41FE79A3C4A77551CEE
D3B63D4553AD3AD70EE12EA881FBAF0BDC35DA213A632E310D84538CDFFB3D85
E655DD3EBEE6EF04DEDC1E3E58363492CFBCF1F660E8262CD10AA45C67562303
483314B5B66DF7862DF5DD9E900D3D5BDE642412D953F70268296E335B9CB606
9CFA2C9917F00E7676DA3426665A73D5F4DA11EB09E5F39A73ACDC8B4A14C260
D8D7498A3EC63F0E1A2322EED3BF20028C0019ECC8CAA5E07458583103B499B2
94A1C4E6CBB8D8C619AF06231904D16DBC674E57C63D675D7BE879FCE0B20A9C
BB394F9D38159C8477F841CD2896298503F94188127439890831943816E865AF
3B970BD2C42A98D7A5D999219FEB6E61D1FFCF627B56FF450B9EF38A1BBE0C7F
BEA02282385E8670E91220DE3AFDF721B9270E355CAA1265959192C939540240
6EB77B0DB00532122B8D925BB70DEFEF140FC9D1D083A166CB2C22DEEACA8A24
36D7F80C944959B74F52A2E6EC9919B970CF7E6B15F73C8F7655F8BEB0BE89A0
614001C00F5D3679840E02B40197AE802B78EC6CCC20F4165E9F3E7921C48D81
FFA6FC5FBCAB9597A049532B555AF8FB3CA0592146BE7A05A5FA2997C78A25C5
717BF38F3C418B0A53B2F497BECA12EB08F174F262E5ECC2202D3BF2F5CA6839
B1FCE1C581673190E5088FAC0B827177B908C52113A6D70573FB00463302AFA7
5351035CF70B0B753B428335EE324889AE18F32D60AA44D8BC2D9CA506B869C8
CB778575ABBADB2CB6BC25D8FB04FE4F192E753E615361915957AC1D7F3EA4B0
13147FC9EB05D95F92AB642142D7CF89E5C17A0EE64016C62C96F986D3338FF8
256B2D8CB5AA5CD1D569258FF4E94DAE301B9B4F89BA598D40156DB1A7B271EA
2EF5EB692E072C4F1A70880735FE3F90042935722165A2B033602444891408C6
5569101693F0D29760B109FDB997A67909F56DF373D55E99DF7453115D111F8F
41E58435168E63676D81E6594767DCDB173E2DE6180FCA0B661942CD2724AB45
725F1DEB95CFB899848032801A6DE465069138EE0B9554DB4A2AADA371149F96
4D3419A8F795EA6FA8CC085544441982FB663954EE8A3815A40EB8A58F341920
F4DD5D082FB84FC818205CC0D8798BBEFAA4FCAE5A483BD3E83C8701FDDA0D75
8846CBB9562823705C0234DACB34D236EE49F9408465A249656A1EFD5B5DA0B7
79301A0CABDEE58BD9BD554C157A330756A48C1559DCF9E66448B751B6C20787
E2A2D60E25BFA4680691E58D32C9414CB443EA47F906A668048EA4DE0C8ED5CF
E306A46B414BD6148F8964E832FCB6098E03F666C5206D63311727F2F4FE2F51
29889F7290DC610B2A482EAC705C9432F0D744260FECC6FD35E120C6F4CDB859
64255F7346DC3564E122CD9CBA298516CDEE4C62179DDF4B6E2C995AEA418AD1
B5584D35A66F9E8C5D1A46FE8FFF697BB7DDDD4582988F5EDC72179D08D28DF6
06224C941E7E9814FEBBCB46B9BF8AC6D8DA521986512E264549C9DA84E0F6BE
61DD377FCC65935087F54AA556A2FFA8EB382AC598503366505718AA67B95C09
AC5451A6AF942D2587C7EFBD5C9F3E7D40D33824B75C8AC61BAA53DD282D0003
D149F5A198686182D8FDBB505A9958137E7FAFF32E2880FB4D6BBB9F7F9713F5
21697FCC3907269301B8ACCAF27E2266D7848ACD3B1FE1DD5C15C6045977231D
86C81E0C353D57A16A28455029473327E8332EC5311CF287E90063A89288FBA1
D660412B69F0869494907671274BED638B8B699B6F2CEF6A16D3DD4A318204B9
AC747EA8A905B22A6C1D17A5A280274797B400E72205380ACCC8A00F15FD3E68
E4B8E56DA4C1055E6360B2946795633AD41866EEE49D75E8BC8269675B90C94B
88D300279845045B9B15A781950378F6210B01C46E2EA533678E3E1ADB00DC6D
007D23341B5B5B38A0B3B114A96D451FD07487FB9AAAD772FDA5AFC918663510
0E9B70EB19741EE47A5CAE233C9C4821607D94AC540E504C0430B565B95681EA
D7A29A6C898EF83B1692B83F0156A039668931C64EBBD66EE8A1A4F7C4BA44B3
31578F0854FABA862E7707BC38FB05E50CDDF1C39E49031A5FCF765F3DD7C930
2D3F9BA0338B3ADB38A38EBB8A48D1B0F387FB03FAA5AD1289A50FDCA65E1D3D
04382500FCC1406F11D1A8402C55CD4C1C3ECDF1B6AB51BE4972DF3A096BDF5B
B8CEEE6CA8CFBCB1339CE6D23811398E7B381CBBE087F6477B33398DD579C78D
5275403C2CDABDFE27BF2A57DFA5DFB6FF56F0071BD7E06330956E2587CCA444
080AFD39F3566C56A59CB483B4AA8023A8CF1163B808175C0F6880D8F0D0163C
A09FF87631102FAC4DEB9BBC18DF1EBCA49643779012C6D3D58B32D641BA3B1F
7DB0D2CC689B426BF78DD90757ECFA5D18D54AAA7123BB37006B94FB9847C988
EE4709DDCD470DEAB8882FECE2BDCAA2A952C80847250DB90D6130CFA13DCFB9
E29C256A7DB9509730BC01DEAA0EF46A7CEE317CF284CE9EEB00DA5753EF3377
2ADD6BD3AB7FEC7395E693B6056104C0BFEDAC7D1AFCD5B8EBFDD1328DB47A62
4C029667F25E9222F5B22CF70D46F0BE9C4AA719DDE88DA718DF855A6BEFC921
B41D4D4392B9182A8A468B2D244ECCB76B2F26DBC40965B094E772AA4107F595
72CDAB896D75300F85FEA6E544AC7A453EA1F01622AD1048C4860260C257D8A8
AF9074C11C76E4A4DF000C76E806E49DED0083DF32C6E6FD580209AB95F219E3
AEF9E1752DE3CEC56AA7FA0A9F35B842258E0B749D9D1171E42B18D2D0CC981B
442157DB452C1A46CA4B70E5DDCAD1A797C370F971EFBAE7E75014214AAAC0C6
07E531C966E97CCA0576B43DE9021BEA3D463E8F39913FFA0F545A9D35923118
3D41DC1F30FDAE36A38F717397F562A2DC522567932A76F27B7A3CD99FE10F70
F8631D9CD17325C2BB06F47722E48B590F4D036797A1C698AE6F9157264C2AC6
3FF017D583D9E850E22C9D4293E3683147F2DC7DCC7D98141106BA829A62098D
5083A31933AAA12C4B8258D2F5B3109F1F9EF66A527C92FBA5DACE28D89D9C3F
3EBE66876CAB85FAA2E9A846731CB9EADBBDA1FA0EB948554922DFE37BF3640C
0166C3B8BEAC50C76A38B8E8760CFC270CF9E2DB2FA3CAC0BCEFA202D5D3551E
A02F0F4851E95C5168F5A09E885AF8AD7599C68B52BEA6C2F1B39A8BDF51B981
2B0F5E2AB38B09BC86329CF7489512BB4C229E76B1E66FB32300B750374E41B5
65E1E4656ABEDF23B237B63982514CE404ACB0BAD677083BD0A4356A54D66359
94B31F030BA26578A2D7613AA7C519BCE1B64DC7BE34B16D78AAB31031055A54
EA79D93A4DF2A643317C60CB54C640DCDD7C4CD5F434F3FD0893371A85E159A3
D7CF0EA50B8EF842DBA19FA4C5A3220844B91EFD3063E4E8B1811EA9E53745B0
C899B7629460A429497840FEE16364E3B35141F5C2749E3F8AFCB9B1C7948762
963A92D8F0B7662808E2B9F4A3E1A9AC17ECE2A52816DDA3CBAAA0B2E80D6C4F
CFAF2129C74329BB3036BF64FE23A2FB69B25950C2F8DA9EF10BBD4E94CF3D16
1DEBCD9AAABE8DA302FE9220899162D6A907EEA5A3853A39C203A8CE1E7C7966
AD950D43B505D31DA7029CA25B6E4687146E6CFEE50B7E6A21491DC98C30ADC8
4DA9CE87D81DE9FFBFB8B53765FE89ECF159766FFEBAAFC1266D6396FA8B08A4
103BD0C26D81B31AB4658EBA52D858459F52EE19483157F60DF71F46739A8F82
9809543760983B9428170D4629B43163BF647BAD70804B7520421919713CDC34
B35D25198E94981DA28CF2B276CBF19A011E170004CFF6AED8E925E635C9C0D0
DB6BC7030965A9BE82B66AB5A26423D6733626161478CE752F2D3CF766AF0A65
974EDDBC55625294415399C619C06D1EC1FDC270A7543E23C8B98291DB4742F5
8ADF337903A4E33D92F6DC266294C86333AA154D60338E0DC583B22EFEF32588
687D18A7B7406CF637261213D38B0A574680364E58AED73DB540DC7A4B8AE514
00B256BC6593200473339DEBCB66A540FE1E755596215EECF6A287789FD5446E
3ADEB1F80B87908DB4FF2CD19CADFF1DC7AD838B2166C073971D729DEC2FE690
0ED06716B70E0A457731E5940663D7D88B4AA2BCEF3995F6F2265D6937BD8152
2324931CD7A4143EF8DF41CF01330EF8FEEA0D6CE60FA1EC8C100489CD75DFFB
580F9B5E954EE1168082C437BC210621851001B60740CD048F89AFE11B286A94
66781C76A1EFF721B48469E8278FC22971D09090724AE44C6F1335D585F2005D
8F133F877BD23876DDAB6DEA2358374810F2F410971CEBF96CE600E6FD0C3D99
06CC213FA98BD5F539ED1DEA0A796C254EFEA973A4AA04263BD25165974445BE
DE5454BE547C81FCB22D42B069DF5BCF7F5004D6EC2680D397AF90B810F87C0B
30E654CA67CD252BEA677504CF19CD7BC777D2967487E0A85648AFA5348D8A35
DC562949238BF2312D629399F91F803DC3FB8B7D76A40743A52D2B78E4BC0DD3
81CFE39B1AF2A6F9F4B7E052CE3E9A5A650651E76F616117EE2EDFD8CBEA5E73
FCB142E2EBB8B9C3E41AFFD4F3448F1DF2B84D0F7ADAAB0A86C84D667C762915
15826E985D4299C18EB76A40E13320A26B3596F14E959147DB134ECC41B06172
198B32F9323E8250F8FC3818ACAB7A1FE63A08EEAF1F9031C1B772035D241AD4
1FAE4B2867489B393A91E8CDE28D268B7BFF232FED339606F9C18FC5B4247EB0
63AAA1E730C83DDB59848E9239FF280632F3F1600666F6688E7707562393CCE2
C873A9A2583FF54DBDA4003BDEC92592CF1AACAE12184374B177CB89D3448FC7
9A43EC5FE52E0C54635D042A0609DB8D71390F519F86D03AFCB57C9F767D5282
5D8321C5A82B677A84A2B345B7CB6D555241B03226F64D950DAAF5B99108CA77
47ABD379ED2E3243B9FFF0F932EB051751FE7372C4714478C1D1E325C4F1739B
468086403FA3200BFFCBD1346CAC0ED048D4CEE18641056DD51634C47383747E
18C43F497AF465D11095026F41F3093338DADC733EDCC70D8796306B1612B986
28CE23F8CCA5C9A342EAC4735C6BF4D4003DB46B1E19BDF450F3B38BDB16FD3B
73B3DBE9BCCCFBA06CE5B383009F4993FA302D7CA61D7653A0AE64C55F79C766
40E964FBA8AC9F1803A8D9809E46CC5716E1BDA9EEDDB92B0001B419B60898BF
4D557CDD724CE1398C783CF09B8126F98716DF5F5F7CA5112573F132D46D9CB2
810FBB38C7A17D9B01CFA976B3CAC9602B5B041BB35E21598322B5D9FBD3A07C
0F978DF55778DB5D17F2C8AE2261E02BBB52D6597380E238829B5B1BE8DDD6CC
BB4AEC126AB1C40425BCC6A16AE6F40A884E6FEABB48C12BD266B7862BAADD65
1A8669131C5B38D719D1C1532B910CDB749DBFD55E7F9ADBF4FD0F3D8B6B3A82
47773BF93CE1DFA1A05B6F2E1F0CE49776D15985FEFACC7B3FE9AD1D109341C5
82B261868F08F232B97F682432718200EC91A9E92B72A065767768E3A6FC5586
651F3E01010681502FE370626E1119A14EF78D47D7D992C6E1A2C78593002E10
E587DE73C16B0126C035A515001DDA0FE48A929C1370E1C3BACE2CF32C74A2CD
3B6F855F10D7777A3D7A3D2EAD42FD32E6A84C9AD9B53781DCE52A561C3269BD
EFA5CBAFCAF12ED9549BF6C1743E0B1ED6A9736A5D7BF42B99EE501188EC1863
53B9C4B2A340F2BFE05425D47AEB18E071FDC09795C2BE8D7EEA0ED698C30FF2
DA8122B970AAD936A97186F015E5D4A8C1067512E0186D1977EACDADC7414CD0
A20E98DFF3DCE54AA1B748D5A58DE775C4FDBDB66827CD2BFAE25F26BAC58315
25184E748F84615EA1100EE55E067A7ECE0DDD3035FC8C3E5DEEEE21D42AA2E4
5241CA2D2D44F1A7DEFC05517764A86469E87A7B9312ED8EBEB093C4FBEBB7AA
D51535734EBFBFA159B07ED5C986BBA27B9D08673C807B7FBC3FD1962BE663C5
66954CB87EC7255A2EF6EA623CCC043B8EA1EF9F200F61F089AD4B1158DA6F02
16E84E9464A403F69DE01563124AF1CD073180FA926D6C140FE6D5361E8620AD
68304E86048FDA56D74D340864DC6C2ECCC34BDCC58813F281999369C14286F6
89572D15B837C122B7F45BDFFF3820B669FEC9080DE0D93E4778CFE966EF483D
BA433035161B01D6EFA3C282AC3DF2151339DE682264F495315928DF265D5130
D0F7C618EF7101DF2A62EC51C08064B362D90EE5F58D583EAF8123683EA9CCE3
4D6E62A4D22C3BA6F8F7FAC33773DFEAF8CD77F3BF9EF6353DBC57A8FFEAB27B
7D37A7DAECB603076F30637F8F556C392B8E0E7B9D534CF220813DC5B2689B94
238EE6E313D9A85A873EC75E1884C83ED2C094071ABBC65B9AEC4666077A254C
F6F413128DDF32984302EB1804D8E46FAD2B79631A53F6991AFDD1B3D7655198
7A3CC523C163814DF2AE89B27D7CF0D290201AF9EAD5FE72A8B79447BC373127
F939A4B0EC20493DDE412C62EE04B6FD897614CFE9795539E782ED297315F9F9
E6C1C18C7A21D0ECB2603A40F6D995E0E3229D04BBDFB2896F60C6DB030A05AF
3D541DEEC3576D01FA95B04B0CA0A969E41EC322582636C2054FF3BF72D8DAB1
3C0D61B85C1FD934532C84C9E732C5FFFEA93071AA851102BE0616836F1FE944
D5A5A04C1757C575377AAB789AFF05053D54255D1EEF7DECD273D02BB2D4C954
57ED456E902627A5EE587128C8840D33801174DB75AC467EA179E2AA4695
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusSanL-Regu
%!PS-AdobeFont-1.0: NimbusSanL-Regu 1.05a
%%Title: NimbusSanL-Regu
%%CreationDate: Thu Mar 20 10:08:51 2003
%%Creator: Primoz Peterlin
%%DocumentSuppliedResources: font NimbusSanL-Regu
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
%%EndComments
FontDirectory/NimbusSanL-Regu known{/NimbusSanL-Regu findfont dup/UniqueID known{dup
/UniqueID get 5020902 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /NimbusSanL-Regu def
/FontBBox [-174 -285 1001 953 ]readonly def
/UniqueID 5020902 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (1.05a) readonly def
/Notice (Copyright \050URW\051++,Copyright 1999 by \050URW\051++ Design & Development) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -151 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE33C33655F6FF751F340A8D6C01E3
2E02C24E186BA91B34A1F538959D4450CB683EAE5B034D030186901B458D3777
6B3942BD2E07121385120248891AEC2EB33C4E3A0CF00828D0F130C31A918C18
979FE94379C648EF21ABF659253E43CD1253866F157F1DF85AE7E8714F061B1E
ABA3AD094FE8D6293916FA82EE4F486C7E513A06D4C9BE44306A8287970B4ABF
B6D1F9274A5A0BB6ECF713ADBD1260D5D6C4420D357FD486470A74B2F0621B59
A9373ABECDBF32FA68AABB66FAB0C970A3354A335D70DB2CC5A3208BB6D768E7
B58CD9BC2B6B7E110693C5A88D680B7290DB121996E3B7C8AE3C23147280F8BF
D8C60B415552700FF0E44C2257B467ADD5D550F61EC34A76143393E0B34D55C0
8B64B48E5F1FD16E16B967511AE15434B7F755BDF2574191E3C3DC528B69B5BA
7DDBBD3C7878FA69ADE75011A2C0F02F5707E86FA632D1269281D3C265B31F3B
F3145052467647AFE18B9D763FAEE4BA72CB9C385568EE5BBF5854C278F1E3CC
475C6234E83ED33345268BE52F0931B58F302EDA0D5751348E7B7E53D4882FB6
9343BDAAE87E48F6E82024D8EC1FACBBA36582092CCD76553B0449A5090774EA
7242123C53B80F2E927B98DF2B36C403D1FA1E9F8439F3964DC9F89A0CAB5AE2
C907309460F097AA87BD156575D6C73EDB2B40C015E67734397ED14395C43394
7A0201C6B0F652B035FD7BB82ED236D0F7C20048AFD83A56925C7A2898B46270
B440913E4714FD89697B3E59F5BDD5A2AACF6630257957ABE1A63502A3081B6E
307A534A9E238F986D4C866AFBAB7A0B1B5A6E99AA0A56DC1FD7E8A39CC45147
259AC7033A0C58192CA82FB12E09F309F75690043646193AD92D2368F345771F
01CFD21236BA52F74E36CF4B94259CDBA2EF1D61AD93A2B942A9896B0819D20C
59E440851CB99E89C887FC62FD9E7F88F54E5BC157D81A5FBC70699820C51BC6
27D7755B195C0BAD8225A6F3EAE0A5A674E8AF6B11BCC69DCF5FB89D8BE0E2E5
FE7E2588F93F583E4E2F6ED5457E90B902B02F51D54B9F0BA54291E687F4A7A2
08CA5FCE0C9F3B954247312EDA3C532D3DCDFDCB56FFE03B36DB7D549D4203C6
7DA8772A2F732A15DE675D3212C28DC755E3D0156A777BF514112ABBE4372ACB
97D7834813E1850F90CEE543B4C09BE1E93742EA98B8CACC09FCC4D2595EECD4
46C942EEA60211FA7DBC11CE869D55BF0C7EC6AA747EB2AE2CB3CC2DBEC936C9
540CE2E08291323B36F6549CDB97BBF9F0DA429CA9C863B629410885540DA6C4
9AAADB30C39051C993CB547BCD573D6448DC09BF7FF2D1B108ABEC2AAEE4060D
182ABDB3100AC627E5C883E8F42D90D699C8028D4123472F211C8FBB744D7E3D
C626ED03D8517D69E1ACD26BE4F83FAE31122294816736827D138E4F4CAB1681
236C1654E01231EA7F08AD0E73BBE1BE19A7AD6DA63AE0C7F5A360A53BB35268
CC90125C7545D9D59F5127F0AD964AA66DF020F639832FAF9C2CCA82C01120BA
6469960C350D3AF786666EC14158728E0BA2DD8A639C28E0A7EA8BBF608FD7DF
79C7B5DDEA05C8C3D6FC70177D1A9EA9AD056F0CE31AB535A22FF7EB33748076
5CD4E12F1388373DD8A266D4876C78C6C28E339416D9F68C2D05C8C668F4BB08
2170CBEEBA08915943EE4D632BA6B60FAF8B887D21430E2E8EFC4EFA89BA0195
7FEE79705326F793A493A49FF6A353E42303EA2703E48117AD594833113B2510
01F0ED7E7685DE6D8936CA45F25A9CF816E6249C92F9B472C9964A4933EE68CC
A7843FF977F0A82869341D6BD3802E41B372B91DD57238C1FE2E084D1E275AB0
392D71113C43E1AAB21148C4E64E81EB2D210E012A4BF938AF76A97EDD40B7F6
F9D15E91CCF9B8B2CF6E32FA15B53C70BD06F06681193AF93A5506648BE57900
68FFF31F92595FE56D439417455C5DF4E8A244F95EA4399C4CDCCF4875AE139D
6B531996A220B6EE0EE9D75EA112DA1C60FD628B806D89E7739374682184EB5C
C6191439B2F82DB864C0B65D75F40A7CC60538D70A555F767B79213E014C5274
FC32A67C4C8320C129CAF8009F45A3ED951E812FA0E1CC2465A948065E21CB09
D0FDFA740A3DB09EBBE7D3E5A7F462B39B6E6DD58DF66610D73099F998211379
1C051AE16157DA19E2F5A3B4D0AF8A99F771A2D8A39B059F87642F117807B39D
00E8ACCCA54D8487B1D3D923163B4B133C58D716D29E8FD7A27BB14FF676F11A
4B5F8084DFFCBAADFE1AF8356BCEEEBDF0605A719EDD4714BC6589B20A16C2E1
CE69B430C9E868EBEEAA1A55DDF45C88DEB19A25ADF96AA92AED7E26BBB3BBAE
39487B57B9123DA018DE6A88CE86932A49A4FDDEC5FB4AA25D7DFCF87F0DC4D6
BD770E15BE2901A684F6E43B088ED7A133D1B4E5B5C30F47655F9CBDC308CFC7
F59A469FAB9F56D95F655378CC4B76FD6612C1A9E68D93929AE53C9C0CE9C886
6C6394CA2EB02408F3DE5886EACBFF2A14C41302E77B33EC953E034C9D21C277
11A4112C3F74384B0EB082DF83FDE3D1046073BA727B0E32A80FFECB76166A7E
6182D5B647E80B9DE31491311CC681CC4A456136B6AD2D692565506E57C7516D
9A19DAF56DA26DEB7DD9BF8A2DA7BEEC032E1157CD7CC885EB671AD64DB34BB3
3A44BE1B72E8991FC4BE374D6DB17B01FB177C6B4B8180AFF2EEF8C4A8683160
96DD343532E74B5FF18C389E098773EF5E386AE2CF07952A223D5B16F3D5DC12
3894E6712AAEC2F0EB03E3EFCF051FB017D596AB6C3F7670419A6BD7D820EBE3
3CCAFD620D2A195F3D4E773B8D621B25C1C752EC92F636B101476673CF5E935E
4E0E1D9F1945A247A54C512E3C68169AF8184B6855845DFCFB35D36E9E9230A0
15743EFC0D2340FF735FFD0D0A1A404FD82C85FC116E09414E329D0E40174D17
CCCEAF45B096CD4AA2D61B42F2F83F8ADB2AC00A30EF75EA31A076EA6B5C566F
541B1E1FC5FE5D6DA654AA417A2E4F8D4339C78AAFBA741E55171A5C7C9D9669
24F12466E818875C1E7FE952A98E6F808B1283588F1380F92F3EB358BBADEA86
5425096FD87688E2212BCB112B6B5ADF6A7078599419087319B317DAC7360F9F
7F3BD2729117BFF2DF3B2BE1603A631571FB72D6DF1BB5AAFB325A7C76AAE1E7
B1F1F575D4877A13FCD6E713B15E3D9EE7A861700062FE9EC02F17678AAD6903
6B30E02E2274D769C8ABF9E83803862F2CCD410465A031E1FA28D2A327DFF513
2F120D5DCD70D140B498BA43863C45D94E6642DD04C9686A90905DD3ACA41690
216DF0AE3DDCA1D950E0F7238D09E1CA8A979105D528F46923FF8EB1F262505A
399BCEF75CA4EB317A628F42F7EFAF5804FF3858929FD2571CA84F117D8558AC
D6BA0098C6EBB1AD2C0B371CE2AB57F8B4CE5CEEB7482302CB5D72BD92E6CF65
B0601BD0EE2AE975849408D3A7D043213910A9616957D601481B2AF1C02B1E1A
FC64C0DD2326B351F5F0826F5D85031896D58E539449C89C4C0EAE0F92D542C2
860EE46A3BBF0A36C051E30C773D8C83508764C47D9CA753111854A3B1924C5D
C9771CB880E01F2B0C0B7D7F201AFC2FC5F244780845E55DAA3D377E267E91CD
0BEEE9232F1D500A8920D9FA5349412FCF8912809F3B7CC6BAF8F7479BB3927E
22960A412A8160FDBE1AFD0B107F2D7D167CB066C1366B46727043C448147EA1
14DAC6FF961AC1EDC98B0E45A7679C8699C0CE86A2FED1D97FD5E3C8FC4EECE7
C72BFC766261D308FBB79EF51F16D1464CCA9C87FB45F4EF294E1B536B83506F
D36BA7079D20DCC04B7FE351428AE7CDA3D88BC8EB30F3FF23391EF69CCDE488
612C2E8A862805C6405D0711621FC230C8F2FF7A6AD6F37917D25EC5C87F4592
31E39500BD66C4EFF00C8C06035E761A30CC99473AAA4CF948E6EBEB63DD7AA1
71643F43B4B83457897EB18CC6C2F619FCEE26025FB734A6251B2782D9FABD70
6749C9122E33C4EFCBF86C367E535F4393FAB9C7B024539B3A036F0899B4066A
A9F3B250F1568A5C497532A75407E6C7F1A63A6880F6A8A2CE0E1A31751845C0
F550F3FF88427DCFE1F94EFAF05C3ACF46BB2ECA3067EBF7AF448718A292BA5C
D7BB316C8EC20406EF550E06466D0B42AF707AAD887D66C6556D9DED2D174C35
9CB164310E84957D48FBE1CB584E11C5BAE8272823F8B7623034DB5B12D1222F
663DDB796879D67FCA5A7DFAEA88D7C699223FBD361FD47A2DEDBFD6CDD3DEC9
32A7070F01C15D6FA9A7BB79B02B720E1530283CE1DF22043C047BFE7F04C049
D08AF3868173671CD6726B8C3702917B68D0308B404A8A1DF293A9C5D46ABE46
A0F6F9C5AD43C4BEF3E400D1109103FBDFBACC402AD2F8E327653432D901BA00
ABFF8F29FA583953641CC145028EB23EA7D992DEE77077C750B247862C9C82B2
D2F1655D4E406304F26B815854B0F80EB94BEAB512B5A5BF6BC8AC248CFC8BD1
F02B5FD8CA6829963D156BB6C1C54957747EA7747AFD46CEE29126FD2BD4C6C3
5E45B5287C51DBEA990426C169E2B37E586358FF61046A788406B245BDBF1211
DECC18371F439567E60F045CE0D10753EF187288DBDA96999B63987DAFDCAFB5
9D571CF454DB87667204360730108FFC283002414D18B81921D73DAB617C13D1
1FFD13A20180A98F08D4F6FA76B2AC30789498A26F86170245509627662AAF91
78874EFF512464D37E8E511E062E260F50D8C564A301A20EA006702A1347E1BC
2AAB3C1893675F60807D99887726E884CFFDB0095BC35F8671FE8A3DEAA64867
FF428F6B2906AD0FD38A8F8090C098E8BD9EDE4F6503C9EED58C26AA08E210CE
C36E2265E00CE501A601AB98B4E345F8398DDF3C5B8F6D11A0098ED52DB41CD2
AE91FBEF43C00E46D155BB94C446CECE078B55B90502AC06AAE35111E134EFEB
9E4FF7DF121BA70C0CB13FB98C5EF235CC5C2064F13BAFAAACA692EB090A5C5D
6F4361CFA00501EF56EF148E632B79BDA865477B690EA3D094D64A39FBFFB982
1595CE49F1264B6584BBBF2C14367EEE52737F35C07538B6F6DBE05C5CD493A0
79AE7C58602A45860951DF3DDE18343623A4CB841CF69B502A44E9D9EDF6D7B8
DB5D8BD0D1EBFF86F3BA376E47FD95627A82A7701E00DEDC329110363BF6F2E7
BAD53B8CA51DAB4D15F5147FBB18CD5875F570C6C6AB3300205F6A1AE4A60EB6
BD2A475222942C4C1AC5683B3C6E7F0EBE6A637EA7BD5CD9878D8A3E2FCA9453
23AAAD234FEE277EB487D791520A1C6D617F682915095170128B11F4DC6ABB6D
1020327F1512EB48DA1370B1C7C3341093F89037F03808530A60441A033A042F
31064E6B5366FB17C9304D2E77525B23F1C47541CB68AD6EE32215A4EE1A5C4F
2EFCE30D48A327F3961BFACE47C93783EEE2A547F960FF9FCDE4AC4B587AD560
B7180D23855823E6CE7B82FFEFDBE7A6B405D7DA2F17E9E26F53558DB411F145
15990E36F302CC3F01550BF95F6D1FF41C41DFC81212517A9436B92021C1C9FD
F792D6CFF578A86C8B6C6026A77CE7DE40648B8012E91573ADD4FCC64FBB5EEC
031510F5DBE76778893BF3AD666C50EE00B4E6A77408DF7A93821916DFF24B20
D0694B0B83211432042F1C8DBC414CCC631AD97D44C520945A430CA8F205D0DD
B86B8F018795B8ECD32CA7328CF3776A5DB1CA714E9EF9D6723741B528AC2217
D244F441928C3A6CB244D1178E64F96251EB8512DCFCAABEE93DB0290A2EADCE
117B647324F36C74565ABD151E1BD506EA5032E36208B8A1B742923C17390197
25FB99B810845FA9BB19942AB78C5B86CCA84C0645C9619DB0ADB81455B09E97
D547C224D239FD6E3626413811F30A517C7829E3BE4DB016B5FA5FF9A25DD56E
2D69D2B3BACCE7F2A58985BF5AA15294E288CA51DD10BFEFEAB1424FE19E0E06
96D2D5FDEB16C932E6ED9E707BC7733C791213D3A4E8B6F3E2741D8346DE2279
D8F0B93A9E211C0517A3B7D164043FA21F12829395625B43679722FCA2E02C07
70B7C4733A2FA1D88AC5C74C5EDDEA995DAD677F05DD9C3B88A3C5E89847414B
188DE6D3F331B1F32FAF9CDCC895DFC47AE7BB702304D6B8C22B7F5C5D06C67A
8417ADAD9418D37C50E267403FA23B1CCFDC10AB2C20A31E462B40457967094A
06461502D013E63A2B1736A923A05A7336BF7653866DEECF460CFC4B8B0C096C
FB4B5A53D9230F1CF9F49EAF44141EF04DAA3A57CEBA4F22E137E167C9F9BC26
9144C51330336B535529CFEC1A8D1900D09B1FCFFFE36FF7CFCCC7BA2E1601E5
B116CE155AB54BDDF0530C08BCE4433CEE66F264EB6AD645197636976927A9FD
798892F9CD7DCF0EE7E0E9D87F07D93B869DB49D3B5406AD86B7B326290E356F
379B8909558A23F682762BF83A1F7BD4E750469C7B0298D8382D61ABA9E4D6F4
03BC56A46483CEC3B46E4F39A33DB62AACAAECD2BD3FCD74CA8C408199F8FD2C
5C1760D76C119AD053A3BE01033561953B6B51C9EA86DA3CB936360ECC249AB0
80F52D0CB79520DA2D0B75C7BABAF30FA5F9A7C4B885B721B38FA61F19182B90
7C962C3A5A2937AC3F8BF8626ED322F18080C17A7F237BDFD1DE1D6A0C9ED06C
4A8CDAEAC0E59B6AA0AE24AA7EBED009B716FDF1B3F741D2E566B4D49C8C90AD
D57C9C7B393404BCABCFCCE43311A57B48CCA8061E9AA1BA7C44D3B0BF3DDEC9
59D6474A10D4355FA4B05CD1D134BF30BB9CF8E27F746B5E63DC932D987B2EFA
45B9410A16296669397EBD1D9649E42299FB6D9B3DC63E6FD4CA9ECA7B9D3986
B91F07CF1FFF9FC8B3FD8203AA9ED126824E3B3BEB7E57E62CABE6BBAA40D458
AC68815D4C9E3B577BDDF5FE9E8E658D18DE37C2225216125D1DDCE21B11CC21
5F83090E7C48DAD06D6EC41C1450CA8B39D0F94D125ADAFE4E2ECBA6C19D7E99
414D3594D49BC44B94849F6F09CF0BD2DC38D2348D9A5352B0DA9F52B931CE26
F70E4DEA3D8B70D931632481F6124D08ADA5C72B7F9B3975CEE3C36582A047D9
E2CBADE7FE1B0E48A78C431B707D9C68E2FDBAF9315EE4C1AFEF4F4C998F419F
5469460E026A12DBF2A53C063FCFA68B51DC32CDA5AC67FE5E848E7903929A85
A2555B816993D75735A69A11E135EA8892DAD5613DD2CD9630B1AEA6A7998FC9
A9A8D30F2A105B75C127D6A092759DE78ECCCB4F3C90EDB22C3F87BBB2B38DD2
FE7F5A175999490EF8A3465849B657EFA1C4DD25BE1C6DB8ADAAB5CF474BA396
C9D32DFCB83D29823F79357F0C3E77FB28B323E3601438540E948DE7695870D0
AA63E15F4DF7BF7FD240A426F809CD20A78F5B932176B3D52D44F7BA0760C87A
C8AE02F7FEBF748BE124345156F96D836268069EFF20330DB34BD4CE27A7C0EB
D662A5579931A2DBFC2E9F1A1A1428D881C9D3F256BB861CF079FEE41A7A6BC6
BCDB407127F01D3DA18E9CC3B94FD3DBD2C6C69572BA39BAA692B911045D2066
88A9AF4F6633618F945101A7996AA49E0A90D7394F46ED94D9505E959C3F9191
F654B7B2689F51EABC9D0592E36BB3ACC003BE545AE43797C4994A71DA6F5860
F0A321A07DB1F94B70A93F6ACB807C77EDC50C61012208682B6E96665FF2978B
5ACF16FA05A8DDD877C3500954F0C53728F6DAD43088DA6292454ECC8FBDA106
4F9BFEDAFD3FA399DA497AFC76F4213B55C10CE4DCF1199A192BC82A907CA9C5
67187C252D837D6AC92201967C108C428818B8B20854BF1FCCBB96FF43F73330
751EC112A40CDAC86FA43ECD0BC68841F660694D910E39F3D6FAFCF850ECDD90
47B906827AB2612F5F29660FEC26C05FD6DF7B5C8E1B29405EEEADC43F09C1E5
E3B7FE10A661AC9E9E2839316D6948092596A7073E41A8524D9DAA366D8D1137
0541E5077AE7B43349772078C600BE54B7795EAEDCE937D82EF9DF86CBF2F282
24CB8DFEADB8658C3575E33C42FDF7CD7136E7AB3FADBCEF9DF7E695291F1B01
BF419F638C8A4084CF22BBC07F36C12656CAAAC52463F1EA1A07C30818F44389
8A49F4051F0230D5BDC721B07F92A454756A1B7D7852ED8730644CFC84D37AB9
1AE40C468F5C23058FA28503DC9146D4106E8854421BBC71C63BF21BE4735CE9
4C5DAE802E92C5A78D8596736604FA140EE14C567B0BB693A374EBD027AB7D67
D0C7CF233A6535D89299016227C8C9290CFFA39B53F9748821C6AD5BEB4A6C2E
2BACC565FF4CEB9F1BBA2E8B9EDD40502B22E9DA76B85CF02B1A21C125524C9B
317B050971D909F2A676559DDF71692E0BA4ED7ACD416AC460A8C71A28FE0E07
E6412969F60F026D1906211685B6E3A08CA3702FF4DB5BF57CC5E00D1450D539
A76671B4649E2A4B1CA6BAEE30846C0567B8E74F716E311E7282DD70062D86D2
92297A92C536995B86996D9128E0AC061E78A5AEC36A8890D5D6221405A44BED
3706F18A82354AFE286AFA8056CC0E3E2A65A98793AB05C687B6F720086180EE
CFCF85B950E8EB123F68B63B2C1F5CBE507FA62B3689EF87434C50755251B19F
54A329A72776BEC5EC8A15C5C024513D08ECDDBAE99ABA009D712208B57FC428
7696E3866F2BA5F3DBB2379759682BA3789709D37186D9604A639363935DB3CF
7BCFEEAC87CEFB45E6E4BC09CAB8BAD04AC3EDBCE5E514D91142B2B212DD94A3
8552453E64FCDE6034832F26F4A2B69EC657B9A15BD3A30A75C48500A5944083
E30F224604CA925C9C70E5826A0C1B2EFF899CB525E2FD098AB029F38E85E655
5A67C2646681FFAF2AFD2A03266468E6D2CCEE3FA62B6FFA93CF7ED669D33393
C544D52BDBF6BCF520E5075280063F5C1A197115C1AD2F2E4298D68BA289BB7C
3A15139AB7FBD29AC1EC2AB315292E6D4AB2512B3B1BC29E83B2B549C87D984F
916325C7AECC7FB826D5FB9ACA7FF7CA1088C8115F5681030B8ED5DC6A0BB321
3097C87ECC4BF05B4903A26186F82383DB13F2159472278BF3ADBDFC683F0D9A
397D5D7EB449B455C87822EE4456F70D586ECCE2D3FD36F00CEF5645837EFBC2
E4552E3FD5731A4945D1501A4218D344A0DECF97F2D0D77C10384BD725353564
4FB56BDB2A59D8910A52E88C0EAD73A056BD6E7190B6B32CFD0A905C616FE576
F09ED643DFAD1428D9239D9CB75EC217E32A0E4948680DC405FA31BF3C198849
58F3350FBAC0FD5D032C8EA46EE927019B07E561B3D90257272045B4128A3456
195B058B98EE31DE626DF15D23957A15DEEE818E23F5C2FA5559DE81E8153975
F186FE68C58471772EB4229FA6AE85A69DD76D4203945B4F1254DFD1C6852981
6EE02790802C6D096F8BE1B366
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (Project_Review.dvi)
@start /Fa 138[48 26 44 31 2[48 48 70 22 2[22 1[48 1[44
48 1[48 44 13[53 2[53 62 5[22 1[62 48 2[57 13[44 44 44
44 44 2[22 7[57 38[{ TeXBase1Encoding ReEncodeFont }28
79.1666 /NimbusSanL-Bold rf /Fb 107[40 40 24[40 44 41
66 45 48 26 34 31 44 48 43 46 70 23 44 19 23 46 44 26
38 48 35 44 40 3[26 1[26 53 2[79 57 62 49 42 53 1[48
62 66 75 48 57 1[27 66 60 44 48 61 56 48 62 3[48 1[20
20 40 40 40 40 40 40 40 40 40 40 48 20 26 20 48 1[26
26 22 62 2[40 31[48 48 2[{ TeXBase1Encoding ReEncodeFont }77
79.1666 /URWPalladioL-Roma rf /Fc 134[44 3[48 26 35 31
1[48 44 48 1[26 1[26 26 48 44 1[40 1[35 48 40 7[53 5[48
57 1[48 4[62 31 1[66 66 44 2[57 3[35 8[40 40 40 40 40
40 9[22 39[{ TeXBase1Encoding ReEncodeFont }35 79.1666
/URWPalladioL-Bold rf /Fd 166[61 5[61 66 1[61 4[66 51
1[66 71 56 2[66 12[51 51 51 51 51 51 9[25 39[{
 TeXBase1Encoding ReEncodeFont }17 91.6666 /NimbusSanL-Bold
rf /Fe 166[49 2[49 53 45 49 53 1[49 57 53 1[45 1[41 20
53 57 1[49 1[53 53 53 65[{ TeXBase1Encoding ReEncodeFont }18
73.3333 /NimbusSanL-Bold rf /Ff 199[32 32 32 32 32 32
32 32 49[{ TeXBase1Encoding ReEncodeFont }8 58.3333 /NimbusSanL-Regu
rf /Fg 134[33 33 48 33 37 19 33 22 1[37 37 37 56 15 33
15 15 37 37 19 37 37 33 37 37 9[63 44 1[41 6[56 4[48
6[44 18[19 1[19 40[33 3[{ TeXBase1Encoding ReEncodeFont }33
66.6667 /NimbusSanL-Regu rf /Fh 139[22 37 26 14[37 41
37 31[48 65[{ TeXBase1Encoding ReEncodeFont }7 66.6667
/NimbusSanL-Bold rf /Fi 166[78 5[61 2[70 1[97 2[85 39
1[97 1[65 1[90 21[29 1[29 44[{ TeXBase1Encoding ReEncodeFont }11
116.667 /URWPalladioL-Roma rf /Fj 166[62 3[73 57 49 62
73 2[78 4[31 78 71 1[57 1[66 57 73 65[{ TeXBase1Encoding ReEncodeFont }
14 93.3332 /URWPalladioL-Roma rf /Fk 169[156 2[122 5[200
4[167 4[144 1[156 19[67 45[{ TeXBase1Encoding ReEncodeFont }7
200 /URWPalladioL-Bold rf /Fl 173[116 2[133 133 1[98
2[62 133 133 1[98 1[116 1[124 65[{ TeXBase1Encoding ReEncodeFont }10
160 /URWPalladioL-Bold rf /Fm 175[60 9[56 13[50 1[50
3[50 50 50 3[25 44[{ TeXBase1Encoding ReEncodeFont }8
100 /URWPalladioL-Roma rf /Fn 166[53 3[62 2[53 1[48 63
8[44 49 62 1[49 62 65[{ TeXBase1Encoding ReEncodeFont }10
79.9999 /URWPalladioL-Roma rf /Fo 169[120 2[87 111 4[158
5[127 3[118 1[130 13[83 83 50[{ TeXBase1Encoding ReEncodeFont }9
166.667 /URWPalladioL-Roma rf /Fp 170[104 82 70 89 1[81
105 111 126 81 2[45 111 102 1[81 103 2[104 65[{
 TeXBase1Encoding ReEncodeFont }15 133.333 /URWPalladioL-Roma
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
-31 705 a @beginspecial 0 @llx 0 @lly 345 @urx 435 @ury
1133 @rhi @setspecial
%%BeginDocument: coe_v_spot1.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: coe_v_spot.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Heather Miller
%%CreationDate: 6/19/12
%%BoundingBox: 0 0 345 435
%%HiResBoundingBox: 0 0 344.3750 434.2715
%%CropBox: 0 0 344.3750 434.2715
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 104 128 8
%%BeginData: 19340 Hex Bytes

%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD0CFFCFC3C2FD04BBBAC1C1C9CAFD16FFCAC2C2BBC1BBC1C1C2C3
%FD3AFFC9C298BB98BB98BB98BB98BB98BB99C9FD12FFC2C198BB92BB98BB
%98BB98BB98C2C9FD0AFFCFCACACACFCACACACFCACACAFD07FFCACFCACACA
%CFCACACACFCAFD0EFFC1BBBBBBBABBBBBBBABBBBBBBABBBBBB98C2CAFD0E
%FFC9BBBB98BBBBBBBABBBBBBBABBBBBB98BBC2FD09FFFD04BBBABBBBBBBA
%BBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD0BFFCA98BB98BB98BB98BB
%98BB98BB98BB98BB98BB92BBC9FD09FFCFFFCAC192BB98BB98BB98BB98BB
%98BB98BB98BB98BB98C9FD07FFC192BB98BB92BB98BB92BBC2FD07FF99BB
%92BB98BB92BB98BB92C2FD0AFFCFBBBBBAC1BBBBBAC1BBBBBAC1BBBBBAC1
%BBBBBAC1BBBBC9FD09FFCFC1BABBBBBBBAC1BBBBBAC1BBBBBAC1BBBBBAC1
%BBBBBAC9FD06FFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BBBB
%BABBC2FD09FFCA98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98
%BBC9FD07FFCAC198BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98
%C9FD05FFC192BB98BB98BB98BB98BBC2FD07FFC1BB98BB98BB98BB98BB92
%C8FD09FFBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBC1
%CFFD06FFC298BBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBA
%FD05FFC1BBBABBBBBBBABBBBBB98C9FD07FFC2BBBBBABBBBBBBABBBBBBC2
%FD08FFA0BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB92
%C2FD05FFCA92BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98
%BB9FFD04FFC192BB98BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98BB
%92C2FD07FFCFC1BBBBBAC1BBBBBAC1BBBBBABBBBBBBAC1BBBBBAC1BBBBBA
%C1BBBBBBFD05FFC1BBBAC1BBBBBAC1BBBBBAC1BBBBBABBBBBBBAC1BBBBBA
%C1BBBBBABBCAFFFFFFC1BBBAC1BBBBBAC1BBBBBAC9FD07FFC2BBBBBAC1BB
%BBBAC1BBBBC2FD07FFC992BB98BB98BB98BB98BB98BB98C2BBBB92BB98BB
%98BB98BB98BB98BBC2FFFFFFC9BB98BB98BB98BB98BB98BB92BBBBC198BB
%98BB98BB98BB98BB98BB92C2FFFFFFC298BB98BB98BB98BB98BBC2FD07FF
%99BB98BB98BB98BB98BB98C2FD07FFC2BBBABBBBBBBABBBBBBBABBC1CFFF
%FFFFC298BBBBBBBABBBBBBBABBBBC2FFFFFFC998BBBBBBBABBBBBBBABBBB
%C1C9FFFFFFC2BBBBBBBABBBBBBBAFD04BBFFFFFFFD04BBBABBBBBBBABBBB
%C9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCAC198BB98BB98BB98BB98
%BB99FD06FFC292BB98BB98BB98BB98BB98CFFFFF99BB98BB98BB98BB98BB
%92BBCAFD05FF9FBB98BB98BB98BB98BB98BBC9FFFFC192BB98BB98BB98BB
%98BBC2FD07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BB
%BBBACAFD06FFCABBBBBBBAC1BBBBBAC1BBBBCAFFFFC1BAC1BBBBBAC1BBBB
%BABBC2FD07FFBBBBBAC1BBBBBAC1BBBBBACFFFFFFD04BBBAC1BBBBBABBBB
%C9FD07FFC2BAC1BBBBBAC1BBBBBABBC2FD06FFCABB98BB98BB98BB98BB98
%BBCAFD07FF98BB98BB98BB98BB98BB98CAFFFFBBBB98BB98BB98BB98BB98
%CAFD07FFC198BB98BB98BB98BB98BBC3FFFFC192BB98BB98BB98BB98BBC2
%FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBBBABBBBBBBABBBB
%CFFD07FFC198BBBBBBBABBBBBBBABBC9FFCFC1BBBBBABBBBBBBABBBBBBC9
%FD07FFFD04BBBABBBBBBBABBBBC9FFFFC1BBBABBBBBBBABBBBBB98C9FD07
%FFC2BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB92BBCAFD
%07FF99BB98BB98BB98BB98BB92CAFFFF98BB98BB98BB98BB98BB98C9FD07
%FFC192BB98BB98BB98BB98BBC3FFFFC192BB98BB98BB98BB98BBA0FD07FF
%99BB98BB98BB98BB98BB92C2FD06FFCFFD04BBBAC1BBBBBABBBBCFFD07FF
%C1BAC1BBBBBAC1BBBBBABBC9FFCFC1BBBBBAC1BBBBBAC1BBBBC9FD07FFFD
%04BBBAC1BBBBBAC1BBC9FFFFC1BBBAC1BBBBBAC1BBBBBAC9FD07FFC2BBBB
%BAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB98BB98BBCAFD07FF99BB
%98BB98BB98BB98BB98CAFFFF99BB98BB98BB98BB98BB98C9FD07FFC192BB
%98BB98BB98BB98BBC3FFFFC298BB98BB98BB98BB98BBC2FD07FF99BB98BB
%98BB98BB98BB98C2FD06FFCFBBBBBABBBBBBBABBBBBBBACFFD06FFCFC1BB
%BBBABBBBBBBABBBBBBC9FFCFC198BBBBBBBABBBBBBBABBC9FD07FFBBBBBA
%BBBBBBBABBBBBB98C9FFFFFD04BBBABBBBBBBABBBBC9FD07FFC298BBBBBB
%BABBBBBBBABBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB
%98BB98BB98BB98C9FFFF99BB98BB98BB98BB98BB92C9FD07FFC198BB98BB
%98BB98BB98BBA0FFFFC192BB98BB98BB98BB98BBC2FD07FF99BB98BB98BB
%98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BBBBBACFFD06FFCFC1BBBBBAC1
%BBBBBAC1BBBBC9FFFFC1BAC1BBBBBAC1BBBBBABBC9FD07FFBBBBBABBBBBB
%BABBBBBBBAC9FFFFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BB
%BBBABBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98
%BB98BB98CAFFFFBBBB98BB98BB98BB98BB92C2FD07FFC2BBC199C1BBC199
%C1BBBBC9FFFFC192BB98BB98BB98BB98BBC2FD07FFC1BB98BB98BB98BB98
%BB92C8FD06FFCFBABBBBBBBABBBBBBBABBBBCFFD07FFC198BBBBBBBABBBB
%BBBABBC9FFFFC2BBBBBABBBBBBBAFD04BBFD15FFC1BBBABBBBBBBABBBBBB
%98C9FD07FFC2BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB
%92BBCAFD07FF99BB98BB98BB98BB98BB92CAFFFFA0BB98BB98BB98BB98BB
%98BBA0FD14FFC192BB98BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98
%BB92C2FD06FFCFFD04BBBAC1BBBBBABBBBCFFD07FFC1BAC1BBBBBAC1BBBB
%BABBC9FFFFCFBBBBBAC1BBBBBAC1BBBBBAC1CAFD13FFC1BBBAC1BBBBBAC1
%BBBBBAC9FD07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB
%98BB98BBCAFD07FF99BB98BB98BB98BB98BB98CAFFFFFFC198BB98BB98BB
%98BB98BB92C1CFFD12FFC298BB98BB98BB98BB98BBC2FD07FF99BB98BB98
%BB98BB98BB98C2FD06FFCFBBBBBABBBBBBBABBBBBBBACFFD06FFCFC1BBBB
%BABBBBBBBABBBBBBC9FFFFFFC2BBBBBBBABBBBBBBABBBBBB98C2FD12FFFD
%04BBBABBBBBBBABBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCABB
%98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98BB98C9FFFFFFCF
%98BB98BB98BB98BB98BB98BB92C2FD11FFC192BB98BB98BB98BB98BBC2FD
%07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BBBBBACFFD
%06FFCFC1BBBBBAC1BBBBBAC1BBBBC9FD04FFC9BBBBBAC1BBBBBAC1BBBBBA
%BBBBC9FD10FFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BBBBBA
%BBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98
%BB98CAFD05FFC198BB98BB98BB98BB98BB98BB98C9FD0FFFC192BB98BB98
%BB98BB98BBC2FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBBBA
%BBBBBBBABBBBCFFD07FFC198BBBBBBBABBBBBBBABBC9FD05FFCABBBBBBBA
%BBBBBBBABBBBBBBABBBBCFFD0EFFC1BBBABBBBBBBABBBBBB98C9FD07FFC2
%BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB92BBCAFD07FF
%99BB98BB98BB98BB98BB92CAFD06FFA7BB98BB98BB98BB98BB98BB98BB99
%FD0EFFC192BB98BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98BB92C2
%FD06FFCFFD04BBBAC1BBBBBABBBBCFFD07FFC1BAC1BBBBBAC1BBBBBABBC9
%FD07FFC9BBBAC1BBBBBAC1BBBBBAC1BBBBBBFD0DFFC1BBBAC1BBBBBAC1BB
%BBBAC9FD07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB98
%BB98BBCAFD07FF99BB98BB98BB98BB98BB98CAFD08FFC2BB98BB98BB98BB
%98BB98BB98BBA0FD0CFFC298BB98BB98BB98BB98BBC2FD07FF99BB98BB98
%BB98BB98BB98C2FD06FFCFBBBBBABBBBBBBABBBBBBBACFFD06FFCFC1BBBB
%BABBBBBBBABBBBBBC9FD09FFC1BBBABBBBBBBABBBBBBBABBBBBBC2FD0BFF
%FD04BBBABBBBBBBABBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCA
%BB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98BB98C9FD0AFF
%99BB98BB98BB98BB98BB98BB98BBA1FD0AFFC192BB98BB98BB98BB98BBC2
%FD07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BBBBBACF
%FD06FFCFC1BBBBBAC1BBBBBAC1BBBBC9FD0BFFFD04BBBAC1BBBBBAC1BBBB
%BAC1CAFD09FFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BBBBBA
%BBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98
%BB98CAFD0BFFCA98BB98BB98BB98BB98BB98BB92C1CAFD08FFC192BB98BB
%98BB98BB98BBC2FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBB
%BABBBBBBBABBBBCFFD07FFC198BBBBBBBABBBBBBBABBC9FD0CFFC998BBBB
%BBBABBBBBBBABBBBBB98C2FD08FFC1BBBABBBBBBBABBBBBB98C9FD07FFC2
%BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB92BBCAFD07FF
%99BB98BB98BB98BB98BB92CAFD0DFFC292BB98BB98BB98BB98BB98BB92C2
%FD07FFC192BB98BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98BB92C2
%FD06FFCFFD04BBBAC1BBBBBABBBBCFFD07FFC1BAC1BBBBBAC1BBBBBABBC9
%FD0EFFC2BBBBBAC1BBBBBAC1BBBBBABBBBC9FD06FFC1BBBAC1BBBBBAC1BB
%BBBAC9FD07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB98
%BB98BBCAFD07FF99BB98BB98BB98BB98BB98CAFD0FFFC198BB98BB98BB98
%BB98BB98BB98C9FD05FFC298BB98BB98BB98BB98BBC2FD07FF99BB98BB98
%BB98BB98BB98C2FD06FFCFBBBBBABBBBBBBABBBBBBBACFFD06FFCFC1BBBB
%BABBBBBBBABBBBBBC9FD0FFFCAC1BBBBBABBBBBBBABBBBBBBABBBBFD05FF
%FD04BBBABBBBBBBABBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCA
%BB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98BB98C9FD10FF
%C9BB98BB98BB98BB98BB98BB98BBC2FD04FFC192BB98BB98BB98BB98BBC2
%FD07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BBBBBACF
%FD06FFCFC1BBBBBAC1BBBBBAC1BBBBC9FD11FFC9BBBAC1BBBBBAC1BBBBBA
%C1BBC1FD04FFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BBBBBA
%BBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98
%BB98CAFD12FFC2BB98BB98BB98BB98BB98BB98C9FFFFFFC192BB98BB98BB
%98BB98BBC2FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBBBABB
%BBBBBABBBBCFFD07FFC198BBBBBBBABBBBBBBABBC9FD13FFC2BBBABBBBBB
%BABBBBBBBABBC2FFFFFFC1BBBABBBBBBBABBBBBB98C9FD07FFC2BBBBBABB
%BBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB92BBCAFD07FF99BB98BB
%98BB98BB98BB92CAFD14FF98BB98BB98BB98BB98BB92C1FFFFFFC192BB98
%BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98BB92C2FD06FFCFFD04BB
%BAC1BBBBBABBBBCFFD07FFC1BAC1BBBBBAC1BBBBBABBC9FFFFC2C1C2C1C2
%C1C2C1C2C1C2C9FD06FFC9BAC1BBBBBAC1BBBBBABBBBFFFFFFC1BBBAC1BB
%BBBAC1BBBBBAC9FD07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98
%BB98BB98BB98BBCAFD07FF99BB98BB98BB98BB98BB98CAFFFF98BB98BB92
%BB98BB92BB92C9FD06FFC9BB98BB98BB98BB98BB98BBC9FFFFC298BB98BB
%98BB98BB98BBC2FD07FF99BB98BB98BB98BB98BB98C2FD06FFCFBBBBBABB
%BBBBBABBBBBBBACFFD06FFCFC1BBBBBABBBBBBBABBBBBBC9FFCFC198BBBB
%BBBABBBBBBBABBC9FD07FFBBBBBABBBBBBBABBBBBB98CFFFFFFD04BBBABB
%BBBBBABBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCABB98BB98BB
%98BB98BB98BBC9FD07FF98BB98BB98BB98BB98BB98C9FFFF99BB98BB98BB
%98BB98BB92C9FD06FFCABB98BB98BB98BB98BB98BBA1FFFFC192BB98BB98
%BB98BB98BBC2FD07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBB
%BAC1BBBBBACFFD06FFCFC1BBBBBAC1BBBBBAC1BBBBC9FFFFC1BAC1BBBBBA
%C1BBBBBABBC9FD07FFBBBBBAC1BBBBBAC1BBBBBAC9FFFFFD04BBBAC1BBBB
%BABBBBC9FD07FFC2BAC1BBBBBAC1BBBBBABBC2FD06FFCABB98BB98BB98BB
%98BB98BBC9FD07FF98BB98BB98BB98BB98BB98CAFFFFBBBB98BB98BB98BB
%98BB98C9FD06FFCAC198BB98BB98BB98BB98BBC3FFFFC192BB98BB98BB98
%BB98BBC2FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBBBABBBB
%BBBABBBBCFFD07FFC198BBBBBBBABBBBBBBABBC9FFCFC1BBBBBABBBBBBBA
%BBBBBBC9FD07FFFD04BBBABBBBBBBABBBBC9FFFFC1BBBABBBBBBBABBBBBB
%98C9FD07FFC2BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB
%92BBCAFD07FF99BB98BB98BB98BB98BB92CAFFFF98BB98BB98BB98BB98BB
%98C9FD06FFCFBB92BB98BB98BB98BB98BBC3FFFFC192BB98BB98BB98BB98
%BBA0FD07FF99BB98BB98BB98BB98BB92C2FD06FFCFFD04BBBAC1BBBBBABB
%BBCFFD07FFC1BAC1BBBBBAC1BBBBBABBC9FFCFC1BBBBBAC1BBBBBAC1BBBB
%C9FD07FFFD04BBBAC1BBBBBAC1BBC9FFFFC1BBBAC1BBBBBAC1BBBBBAC9FD
%07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB98BB98BBCA
%FD07FF98BB98BB98BB98BB98BB98CAFFFF99BB98BB98BB98BB98BB98C9FD
%07FFC198BB98BB98BB98BB98BBC3FFFFC198BB98BB98BB98BB98BBC2FD07
%FF99BB98BB98BB98BB98BB98C2FD07FFBBBBBABBBBBBBABBBBBB98C9FD06
%FFC9BBBBBBBABBBBBBBABBBBBBCAFFFFC198BBBBBBBABBBBBBBABBC2FD06
%FFCFBBBBBABBBBBBBABBBBBB98CAFFFFFD04BBBABBBBBBBABBBBC2FD07FF
%C198BBBBBBBABBBBBBBABBC9FD06FFCFC198BB98BB98BB98BB98BB99FD06
%FFC192BB98BB98BB98BB98BB99FFFFFF99BB98BB98BB98BB98BB92BBCAFD
%05FF99BB98BB98BB98BB98BB98BBC9FFFFC292BB98BB98BB98BB98BB98C9
%FD05FFC292BB98BB98BB98BB98BB92C9FD07FFC2BBBAC1BBBBBAC1BBBBBA
%BBBBCAFFFFCAC2BAC1BBBBBAC1BBBBBAC1BBC2FFFFFFC9BAC1BBBBBAC1BB
%BBBAC1BBC1C9FFFFFFC2BBBBBBBAC1BBBBBAC1BBBBBBFFFFFFC9BBBBBBBA
%C1BBBBBAC1BBBBBBC9FFFFCAC2BBBBBAC1BBBBBAC1BBBBBAC1CFFD07FFC9
%98BB98BB98BB98BB98BB98BB98BB99BB98BB98BB98BB98BB98BB98BBC2FF
%FFFFC9BB98BB98BB98BB98BB98BB98BB99C198BB98BB98BB98BB98BB98BB
%98C2FFFFFFCF98BB98BB98BB98BB98BB98BB92BBBBBB92BB98BB98BB98BB
%98BB98BB99FD09FFC1BBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBB
%BBBAFD04BBFD05FFC1BBBABBBBBBBABBBBBBBABBBBBB98BBBBBBBABBBBBB
%BABBBBBB98BBCAFD04FFC298BBBBBBBABBBBBBBABBBBBB98BBBBBBBABBBB
%BBBABBBBBBBABBBBCAFD09FFA0BB98BB98BB98BB98BB98BB98BB98BB98BB
%98BB98BB98BB98BB92C3FD05FFCA98BB98BB98BB98BB98BB98BB98BB98BB
%98BB98BB98BB98BB98BB9FFD05FFCABB92BB98BB98BB98BB98BB98BB98BB
%98BB98BB98BB98BB98BB92C2FD0BFFC1BBBAC1BBBBBAC1BBBBBAC1BBBBBA
%C1BBBBBAC1BBBBBAC1BBC2FD07FFC2BAC1BBBBBAC1BBBBBAC1BBBBBAC1BB
%BBBAC1BBBBBAC1BBBBBBFD07FFC2BBBBBBBAC1BBBBBAC1BBBBBAC1BBBBBA
%C1BBBBBAC1BBBBBAC1CAFD0CFFBBBB98BB98BB98BB98BB98BB98BB98BB98
%BB98BB98BB92BBCAFD08FFC192BB98BB98BB98BB98BB98BB98BB98BB98BB
%98BB98BB98CAFD08FF9FBB98BB98BB98BB98BB98BB98BB98BB98BB98BB98
%BB98BBC3FD0DFFCFBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBB
%CAFD09FFCFC198BBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBACAFD0A
%FFC1BBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBB98BBC9FD0FFFCF99BB
%92BB98BB98BB98BB98BB98BB98BB98BB92C1CAFD09FFCFFFCAC292BB98BB
%98BB98BB98BB98BB98BB98BB92BB98CAFD0CFFA0BB92BB98BB98BB98BB98
%BB98BB98BB98BB92BBA1FD12FFC2C1BBBBBAC1BBBBBAC1BBBBBABBBBBBBA
%C9FD0FFFC9BBBBBABBBBBBBAC1BBBBBAC1BBBBBABBC2FD0FFFC9C1BABBBB
%BBBAC1BBBBBAC1BBBBBABBBBC2CAFD14FFCAC299BB92BB98BB98BB98BB92
%BBC2CFFD12FFC2BB98BB98BB98BB98BB92BB98C2C9FD12FFC999BB98BB92
%BB98BB92BB98BB99CAFD19FFC9C9C1C2BBC1BBC2C2C9CFFD16FFCAC2C2C1
%C1BBC2C1C2C9FD17FFC9C9C2C2BBC1BBC2C2C9CAFD42FFCFFD1FFFCAFDEA
%FFA8FD64FF7D52F827F8277DFD32FF7D2727F82752FFFFFFFD04A8FD0CFF
%FD04A8FD11FF7E27F8272727F8277DFD30FF7DF8272727F82727A8FFFF27
%2752FD0DFF272727FD10FFA827F827F8522727F827A8FD2EFFA8F827F852
%5227F8272EFFA827F852FD0CFFA827F852FD10FFA8F82721A8FFFF2727F8
%84FD2EFF5927217DFFFFA82752FFFFFF272752FD0DFF272728FD10FF7D27
%F827A8FFFF52F82752FF7D7DA8A85284FFA85252527DFD04FF595252A87D
%7D7DFFFFA85252527DA8FFA87D59A8FF7D527DA8FD04FF7DF82752FFFFFF
%A8FFFFA85227F8277DA8FFFF7D52525259FFFFA85227F8277DA8FFFF7D52
%527DA8FD07FF7DF82727FFFFFF2727F87DFF27F85227277DFF2727F82727
%7DFFFF5227F8272727F87DFFA8F8272727F852FFFFF827527DF8272752FD
%04FF7D27272752FD05FF5227F8FD0427FF2727F8FD0427FF5227F8FD0427
%FF5227F8272727A8FD06FF7D27F827A8FFFF52F82752FF2727F827F87D52
%27217D5227F8A8A827F8275227F82752FF2727F87D2727F87EA827F827F8
%27F827F8A8FD04FF2727F827F8527DFFFF7D2727F827277DFF52F8527D52
%F82752A82727F827277D7D27F8527D52F852FD06FF7D212727FFFFFF2727
%217DFF27212752FFA827F87DFFFF27277DA8F82752FF7D27217DA8272152
%FFFF272752FF2727F87DA852F8277DFD04FFA827272127F82752FFFFFF27
%2727FFFFFFA8A8FFFFA8272152FFFF272727FFFF7DF827A8FF7D2727FD06
%FF5227F827A8FFFF27F82752FF272721FFFFFFF82752FFA827F87D7D27F8
%7DFFA8F82752A8F82752FFA827F852A827F852FFFF5227F884FD06FF5227
%F827F82752FFA827F852FD05FFA85252F82728FFA827F852FFFF5227F8A8
%A853F827A8FD05FF7D272727FFFFFF2727277DFF4C2752FFFFA827F82727
%27F8277DA8F8277DFF7E27277DA827277DFFFF272752FF272727FFFF7DF8
%277DFD08FFA8FD0427A8FF27272EFFFFFFA8522727F8272752FFFF272727
%FFFF7DF8272727F82727FD06FF7D27F827A8FFFF28F82752FF272727FFFF
%FFF827277D527D52A97D27F87DFFA8F82753A8F82752FFA828F852A827F8
%52FFFF5227F8A8FD0AFF2727F8A8FF27F852FFFFFF28F8277DA8212752FF
%A827F852FFFF5227F87D527D527DA8FD05FFA8F82727FFFFFF2727F87DFF
%27F852FFFFA827217DFD05FF7D212752FFA827F87DA827F87DFFFF272752
%FFF82728FFFF7D21277DFD04FF7D27FD04FF52F827A8FF272727FFFFA821
%277DFFA827F852FFAF212727FFFF7D2127FD0BFFA827F82752A85227F827
%7DFF272727FFFFFFF82727A8FFFF7DFF7D27F852FF7DF82752FFF82728FF
%A827F852A827F852FFFF5227F87DFFFFFF59F82727A8A87DF827F8FFA827
%F8277DFF5327F87DFF7DF82727FFA827F8277DFF5227F87DFFFFA8A8FD07
%FF52272727F827272728FFFF27F852FFFFFF592727275227277DFF272721
%522727F87DFF52F8275252F8277DFFF82728FFFF7D27277DFFFFFF7D2727
%27F8272727F87DFFFFFD042752A8272721522727F827A8FFFD042752A827
%27F852522727FD08FF2827F827F82752FFFFFF202727FFFFFFA852F827F8
%27F87DFF53F827F827F82752FFA827F827F82752FFA827F852FFFF5227F8
%7DFD04FF7D27F827F827F852FFFFFF7DF827F827FF52F827F8527D27F8A8
%FF7DF827F827FF7DF827F827F827A8FD08FF7E7D527D7DFD04FFA87DA8FD
%05FFA87D7D7DA8FFFFFFA852A87D27217DFFFFFFA8597DA8FFFFFF7D7D7D
%FFFFA87D7EA8FD05FFA8A87D7D7DFD06FFA8597D7DFFFFA87DA8FFFFA87D
%A8FFFFA87D7D7DFFFFFF7D7D53A8FD22FFA87EFFFF7DF8277DFD31FFA8FD
%2DFFA8F827527D202727A8FD5FFFA852F827F827F8A8FD1EFFA8FD0BFFA8
%FD0FFFA8FFFFFFA8FD23FFA87D7D7DFD05FF527DA852A8FFFF5252FF52A8
%FFFF527DFFFF5352FF7E52FFFF7D275227A8FFA8275252FFFFFF7D27F87D
%FFFF7D52FFFFA852275227FFFF5252FF277DFD2CFF2752FFF8A8FFFF2727
%7D277DFFFF5227FFFF7DF8FF2752FFFF52277D7DA8FF7D277D2752FFFF28
%277D7DFFFF7DF8FFFFFF7D5227A8A8FF7D275227A8FD2CFF277DA827A8FF
%FF52205227A8FFFF5252FFFFA8277D527DFFFF7D27287DFFFFA8207D277D
%FFFF522752FFFFFF7D27A9FFFFFF5252FD04FF272752FD2DFF2752FFF8A8
%FFFF277D27277EFFFF5252FFFFFF522727FFFFFF52277DFFFFFF7D27F828
%FD04FF7D2727FFFF7DF8FD04FF7D27FD04FF7DF8AFFD2DFF52275227A8FF
%FF527D7DF8A8FFFF5252FFFFFF7D2152FFFFFF7D27A87DAFFFA827A8F8A8
%FFFF527D5227FFFF7D27A8FFFFFF5252FD04FF7D27A8FD2DFFA8272752FF
%FFFF52A8A85284FFFF7D52FFFFFFA8527DFFFFFF7D5227277DFF7D52A852
%52FFFF7D27277DFFFFA852FD04FF7D52FD04FFA852FDFCFFFDFCFFFDB0FF
%CFFFFFFFCFFD50FFA0C9C2C2A0C2C1C299C299C199C199BB98BB98BB98BB
%98BB98BB98BB98BB99BB99C299C199C2C2C2A0C9C2CAFD3DFFCACFCACFC9
%CAC9CFC9C9C9CAC9C9C2C9C9C9C3C9C9C9C3C9C9C9C3C9C3C9C9CAC9C9C9
%CFC9CACAFFCACFCFFDFCFFFDFCFFFDFCFFFFFFFF7D7D7DFD08FFA87DFF7D
%A8FD1BFF7D52FFFFFFA8A87D7D7DFD0DFF7DA8FD15FFA87DFD0CFF7D27F8
%2727FD07FFF852A82752FD1AFF7DF8277DFFFFA8F827F8277DFD0BFF7D27
%52FD15FF52277DFD0BFF2727FF52277DFD06FF2752FFF87DFD1AFF52277E
%FFFFFFA82727FFA8FD0DFFA8FD17FFA8FD0CFFF852FFA852A8FF52F852A8
%FFF852A82752FF7D27277DFFA827525252FFA8272752FD05FF522727A8A8
%27F827A8FFFFA8F852FFFFFF7D2752277DFFA82752277DA8527DA8275227
%53FFFF522727A8FFA8272752FF845252597D52A87D2752277DFF7D275227
%7D2752FD04FF7DF87D2752FF4C52FFF87DA827527D27FF5227532727FF27
%527D277DFFFFFF7D27525227A8522752FFFFFFA827202727FF7D275252F8
%FF2727522752A8F87D7D27525227FF52277D2727FF27527D277DA8F8277D
%7DF8AF5227522727FF275252277DF852FD04FF2727FF52F8A82752A82752
%7DF87D52277D52F8FF2752A827527DF852FFFFFF7DF8FF5327A87DF8A8FF
%FFFFA8F8275252FF7DF8FF5227A82727FFF87DA82752A8F8A87D27A852F8
%7D27277D27527DF859842752FF5227A852F8A82727A82752FFF87D2752FF
%A87DA85227FF5227A82728FF217D7D27275228A85227AF5252A8F8275252
%7DFFFFFF5227A97DF8FF7D277DFFFFFFA82752FFFFFF7D27A87D27A82752
%A82752A9217D8427847DF8A85227275252A8F82752527DA821A8FF7D21A8
%5227A85227FF217DA8277DF827FF59F87D5227FF52F8A82752A827527DF8
%A8A8527D52F8FF2752A82752FF277DFFFFFF59F8FF5227A87DF8A8FFFFFF
%A8F852FFFFFF7DF8A85227A82727FFF852A82752A8F8A87D27A852F8FF52
%52A82752FF277D7D277DFF5227A852F8A82727A82752A8F87D7DF8522727
%FF7E2752F852FF2727FF277DA8272E52F8FF5227522752FF272752277DFF
%FFFF7D27522727FF52277DFFFFFFA8272727F87D7D27A87D27FF52275227
%52A8277D84277D7DF8FF7D27522727FF272752277DA827A8FF7D27A85227
%A82727FF272752277DFF7D2752A8FFA87D2752A8FF527DA8527DFF7D5227
%7DFFA8527D2752FFA8275252FD05FF525227A8FF8452A8FFFFFFA8525352
%527DA852A87D59FFA8277DF852A8527DA852A87D52A8FF522752A9FFA827
%5252FFA852A8FF7D52A87D52FF527DFF7D527DF87DFD17FF5252A82727FD
%21FF5252842752FD21FF277D7D277DFD17FFA8F827F8A8FD21FF7DF82727
%A8FD21FF7DF82727FF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (PANTONE 1665 C)
%%CMYKCustomColor: 0 0.6785 1 0 (PANTONE 1665 C)
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                     
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2012-06-19T15:33:37-07:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>204</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADMAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qsnnhghead1jhjBaS&#xA;RyAqqOpJORlIRFnYMoQMjQFkvM/M35uOHe20CMcRsb6UVr7xxn9bfdnPavts3WL5/qH63qtD7PCh&#xA;LMf80fpP6vmwDUNf1vUWLXt9NPX9lnPAfJB8I+gZo8uoyZPqkS9Dh0mLH9EQPggOm4ylyU00zzT5&#xA;h0xg1nfzRqv+6yxeP6Uaq/hmTi1eXH9MiHEz6DDl+qIP3/N6P5U/Ne2vJEs9bRbWdqKl2m0THtzB&#xA;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&#xA;4Ev/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmp:MetadataDate>2012-06-19T15:33:37-07:00</xmp:MetadataDate>
         <xmp:ModifyDate>2012-06-19T15:33:37-07:00</xmp:ModifyDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>612.000000</stDim:w>
            <stDim:h>792.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>True</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Black</rdf:li>
               <rdf:li>PANTONE 1665 C</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 1665 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>67.843140</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DerivedFrom rdf:parseType="Resource"/>
         <xmpMM:DocumentID>xmp.did:FB7F117407206811808384FED72371DC</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:FB7F117407206811808384FED72371DC</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:FB7F117407206811808384FED72371DC</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FB7F117407206811808384FED72371DC</stEvt:instanceID>
                  <stEvt:when>2012-06-19T15:33:37-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -434.271 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 434.271 li
344.375 434.271 li
344.375 0 li
cp
clp
110.346 193.406 mo
110.346 219.36 87.791 240.283 60.1191 240.283 cv
32.4482 240.283 9.89404 219.36 9.89404 193.406 cv
9.89209 46.8779 li
9.89209 20.9243 32.4463 0 60.1182 0 cv
87.7891 0 110.344 20.9243 110.344 46.877 cv
110.346 193.406 li
46.8521 194.383 mo
46.8521 201.273 52.7422 207.472 60.1191 207.472 cv
67.4961 207.472 73.3862 201.274 73.3862 194.383 cv
73.3843 45.8853 li
73.3843 38.9941 67.4941 32.7964 60.1182 32.7964 cv
52.7412 32.7964 46.8501 38.9941 46.8501 45.8853 cv
46.8521 194.383 li
cp
170.389 207.66 mo
177.762 207.66 183.653 201.491 183.653 194.63 cv
183.653 193.056 183.612 186.096 183.612 177.313 cv
183.612 169.174 181.233 161.923 178.262 158.233 cv
132.572 102.667 li
123.263 90.9243 120.207 75.6982 120.207 63.4263 cv
120.207 54.6431 120.165 48.6362 120.165 47.0942 cv
120.165 21.2764 142.715 .455078 170.39 .455078 cv
198.064 .455078 220.614 21.2764 220.614 47.0942 cv
220.614 74.1914 li
183.655 74.1914 li
183.655 46.1094 li
183.655 39.2471 177.764 33.0791 170.39 33.0791 cv
163.017 33.0791 157.123 39.2471 157.123 46.1094 cv
157.123 47.6821 157.165 54.6431 157.165 63.4263 cv
157.165 71.5645 159.542 78.8154 162.517 82.5063 cv
207.984 137.792 li
217.461 149.57 220.57 164.949 220.57 177.313 cv
220.57 186.096 220.612 192.102 220.612 193.646 cv
220.612 219.462 198.063 240.283 170.389 240.283 cv
142.714 240.283 120.163 219.462 120.163 193.646 cv
120.163 164.054 li
157.121 164.054 li
157.121 194.629 li
157.121 201.491 163.015 207.66 170.389 207.66 cv
280.661 240.283 mo
252.988 240.283 230.436 219.36 230.436 193.406 cv
230.433 6.45313 li
267.392 6.45313 li
267.393 194.383 li
267.393 201.273 273.283 207.472 280.661 207.472 cv
288.037 207.472 293.928 201.274 293.928 194.383 cv
293.925 6.45313 li
330.884 6.45313 li
330.885 193.406 li
330.885 219.36 308.333 240.283 280.661 240.283 cv
false sop
/0 
<<
/Name (PANTONE 1665 C)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 .678431 1 0 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
ef
17.6558 415.661 mo
11.8706 415.661 li
11.8706 416.039 11.9087 416.375 11.9087 416.711 cv
11.9087 420.072 11.002 421.752 9.14893 421.752 cv
6.1626 421.752 5.70898 418.435 5.70898 411.419 cv
5.70898 403.689 5.89795 399.95 9.07373 399.95 cv
10.9258 399.95 11.7959 401.463 11.7959 404.655 cv
11.7959 405.243 li
17.5049 405.243 li
17.5049 404.655 li
17.5049 398.48 14.6689 395.372 9.18701 395.372 cv
5.74658 395.372 3.21387 396.632 1.88965 398.858 cv
.302734 401.505 0 405.159 0 410.158 cv
0 417.302 .37793 421.794 3.09961 424.399 cv
4.30957 425.575 6.54102 426.457 9.22461 426.457 cv
14.6309 426.457 17.6938 423.099 17.6938 417.048 cv
17.6938 416.585 17.6938 416.124 17.6558 415.661 cv
true sop
0 0 0 1 nzopmsc
f
29.0005 404.403 mo
23.1025 404.403 21.0234 407.597 21.0234 414.989 cv
21.0234 423.182 22.6118 426.457 28.8877 426.457 cv
35.1636 426.457 36.7134 423.182 36.7134 414.989 cv
36.7134 407.681 34.6714 404.403 29.0005 404.403 cv
26.3926 415.241 mo
26.3926 410.2 26.7324 408.101 28.8496 408.101 cv
31.0425 408.101 31.3828 410.158 31.3828 415.241 cv
31.3828 420.534 30.9668 422.805 28.8877 422.805 cv
26.8076 422.805 26.3926 420.534 26.3926 415.241 cv
ef
40.4136 425.995 mo
45.6685 425.995 li
45.6685 395.75 li
40.4136 395.75 li
40.4136 425.995 li
cp
f
49.7505 425.995 mo
55.0059 425.995 li
55.0059 395.75 li
49.7505 395.75 li
49.7505 425.995 li
cp
f
64.1548 412.764 mo
64.1548 412.05 li
64.1548 409.234 64.9868 407.849 66.5747 407.849 cv
68.0488 407.849 68.9185 408.982 68.9185 410.997 cv
68.9185 412.764 li
64.1548 412.764 li
68.9937 418.183 mo
68.9937 418.561 li
68.9937 421.373 68.1245 422.804 66.5366 422.804 cv
64.8345 422.804 64.1548 421.373 64.1548 418.267 cv
64.1548 416.08 li
74.2866 416.08 li
74.2866 412.89 li
74.2866 407.177 71.7915 404.403 66.5747 404.403 cv
60.7896 404.403 58.7104 407.639 58.7104 414.989 cv
58.7104 423.182 60.2988 426.456 66.5747 426.456 cv
71.7534 426.456 74.2866 423.686 74.2866 418.183 cv
68.9937 418.183 li
cp
ef
87.1797 413.31 mo
87.1797 417.889 li
87.1797 421.122 86.4614 422.721 84.9497 422.721 cv
82.9453 422.721 82.7183 420.324 82.7183 415.661 cv
82.7183 415.157 li
82.7183 410.2 82.7563 407.933 84.8735 407.933 cv
86.8013 407.933 87.1797 409.612 87.1797 413.31 cv
92.3965 425.575 mo
92.3965 409.57 li
92.3965 408.311 92.4346 406.798 92.5483 404.907 cv
87.3687 404.907 li
87.1797 406.926 li
86.4233 405.328 84.9116 404.403 82.9834 404.403 cv
81.0176 404.403 79.3916 405.37 78.5596 407.01 cv
77.5386 408.982 77.4634 411.839 77.4634 415.787 cv
77.4634 422.972 78.7114 426.499 82.7563 426.499 cv
84.3823 426.499 85.8184 425.743 87.1035 424.189 cv
87.1035 426.583 li
87.1035 429.44 87.0664 430.826 85.0625 430.826 cv
83.5874 430.826 83.0215 430.154 82.9453 428.181 cv
77.8413 428.181 li
77.8413 428.433 li
77.8413 432.128 80.3364 434.271 84.9116 434.271 cv
90.7334 434.271 92.3965 431.75 92.3965 425.575 cv
ef
101.673 412.764 mo
101.673 412.05 li
101.673 409.234 102.505 407.849 104.093 407.849 cv
105.567 407.849 106.437 408.982 106.437 410.997 cv
106.437 412.764 li
101.673 412.764 li
106.513 418.183 mo
106.513 418.561 li
106.513 421.373 105.643 422.804 104.055 422.804 cv
102.354 422.804 101.673 421.373 101.673 418.267 cv
101.673 416.08 li
111.805 416.08 li
111.805 412.89 li
111.805 407.177 109.31 404.403 104.093 404.403 cv
98.3086 404.403 96.2285 407.639 96.2285 414.989 cv
96.2285 423.182 97.8169 426.456 104.093 426.456 cv
109.271 426.456 111.805 423.686 111.805 418.183 cv
106.513 418.183 li
cp
ef
132.647 404.403 mo
126.75 404.403 124.671 407.597 124.671 414.989 cv
124.671 423.182 126.258 426.457 132.534 426.457 cv
138.81 426.457 140.36 423.182 140.36 414.989 cv
140.36 407.681 138.319 404.403 132.647 404.403 cv
130.039 415.241 mo
130.039 410.2 130.379 408.101 132.497 408.101 cv
134.688 408.101 135.03 410.158 135.03 415.241 cv
135.03 420.534 134.614 422.805 132.534 422.805 cv
130.455 422.805 130.039 420.534 130.039 415.241 cv
ef
144.967 425.995 mo
150.223 425.995 li
150.223 408.395 li
153.587 408.395 li
153.587 404.907 li
150.223 404.907 li
150.223 402.641 li
150.223 400.329 150.639 399.53 152.718 399.53 cv
152.982 399.53 153.285 399.53 153.587 399.573 cv
153.587 395.414 li
152.642 395.33 151.848 395.288 151.13 395.288 cv
145.913 395.288 144.967 396.718 144.967 401.379 cv
144.967 404.907 li
142.283 404.907 li
142.283 408.395 li
144.967 408.395 li
144.967 425.995 li
f
166.176 425.995 mo
181.223 425.995 li
181.223 421.122 li
171.923 421.122 li
171.923 412.303 li
180.165 412.303 li
180.165 407.64 li
171.923 407.64 li
171.923 400.413 li
180.883 400.413 li
180.883 395.75 li
166.176 395.75 li
166.176 425.995 li
cp
f
190.286 425.995 mo
190.286 410.998 li
190.286 409.15 191.192 408.017 192.555 408.017 cv
194.027 408.017 194.332 409.234 194.332 411.587 cv
194.332 425.995 li
199.663 425.995 li
199.663 409.948 li
199.663 406.336 197.848 404.403 194.52 404.403 cv
192.63 404.403 191.154 405.328 190.286 407.094 cv
190.135 404.907 li
184.766 404.907 li
184.956 406.294 184.956 407.556 184.956 408.688 cv
184.956 425.995 li
190.286 425.995 li
f
213.147 413.31 mo
213.147 417.889 li
213.147 421.122 212.43 422.721 210.918 422.721 cv
208.915 422.721 208.687 420.324 208.687 415.661 cv
208.687 415.157 li
208.687 410.2 208.724 407.933 210.843 407.933 cv
212.77 407.933 213.147 409.612 213.147 413.31 cv
218.365 425.575 mo
218.365 409.57 li
218.365 408.311 218.402 406.798 218.516 404.907 cv
213.338 404.907 li
213.147 406.926 li
212.392 405.328 210.881 404.403 208.952 404.403 cv
206.984 404.403 205.359 405.37 204.527 407.01 cv
203.508 408.982 203.431 411.839 203.431 415.787 cv
203.431 422.972 204.679 426.499 208.724 426.499 cv
210.35 426.499 211.788 425.743 213.071 424.189 cv
213.071 426.583 li
213.071 429.44 213.035 430.826 211.03 430.826 cv
209.556 430.826 208.988 430.154 208.915 428.181 cv
203.81 428.181 li
203.81 428.433 li
203.81 432.128 206.305 434.271 210.881 434.271 cv
216.703 434.271 218.365 431.75 218.365 425.575 cv
ef
222.538 425.995 mo
227.869 425.995 li
227.869 404.907 li
222.538 404.907 li
222.538 425.995 li
cp
222.538 400.749 mo
227.869 400.749 li
227.869 395.75 li
222.538 395.75 li
222.538 400.749 li
cp
ef
237.357 425.995 mo
237.357 410.998 li
237.357 409.15 238.265 408.017 239.627 408.017 cv
241.1 408.017 241.402 409.234 241.402 411.587 cv
241.402 425.995 li
246.733 425.995 li
246.733 409.948 li
246.733 406.336 244.92 404.403 241.592 404.403 cv
239.703 404.403 238.227 405.328 237.357 407.094 cv
237.207 404.907 li
231.838 404.907 li
232.026 406.294 232.026 407.556 232.026 408.688 cv
232.026 425.995 li
237.357 425.995 li
f
255.946 412.764 mo
255.946 412.05 li
255.946 409.234 256.778 407.849 258.367 407.849 cv
259.842 407.849 260.711 408.982 260.711 410.997 cv
260.711 412.764 li
255.946 412.764 li
260.787 418.183 mo
260.787 418.561 li
260.787 421.373 259.918 422.804 258.33 422.804 cv
256.628 422.804 255.946 421.373 255.946 418.267 cv
255.946 416.08 li
266.08 416.08 li
266.08 412.89 li
266.08 407.177 263.585 404.403 258.367 404.403 cv
252.583 404.403 250.504 407.639 250.504 414.989 cv
250.504 423.182 252.092 426.456 258.367 426.456 cv
263.547 426.456 266.08 423.686 266.08 418.183 cv
260.787 418.183 li
cp
ef
274.701 412.764 mo
274.701 412.05 li
274.701 409.234 275.533 407.849 277.121 407.849 cv
278.595 407.849 279.465 408.982 279.465 410.997 cv
279.465 412.764 li
274.701 412.764 li
279.54 418.183 mo
279.54 418.561 li
279.54 421.373 278.671 422.804 277.083 422.804 cv
275.381 422.804 274.701 421.373 274.701 418.267 cv
274.701 416.08 li
284.833 416.08 li
284.833 412.89 li
284.833 407.177 282.338 404.403 277.121 404.403 cv
271.336 404.403 269.257 407.639 269.257 414.989 cv
269.257 423.182 270.845 426.456 277.121 426.456 cv
282.3 426.456 284.833 423.686 284.833 418.183 cv
279.54 418.183 li
cp
ef
288.501 425.995 mo
293.832 425.995 li
293.832 414.653 li
293.832 411.082 294.929 409.528 297.989 409.528 cv
298.48 409.528 li
298.48 404.403 li
298.142 404.403 li
295.798 404.403 294.172 405.58 293.492 407.64 cv
293.149 404.865 li
288.501 404.865 li
288.501 425.995 li
f
301.324 425.995 mo
306.655 425.995 li
306.655 404.907 li
301.324 404.907 li
301.324 425.995 li
cp
301.324 400.749 mo
306.655 400.749 li
306.655 395.75 li
301.324 395.75 li
301.324 400.749 li
cp
ef
316.145 425.995 mo
316.145 410.998 li
316.145 409.15 317.052 408.017 318.414 408.017 cv
319.887 408.017 320.189 409.234 320.189 411.587 cv
320.189 425.995 li
325.521 425.995 li
325.521 409.948 li
325.521 406.336 323.707 404.403 320.379 404.403 cv
318.488 404.403 317.014 405.328 316.145 407.094 cv
315.994 404.907 li
310.625 404.907 li
310.813 406.294 310.813 407.556 310.813 408.688 cv
310.813 425.995 li
316.145 425.995 li
f
339.007 413.31 mo
339.007 417.889 li
339.007 421.122 338.288 422.721 336.775 422.721 cv
334.772 422.721 334.546 420.324 334.546 415.661 cv
334.546 415.157 li
334.546 410.2 334.584 407.933 336.699 407.933 cv
338.629 407.933 339.007 409.612 339.007 413.31 cv
344.224 425.575 mo
344.224 409.57 li
344.224 408.311 344.262 406.798 344.375 404.907 cv
339.195 404.907 li
339.007 406.926 li
338.251 405.328 336.737 404.403 334.81 404.403 cv
332.844 404.403 331.219 405.37 330.387 407.01 cv
329.365 408.982 329.29 411.839 329.29 415.787 cv
329.29 422.972 330.538 426.499 334.584 426.499 cv
336.209 426.499 337.646 425.743 338.931 424.189 cv
338.931 426.583 li
338.931 429.44 338.893 430.826 336.89 430.826 cv
335.415 430.826 334.848 430.154 334.772 428.181 cv
329.669 428.181 li
329.669 428.433 li
329.669 432.128 332.164 434.271 336.737 434.271 cv
342.561 434.271 344.224 431.75 344.224 425.575 cv
ef
174.531 367.66 mo
148.438 367.66 99.291 365.946 99.291 365.946 cv
98.3872 365.905 98.3862 365.066 99.29 365.024 cv
99.29 365.024 147.957 363.311 174.531 363.311 cv
201.111 363.311 244.373 365.024 244.373 365.024 cv
245.263 365.071 245.279 365.899 244.373 365.946 cv
244.373 365.946 200.631 367.66 174.531 367.66 cv
false sop
1 /0 /CSD get_res sepcs
1 sep
f
19.5308 271.322 mo
19.5308 288.85 li
19.4741 291.543 19.8325 293.718 20.6069 295.372 cv
21.3843 297.025 22.9175 297.876 25.2124 297.923 cv
27.0698 297.876 28.4019 297.352 29.2095 296.35 cv
30.0151 295.347 30.5063 294.151 30.6821 292.76 cv
30.8569 291.369 30.9272 290.065 30.8921 288.85 cv
30.8921 271.322 li
30.9272 270.124 30.8589 268.933 30.687 267.751 cv
30.5151 266.569 30.0366 265.582 29.2476 264.79 cv
28.4604 263.999 27.1577 263.586 25.3423 263.556 cv
23.4409 263.614 22.0776 264.139 21.2524 265.126 cv
20.4272 266.114 19.9253 267.213 19.7456 268.423 cv
19.5659 269.633 19.4946 270.599 19.5308 271.322 cv
cp
8.82178 286.581 mo
8.82178 273.042 li
8.78857 270.444 9.06787 267.955 9.6626 265.575 cv
10.2573 263.193 11.3696 261.031 13.0005 259.088 cv
14.5337 257.354 16.3481 256.113 18.4448 255.368 cv
20.5405 254.621 22.7319 254.259 25.0151 254.276 cv
27.4839 254.252 29.7964 254.609 31.9526 255.351 cv
34.1108 256.09 35.9995 257.359 37.6177 259.156 cv
38.9634 260.622 39.9946 262.588 40.7114 265.051 cv
41.4292 267.514 41.7905 270.75 41.7974 274.76 cv
41.7974 286.993 li
41.814 290.504 41.5034 293.468 40.8667 295.886 cv
40.23 298.305 39.1694 300.358 37.6831 302.047 cv
36.3276 303.537 34.8589 304.643 33.2769 305.363 cv
31.6938 306.085 30.1626 306.555 28.6821 306.771 cv
27.2007 306.988 25.9351 307.087 24.8843 307.064 cv
23.2671 307.095 21.4683 306.835 19.4897 306.285 cv
17.5112 305.735 15.6587 304.712 13.9341 303.215 cv
12.2095 301.719 10.9194 299.564 10.062 296.755 cv
9.5542 294.904 9.21631 293.036 9.05029 291.151 cv
8.88428 289.269 8.80811 287.745 8.82178 286.581 cv
cp
221.709 268.455 mo
220.928 266.979 219.842 265.723 218.457 264.686 cv
216.969 263.573 215.248 262.995 213.314 262.947 cv
211.494 262.999 210.111 263.384 209.242 264.159 cv
208.414 264.896 207.881 265.683 207.674 266.524 cv
207.488 267.282 207.389 267.828 207.432 268.122 cv
207.502 269.94 208.176 271.339 209.473 272.302 cv
210.717 273.229 212.117 273.949 213.68 274.471 cv
219.748 276.806 li
221.205 277.353 222.67 278.122 224.143 279.113 cv
225.604 280.1 226.824 281.277 227.793 282.63 cv
228.133 283.029 228.645 283.987 229.318 285.536 cv
229.971 287.036 230.34 288.97 230.414 291.341 cv
230.455 292.13 230.371 293.282 230.164 294.797 cv
229.961 296.293 229.387 297.912 228.436 299.658 cv
227.498 301.375 225.943 302.968 223.748 304.437 cv
222.311 305.31 220.76 305.943 219.08 306.344 cv
217.389 306.747 215.922 306.943 214.686 306.938 cv
210.564 307.018 207.145 306.329 204.424 304.89 cv
201.764 303.483 199.398 300.884 197.342 297.051 cv
205.035 291.675 li
205.928 293.715 207.131 295.33 208.645 296.51 cv
210.238 297.755 212.102 298.385 214.225 298.406 cv
215.061 298.422 215.982 298.263 216.988 297.938 cv
218.021 297.603 218.92 296.999 219.68 296.135 cv
220.467 295.242 220.861 293.996 220.898 292.437 cv
220.92 291.168 220.654 290.11 220.076 289.29 cv
219.502 288.478 218.523 287.738 217.17 287.062 cv
215.832 286.39 213.969 285.575 211.586 284.618 cv
209.152 283.676 206.924 282.575 204.904 281.317 cv
202.906 280.072 201.303 278.446 200.096 276.437 cv
198.898 274.444 198.273 271.833 198.242 268.579 cv
198.273 264.407 199.619 261.062 202.264 258.508 cv
204.902 255.959 208.66 254.629 213.578 254.555 cv
217.043 254.555 220.039 255.3 222.582 256.784 cv
225.066 258.235 227.252 260.397 229.141 263.283 cv
221.709 268.455 li
cp
318.754 338.294 mo
318.754 330.783 li
313.281 319.491 li
317.484 319.491 li
320.734 326.514 li
323.984 319.491 li
328.162 319.491 li
322.713 330.783 li
322.713 338.294 li
318.754 338.294 li
cp
297.945 338.294 mo
297.945 323.118 li
293.424 323.118 li
293.424 319.491 li
306.424 319.491 li
306.424 323.118 li
301.904 323.118 li
301.904 338.294 li
297.945 338.294 li
cp
278.686 338.294 mo
278.686 336.52 li
278.686 336.52 li
278.686 321.138 li
278.686 321.138 li
278.686 319.491 li
282.645 319.491 li
282.645 321.138 li
282.645 321.138 li
282.645 336.52 li
282.645 336.52 li
282.645 338.294 li
278.686 338.294 li
cp
256.582 334.977 mo
259.66 332.688 li
260.164 333.571 260.691 334.227 261.24 334.651 cv
261.789 335.076 262.42 335.288 263.131 335.285 cv
263.824 335.272 264.369 335.085 264.768 334.719 cv
265.168 334.354 265.371 333.882 265.379 333.305 cv
265.391 332.288 264.732 331.491 263.4 330.912 cv
260.951 329.852 li
260.201 329.517 259.543 329.124 258.977 328.675 cv
257.727 327.628 257.1 326.222 257.096 324.455 cv
257.113 322.776 257.633 321.453 258.652 320.484 cv
259.674 319.517 261.084 319.022 262.887 319.002 cv
265.494 319.015 267.439 320.121 268.727 322.32 cv
265.893 324.455 li
264.951 323.045 263.877 322.342 262.668 322.347 cv
262.049 322.355 261.566 322.518 261.219 322.832 cv
260.871 323.146 260.693 323.559 260.688 324.069 cv
260.688 324.541 260.865 324.963 261.223 325.333 cv
261.578 325.705 262.117 326.056 262.838 326.385 cv
265.35 327.488 li
266.111 327.825 266.766 328.212 267.311 328.648 cv
268.535 329.686 269.164 331.135 269.191 332.996 cv
269.168 334.733 268.605 336.126 267.506 337.172 cv
266.406 338.219 264.914 338.756 263.033 338.783 cv
260.223 338.774 258.072 337.506 256.582 334.977 cv
cp
214.598 338.294 mo
214.598 319.491 li
226.645 319.491 li
226.645 323.118 li
218.557 323.118 li
218.557 326.488 li
224.08 326.488 li
224.08 330.114 li
218.557 330.114 li
218.557 334.668 li
227.158 334.668 li
227.158 338.294 li
214.598 338.294 li
cp
200.594 338.294 mo
196.416 338.294 li
190.941 319.491 li
194.9 319.491 li
198.518 332.635 li
202.109 319.491 li
206.068 319.491 li
200.594 338.294 li
cp
235.59 319.473 mo
240.086 319.473 li
241.281 319.462 242.336 319.505 243.248 319.602 cv
244.16 319.699 244.939 319.922 245.584 320.271 cv
246.395 320.727 247.01 321.358 247.436 322.168 cv
247.861 322.977 248.074 323.931 248.078 325.029 cv
248.074 326.297 247.793 327.363 247.236 328.231 cv
246.682 329.101 245.869 329.73 244.803 330.122 cv
248.713 338.276 li
244.338 338.276 li
240.869 330.611 li
239.549 330.611 li
239.549 338.276 li
235.59 338.276 li
235.59 319.473 li
cp
239.549 322.663 mo
239.549 327.602 li
240.648 327.602 li
241.84 327.631 242.719 327.482 243.281 327.158 cv
243.844 326.834 244.123 326.158 244.119 325.132 cv
244.123 324.106 243.844 323.431 243.281 323.106 cv
242.719 322.782 241.84 322.635 240.648 322.663 cv
239.549 322.663 li
cp
177.914 338.294 mo
177.914 336.52 li
177.914 336.52 li
177.914 321.138 li
177.914 321.138 li
177.914 319.491 li
181.873 319.491 li
181.873 321.138 li
181.873 321.138 li
181.873 336.52 li
181.873 336.52 li
181.873 338.294 li
177.914 338.294 li
cp
154.168 338.294 mo
154.168 319.491 li
157.98 319.491 li
163.699 330.912 li
163.625 319.491 li
167.072 319.491 li
167.072 338.294 li
163.821 338.294 li
157.541 325.587 li
157.614 338.294 li
154.168 338.294 li
cp
134.865 319.491 mo
134.865 331.246 li
134.839 332.602 134.99 333.589 135.317 334.211 cv
135.645 334.833 136.309 335.139 137.309 335.131 cv
138.32 335.138 138.986 334.828 139.31 334.201 cv
139.632 333.575 139.781 332.59 139.752 331.246 cv
139.752 319.491 li
143.711 319.491 li
143.711 332.198 li
143.716 334.407 143.193 336.054 142.141 337.137 cv
141.089 338.221 139.479 338.761 137.309 338.758 cv
133.012 338.771 130.878 336.584 130.906 332.198 cv
130.906 319.491 li
134.865 319.491 li
cp
272.738 287.834 mo
269.928 288.24 267.773 289.109 266.277 290.44 cv
264.781 291.772 264.025 293.349 264.012 295.168 cv
264.037 296.499 264.402 297.555 265.111 298.339 cv
265.818 299.123 266.719 299.523 267.811 299.542 cv
269.326 299.539 270.523 298.905 271.398 297.642 cv
272.273 296.376 272.721 294.497 272.738 292.006 cv
272.738 287.834 li
cp
274.072 301.964 mo
272.459 303.576 270.854 304.776 269.258 305.563 cv
267.662 306.353 265.957 306.745 264.145 306.742 cv
261.381 306.7 259.199 305.792 257.6 304.017 cv
256.002 302.243 255.186 299.854 255.152 296.85 cv
255.152 288.832 261.014 284.01 272.738 282.383 cv
272.738 279.558 li
272.729 278.492 272.316 277.627 271.506 276.958 cv
270.697 276.289 269.553 275.943 268.076 275.923 cv
265.477 275.958 262.746 277.168 259.881 279.558 cv
255.551 273.972 li
259.238 270.843 263.59 269.295 268.609 269.329 cv
277.469 269.362 281.932 273.468 281.998 281.643 cv
281.998 297.052 li
282.021 298.229 282.576 298.971 283.664 299.272 cv
283.664 306.271 li
283.119 306.326 282.609 306.35 282.133 306.339 cv
278.379 306.36 275.693 304.903 274.072 301.964 cv
cp
316.186 284.67 mo
324.846 284.67 li
324.846 281.574 li
324.836 277.593 323.391 275.598 320.516 275.587 cv
319.199 275.591 318.152 276.085 317.377 277.067 cv
316.602 278.047 316.203 279.483 316.186 281.373 cv
316.186 284.67 li
cp
332.84 304.386 mo
328.865 306.079 325.09 306.933 321.516 306.943 cv
316.969 306.925 313.504 305.667 311.123 303.166 cv
308.74 300.667 307.541 297.036 307.525 292.274 cv
307.525 283.795 li
307.543 279.071 308.641 275.482 310.814 273.028 cv
312.988 270.575 316.135 269.343 320.25 269.328 cv
324.119 269.366 327.141 270.518 329.318 272.786 cv
331.496 275.052 332.602 278.206 332.641 282.248 cv
332.641 289.985 li
316.186 289.985 li
316.186 293.081 li
316.197 295.149 316.807 296.75 318.01 297.885 cv
319.213 299.018 320.936 299.593 323.182 299.608 cv
325.557 299.608 328.398 298.801 331.709 297.187 cv
332.84 304.386 li
cp
298.793 291.438 mo
298.738 294.163 299.084 296.098 299.826 297.241 cv
300.572 298.385 302.047 298.94 304.256 298.907 cv
305.523 298.84 li
305.523 306.78 li
304.102 306.893 302.814 306.938 301.658 306.914 cv
297.16 306.96 294 306.045 292.174 304.172 cv
290.35 302.3 289.469 299.198 289.533 294.87 cv
289.533 277.172 li
284.338 277.172 li
284.338 270.376 li
289.533 270.376 li
289.533 257.522 li
298.793 257.522 li
298.793 270.376 li
305.256 270.376 li
305.256 277.172 li
298.793 277.172 li
298.793 291.438 li
cp
46.9585 306.234 mo
46.9585 270.454 li
54.9331 270.454 li
55.5444 274.997 li
56.8354 271.411 59.6206 269.577 63.8999 269.493 cv
64.5122 269.493 li
64.5122 278.214 li
63.6284 278.214 li
60.9097 278.197 58.9761 278.892 57.8296 280.297 cv
56.6802 281.7 56.1235 283.913 56.1558 286.935 cv
56.1558 306.234 li
46.9585 306.234 li
cp
134.628 291.305 mo
134.627 293.034 134.695 294.345 134.824 295.521 cv
134.876 296.008 134.968 296.454 135.085 296.87 cv
135.322 297.565 li
135.753 298.663 136.349 299.347 137.106 299.621 cv
138 299.9 li
138.415 300.006 138.748 300.047 139 300.023 cv
139.682 300.022 140.048 299.978 140.383 299.897 cv
141.156 299.732 141.75 299.389 142.164 298.868 cv
142.401 298.569 142.603 298.195 142.77 297.745 cv
143.093 296.999 143.294 296.131 143.375 295.143 cv
143.488 293.741 143.537 292.293 143.488 290.799 cv
143.488 287.571 li
143.5 286.772 143.506 286.003 143.488 285.267 cv
143.515 283.503 143.454 281.929 143.302 280.545 cv
143.149 279.16 142.744 278.065 142.083 277.263 cv
141.421 276.46 140.341 276.05 138.841 276.033 cv
137.429 276.066 136.422 276.539 135.822 277.452 cv
135.221 278.366 134.863 279.521 134.75 280.922 cv
134.687 281.704 134.64 282.5 134.628 283.311 cv
134.611 283.715 134.617 284.11 134.628 284.493 cv
134.628 291.305 li
cp
125.919 287.357 mo
125.886 285.629 125.953 283.741 126.119 281.693 cv
126.285 279.646 126.75 277.686 127.513 275.813 cv
128.279 273.941 129.541 272.403 131.302 271.2 cv
133.062 269.996 135.521 269.374 138.677 269.333 cv
139.931 269.306 141.25 269.397 142.634 269.61 cv
144.019 269.822 145.361 270.32 146.662 271.104 cv
147.962 271.886 149.113 273.118 150.116 274.801 cv
150.917 276.227 151.467 278.017 151.765 280.168 cv
152.064 282.319 152.206 284.986 152.189 288.168 cv
152.256 291.792 152.091 294.788 151.695 297.155 cv
151.298 299.522 150.269 301.59 148.607 303.357 cv
148.102 304 147.181 304.706 145.841 305.477 cv
144.504 306.245 142.388 306.664 139.495 306.733 cv
138.429 306.755 137.167 306.679 135.708 306.506 cv
134.25 306.332 132.957 305.936 131.828 305.315 cv
129.994 304.192 128.654 302.785 127.809 301.095 cv
126.965 299.405 126.431 297.418 126.208 295.134 cv
125.986 292.852 125.888 290.259 125.919 287.357 cv
cp
156.291 306.234 mo
156.291 270.454 li
164.798 270.454 li
164.798 277.069 li
166.011 275.08 167.35 273.372 169.011 271.948 cv
170.673 270.523 172.65 269.777 174.943 269.712 cv
177.813 269.789 179.869 270.482 181.115 271.789 cv
182.359 273.098 183.117 274.556 183.389 276.162 cv
183.66 277.771 183.768 279.063 183.713 280.04 cv
183.713 306.234 li
174.484 306.234 li
174.484 282.876 li
174.504 282.37 174.473 281.739 174.387 280.986 cv
174.303 280.231 174.049 279.557 173.621 278.96 cv
173.197 278.364 172.48 278.05 171.474 278.016 cv
170.191 278.047 169.093 278.422 168.177 279.138 cv
167.263 279.854 166.376 280.718 165.519 281.728 cv
165.519 306.234 li
156.291 306.234 li
cp
112.554 294.748 mo
112.554 281.392 li
112.429 280.136 112.212 279.121 111.9 278.33 cv
111.341 276.916 110.217 276.214 108.529 276.226 cv
106.704 276.211 105.582 277.146 105.166 279.033 cv
104.75 280.918 104.58 283.839 104.656 287.793 cv
104.656 288.599 li
104.598 292.336 104.817 295.153 105.31 297.049 cv
105.804 298.944 106.921 299.896 108.665 299.899 cv
110.876 299.908 112.173 298.234 112.554 294.748 cv
cp
95.1714 314.351 mo
100.943 310.79 li
101.385 311.468 102.042 312.182 102.917 312.929 cv
103.79 313.676 105.011 314.08 106.582 314.144 cv
107.408 314.164 108.373 313.951 109.474 313.502 cv
110.576 313.054 111.423 312.239 112.02 311.063 cv
112.429 310.015 112.609 308.622 112.552 306.889 cv
112.554 303.31 li
110.255 305.996 107.634 307.087 104.724 307.075 cv
101.148 307.08 98.6538 305.569 97.2437 302.546 cv
95.8325 299.521 95.1558 294.955 95.2134 288.848 cv
95.1802 285.496 95.2798 282.587 95.5112 280.118 cv
95.7417 277.651 96.2983 275.58 97.1831 273.909 cv
97.9487 272.504 99.0181 271.418 100.393 270.647 cv
101.769 269.878 103.349 269.487 105.132 269.476 cv
106.877 269.485 108.832 270.18 109.767 270.657 cv
110.454 271.006 111.822 271.849 112.554 273.12 cv
112.554 270.335 li
121.578 270.335 li
121.578 302.264 li
121.617 304.041 121.535 305.954 121.332 308.003 cv
121.129 310.052 120.927 312 120.044 313.85 cv
119.162 315.699 117.71 317.214 115.691 318.394 cv
113.669 319.572 110.854 320.183 107.244 320.222 cv
104.605 320.19 102.447 319.847 100.769 319.19 cv
99.0913 318.534 97.8062 317.757 96.9175 316.854 cv
96.0269 315.953 95.4458 315.118 95.1714 314.351 cv
cp
245.535 291.438 mo
245.48 294.163 245.826 296.098 246.568 297.241 cv
247.313 298.385 248.789 298.94 251 298.907 cv
252.266 298.84 li
252.266 306.78 li
250.844 306.893 249.555 306.938 248.4 306.914 cv
243.902 306.96 240.74 306.045 238.916 304.172 cv
237.092 302.3 236.211 299.198 236.275 294.87 cv
236.275 277.172 li
231.08 277.172 li
231.08 270.376 li
236.275 270.376 li
236.275 257.522 li
245.535 257.522 li
245.535 270.376 li
251.998 270.376 li
251.998 277.172 li
245.535 277.172 li
245.535 291.438 li
cp
75.0142 284.67 mo
83.6733 284.67 li
83.6733 281.574 li
83.6636 277.593 82.2202 275.598 79.3452 275.587 cv
78.0269 275.591 76.98 276.085 76.2046 277.067 cv
75.4292 278.047 75.0327 279.483 75.0142 281.373 cv
75.0142 284.67 li
cp
91.6685 304.386 mo
87.6929 306.079 83.9194 306.933 80.3433 306.943 cv
75.7964 306.925 72.3325 305.667 69.9507 303.166 cv
67.5698 300.667 66.3696 297.036 66.353 292.274 cv
66.353 283.795 li
66.3716 279.071 67.4683 275.482 69.6431 273.028 cv
71.8179 270.575 74.9624 269.343 79.0776 269.328 cv
82.9458 269.366 85.9683 270.518 88.146 272.786 cv
90.3237 275.052 91.4312 278.206 91.4683 282.248 cv
91.4683 289.985 li
75.0142 289.985 li
75.0142 293.081 li
75.0269 295.149 75.6343 296.75 76.8374 297.885 cv
78.0415 299.018 79.7642 299.593 82.0093 299.608 cv
84.3843 299.608 87.228 298.801 90.5366 297.187 cv
91.6685 304.386 li
cp
0 0 0 1 cmyk
ef
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 14.0
%%AI8_CreatorVersion: 16.0.0
%%For: (Heather Miller) ()
%%Title: (coe_v_spot.eps)
%%CreationDate: 6/19/12 3:33 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb!R&q-GO4dkH)cJ9q82`<ghl\t'_0LZPn5'buu[!WqfQg#!n7g.t_'::f\H@DD^<NpF.gdci#WWB$q'R4Pdr>-Eq:Ha3P,Q+3j[
%EAaAL)gO62;mf^_\^NO?pUodeo9u)$MYXWNca(^Tp<1c`^"#@3[U8=5?E)asGC(k1@^Ge!)+t`gZ]EX+ZX.Km^M<_WWh^@\<40d+
%:S[`3o^h`\n#jTMVM<(d,C06^=*q-S`5uXCc9L`G6-39ChhM4uj,2?)l)3-OJ+7DT-\\>ej.f4Oc/l8$dQCJ[*FA2-Q/M&>P0W/`
%6W`:tI.;JNL'J:*rhXL.lgKg>^K^"_g9(6t2X51lo2Y+*p.45"R!@Is&=qFf3mCjC:@P24flT-T><2U55-p].-]2asDCG%VA]41c
%K0BrNY5d%Ns(<X,;PLZ^hlTp.RL@sN=l]M^hGhBh'`+:_3W3[C],.S=+3$f?A^P]4gTU8s.jFF`S$dGEK0jOpIa\Ye[I/CT&#@Tj
%rZLh`EKg+so6=+/]8e\?dLM:!p""EcP)OP:aJo54%P_X!HJI#P\<\Aa)`^5h]LS7eVTiQpfE?+S%s)dnP]5Dp]Jj"ECh3@^m;Cra
%:e+iMS+IL7I+jha>Pp]+,ll`hf3<(@5aA05M9;(Ti>M%@qu[54<GMTC<5jZoRMe%m/4H4c<k6eb6*[9(SF+i+)__3HYP2Kt"b(P6
%J*1kIgTp<mWPhGP*WPCc51Oe'WpB:+:+1TBQc!";*.H)mYZ<B3[;rfmQ+(I1=N@_ONWhZB[Uil!bJIHX$%HHe;@.-(9)*"tKMP2d
%XAc7\dqUb,_mc[HHsWr'GNakIGj0HdO7Xm8ae.mF/;_-H(;ba>Ynk3p+f3Kr,5dFC&0h%3E-"_"G7c2"NSb9kr/E:*4OKH,,5dF>
%j'O?+R'9AD:"hh_6FcMDeu;]TN6`#pSDooFO^\WHdl/`:FS'\AFDS=.*''W9?A&5b/VFXa@nUnJ.Fdu-SMC&#[1GMc_\=Wn?%``<
%j#;XOc9M<*,KCGpNO9<]r(Ugd;@1;mm2p]91k6h6oY]jNNfRWiCJh`a]MQ]6k],[*>dRkl17p4'KE#="KT8tX6AKJXW9I66%tA(@
%9&Bmr`<gr/Iq'LP/sbR_c$>(RNqP`;S's'h'i&U*E_7dF(-#[j3MgtuUSCqhrDL;eaSCd6f]^tm(@Rg&:>_tqkmndpj\/:kFNu=Q
%BF@i26g7Zk4+/KBjP24EMrRCU5,E-lpO`D6D*^OZe&<kZ/;neh&TLM(gB&=AXF.[n?eR,\;cOS'K7Bk"<8!>0d3mp,rB\DV5N4?p
%M']K2=sEsoT7!5Z(Ot\1C!uIIann!L:SC%GLqiS[=JXin?htF/QHQX'r1uWC$N2UVdN?I-U%02d%Y)rQV;M)-qA8)=N09=*Q5.>P
%[A9-GphW4iKoufCXAY`q<Y>([P#g"g`KH,YiLa/fR47G*G\33tb:FDls'$cW>0rq.<`2MG7\9Z.g@aAAe5?Wa$jH4JobX4^aXGec
%TP(5.4KZCtQ(bA=rKm.Dl4TPkBUN45J.lpR1rV/cCW)D2LQ!(jUj9@6hC[`Ch&):5QMt[$7ATE&JQ1`u$@CMKM0MDa91G(7mN?EY
%e0*'Dk3:M9(-VXp\9WoJ/UY#NO75'AQP3K_24QXK[fC=_`/G+62>BE0D7<eYF?%4njP?m>_pX$p@3"Oi]Y`DM*H_p1HN-F8Q)YO*
%hK0P2(HI_?Hgn"&2k&@Q-&oQS<iZC8(i2c_CTR8^(Y6H9bT\n'L\66Ckh:Y^1j`9'IPg:ZZS6DH8S%0VD8grCl*We<XA93Vr*qbG
%'$ao*!m;[8oNa,<C==LMJHqLN*'cOmP"^$<Sl2/@&hPX&&P>lG:b(ZAU5;8KK@D<Bn:$BW03N[emM]'Qd&1bacJB%tjZ,QI5q(9h
%H.6o4W3P>PWJ""PV--ge=e`,0nc>:9=i,O2*dKe;]o:ML*'/"eTJVT_hH(nJ[SHf_E%Z3jN,pYD&ifWNkKG:Bi<qDU_AchPSD+^K
%R\6I'A"2JH84?m":Lnm6BN%^+biH=jpAh<uZG^cI03Pr+0.Q*@1ADoWoYg%bOnB?qh,#p("H1^#`X'#$AjZ.WNR7`BEuFEk>;U]^
%hUY)[^HG-$K=H)%]u;]8E#\6.19Q8+3c^(XjZptSkh>U4p'Q8S`,,g,BELD&Nq8RmD[Tfs;%V]/p0>ZS2uV1&5'/I"&S<OS.G..:
%&'Ac>RI$6Wn812Ia8k"]0>9:Mhk"a&PTWOQ.(,n\"6B.u[Ys#9\Yn4(`:b>)SCij2U%A($(>D0ILWXI.[NkjN(A1*f>f?a6E&KcA
%4&g+p8SoDa9<p_9Q:G*NZ,(Fo_lRg,aXl*T+d1O%Ju>u1&lp$h`b&>2,_(5Z#Dt<E^QZSWoKbM'n0D<5ZUFgWPULc-&9F_Qh7_\M
%kg=E^Z&L.E<MoBH-)t1P$&\J_H0HF)#EDXE0aC]K[!Vb!")i(#8kpA@O(VmB[AjH$D4ou&.OF%jQ^i.oM8aj9bI[oilVWpU@i"_(
%d3PHZ(@E+E74h%L0%hW$>&]/39D1A'E2_%(r-[tB*N`;R-(ujp3Ia,+7'TSkD+3UM'_6]TK`BQ=Y)F!75[#FOO!"r^(2_C7nt]h/
%P:1e2T$3ZC8L=dZ$'g>m,#n.*6QK8YrMrhY7L;6AbX"rl&pK.B;gQVUkK&F?M^7<I(GT?#<,&Hg5BJ`m-n$r</f"[<T"mA:cZ4F2
%Ip=IL`n)LVW&D>hh@[&%jeA6q,07`dLg#*"7#^!IIoRtar?GC,>g*/*;R,4/d3NJMrMrh9^eu/6CKsO3Ro5BN/:"^U^ZZO7/ZG\3
%PtU":291oa^[aT4'oB'XWM-:5>#OSjs"13@r=M7&g,?JDJ!*Sa[&(ig/@%Yh*hBYR0G(@K<_T#8GkoKWW>JVRqS]n"1dl97:S0Ud
%kGIi)3Tu]ZEb*OR3PS[-Q)p\.s('*dras><b?I0A=/"\TVW"AH)t#,'[(q=m[T;H$1cfYAMK_H>^%HTbb*,2)\om4E'[93hcA8<$
%IsXW3,[,>m2`\AnZJY$OG6G\82m-ftbF!nHQ4I;nA9@Y4Lk'h?/KM2V&@6J[VHSVS4/dBHB$"W-BPU>*<"-dUB?ZOR/atpIC6NL[
%N$+0m8f_KNM0n]#%:kjVVZ3W_VAClP^)>N5\))dW%k#8+.O+^N</19I^/tp=o!lQfRqRIk=R28GDqek2TPjf&-J!ApD0nDjP`>!\
%_>=GL.#?3TfZ3)>AHgKU!8VGagOAN+I+OkSr=/j7?V]gEJcB3?Si3[h/2V8P/Fp4$X<6:ESa!g(_6S7gH.UC_h!5agV:[AE8Q8$]
%@c*$/5=Y##_<CPWXGaPbjF+XU0N\^3hB@m+e#6G8'Umt9ru"/@G,PPn_A+N7B1+LpSG7&,OmU0YP_q6hnCX%f&*NpbEF*3l;1ADY
%"RS:c$i?Gd$g)s7mRD8`&&p_Ve0rJB163=%5c4$VA])9Bs/T-]=rjt'/RULONBDJZirQd2`>-+1Lc:Y7AT!TPlB$E-XI&j.`5qs!
%eihX(VQ[?6^`%^ODc`-Phdhbjrm;5E^MI7Q^b,`X^Z;KuQ,qA0@8`E2;qsHMI<f$b9\Bn_br[E>Q3[n_-,qa4G)Q5<N#qRrfA9KD
%+_$amOL#!AhNfpr=]/i1p5I,HhDBf5neeo,@if(oeJE\ZhF2>8En]bL;Yc56>%E!rqSbn7?X:SD8MBd4G-\H?5%FSuRV2)'Y4nS`
%6_cQ39'36ZXq5=sJG#H8q"!OJ<].9Irm-q3AR32//Pf$F9^8D.`&EnnO0@M$N$dX:ZmL9T[%UkHEiG@[qXC82bsY_]*5\;2aB=(R
%Tk\0srYG4$<QJ:q'AW3*>-.4;88BOI)f:Yc;L-%P/=&+%g1&XMB/%=TI?2:&oc0__BkrM:JD9.(:n2)'Y4C\+=b(spm4/+SIu"9X
%1g(4$(!JdB4]mpAa6R,;pag4>-_(K@7c's9j5Z"CBtjh8_b]0eDioO8s)Z*sCH4%[7R139o)rB[qg=fuj)5ntKit!]/7UZb1VD`Y
%))L_)9@pof:/MG/=l'o\MW:?]n8IkRUf=n^!qR;74g3PsUW2gIgiSir$TLeLWWdNdB\;4"TL4*rIc>Dm=sl")APSq$_i`k5m$m]F
%0]a3pgp@9\>RHJUS.XshA[A&XE>D6.F]sFAVbMdX:=>J$qA-GS6\r+c3E._HMmWG_K*)D1fN8\tS4BephCa4OkF'aNj^dWqE;Xb5
%PB!_03$^0;E)FhU>2t\N#WZhX4DrUmE\ube^JUN5hk:`S\W4md.6Y#l.@A1d=e3_VI"tY&Qkqg,7Z$/`;[^R5c$'lF6oNI+rhaa;
%";^NE1+su>bXhVe4]8>tk<_^/hEPk2cF7$;H?"gS3p%V^AIG%<*!)n[JjnR[k!F:9Kdl-cAW)Md.TuMBUS&1NZ@V[DnA2%AEUKD)
%4piXAZ9ljH,o4J1QjLVcI-+[]j5qH'-&`o?)k8hmr)A8`*.%`s3.<bq&g\9mJr=>YeCGC57n@8bk;%2%>*@6-RC=\\!]F552)"=D
%k!1#m(/_tG^7\u0>XG6OcJK0oJWH*h1XTZ_cE/[\"eBWAatlcaCS".%Thc58S;+S]`&b>3EmBHb1]/3T1!r=q8pQ-6=d2dHp#();
%WJ/kF]VaB1?BThr/H<5&7,OkDX1I.;G^bulL!7$!/BQK%nC_AQhBR%@QV>[CdUt27:^0uLf*M1I3Jb[Z$:MmSX+3N;0Y->Mb:HMC
%eu,g-]Nl-IaBPDpL;(^mKXX4K*q>ZMTIgh6;Uu,^neH]X@R$kl$3JL!D#e'G\.+OBbRKn$C5#5T_KEdl-1s6>d%;qMKioU!1NH+i
%B*>tH\@J3Wl@]g$FM8<%33NLL>E<57.@"k/b[hI=-Bqp45p8\kJb-=S<0:?DmIRdu4*Fn-b%Hph[5A$7-/:\`g9X@@bhlggB-X)?
%Z!^IH!7)>h+!3.iPZ!mnOg])Q'KQS]28N!h?=:#ndZSH=iFf8D_p@]c`qpL]G:n$VB3@+m%FFpZD+tsqQTW;D:f*s#4t?\PJiD-b
%2jNM8G`]o_7Z]ZBC(^'VnL)6!9$:D+gL")F3ep\Tr<P\NP^3J66D>)ec$U^^7e4F:i'$X,[#DN`m!"T[=J/A%+#/\FP=#4=pe1NX
%b9HsdqEHg^A.`17^S.ou/F$*ujXST/-8A6iCR(j]C6?gXnQPITmdXAFl<,Bjg*6@C[(WIQ\gdrdC@aOY\$1NVVQsBI@Tnp(U_]rI
%UaPgj\Xglb#gP<V_o2-t891d]4BH,t'Y,S_l=Olo-;Q&?g*Jbq)>G4V-I40+=ucI7M+?YQM$%]]SQR74[S_O,;5tJ<6oA54E=M(&
%eu7rn)OO0?=bBRX&hQt[6KK`r%WL`cPI^=]j"Lr-`DW_%>N;?T<"sF[27_3m8fUV1Xsk27dDDRu-M;q\;M3[)>WPM[AJP9L;^GQ+
%p'gUeW5h5/i3UH#i]V9WJ7sFo3aCP2=q!_rQATd]$F]DZr(UUr[IG\oS&=Nu,,eL3D*BT(KF[,;,TSV;+FuO&c)?l$E-(l[qm&nJ
%@Z09,Ng@,nk<W5EPQj+-$I$4ORtJ-XV'`<AW7"cS+"<74YW"-pDKu`Ra:4KZHlUX*7UHAs_D.Ma`<i(9B4'.9@Cf;fR++mm,Nlcu
%Zb)$1bpC&M[\u,T-2HJ80tgAVZG\j2Xi"U2N]C\GZ"K!(k+4/@%7`&F`UW%Q>F^k%jG-j+(%SeI`suq_5caB\3%#!7T`1<0#pa43
%aXc?;dufR>prM]9d8;o.'7Fk9Ku8phF8X*(U2TW_)un-!5-@>b5?;/M2j]%gDeH$RV`gcEP&4m>%!d5[8hQ(@EGD0c>'e3bVj,=%
%0eRP3;_A)"O7=r&)*fK1V-U*P0N(;3(giU!]/9+a-eMHT53MndeUhfJc=4*-HGsC*kbh>U$]e3OnH6F!]'X,,SNaAEP:(#9r_J:j
%77P!U*jq\bUP/r+`K&"QoC8XP"-9n&m@V[Al`D1#'jfY@p%V+\rt-nBl`JdqI%6JLYAsCCPTD[\Wme7qXjNOICTh+6[Z4S!iU0M1
%,C\Ke2snUf"np%*UX8Cl'!1uFV&-)thZH"=hqWOWend8$]=#pSj2J&$O6:[^o[seHS\5SVHhHEHA9YkIs-NCu=b#\F]8chhIuPO7
%s+)iM$9?QiIbq3?!&q`<]1uldNE9F*n-U+:S5^FM<:;k\s/GZu4q8LWh-.9bO2-4pB!#8R-m2mmhZu4@qs1fKD"PFEC8I)W>.<C6
%C"CW0me,mQiN8C2DsctZ7)5V*de^$$Cj2[@g*O/XC]&CYgPLI6HFMLWM#bBQK3&!Zd\@'g2/B<tf@BWsBse-HegVhX=\tm7mVe*9
%.hM%":SV85m+D=&i(9g9Z]A:f:6=<3W03T^G(\I<&H/nR?X=5.qA+L27rJ&#DUs0>b^QVkT,.58?\tUs@>\eac2RZh4EFL!WlLH8
%RBsn7#NhCR;<#VNKq3Sd$(jt&r!^gJ(dE@GM-p2j?hWEq+"6t]>ZKd=n_8C:rX-VGV_L:`oBJ3!TdX-)`A>jor$<QjOMpo\JNTnh
%lbG2b'IV3]^[k3?9YK)o.B"UIZ&hmaU$07rJYQ9)]p#0R3'N(*:k&J_ORYI64/jpV*30Ep6oc!Oq0uL$1up.YBq10J+5TUaON.e0
%%V1+I)D?oc>5)t3^!Q/tkf4Ab&0Qcc4\H9HbWb)>NIT0Op;_IL)Z'`WGLhNM]`\'V+'1c.FPE?Q[pC:bb`bpNT%Sg[Le!,Jm:Sj!
%n%_Q-WZ$BKUMf_XGbApO)(cXK])sO4[b<C,m@Sk*ST=Ri#KZV>2%YSHf"Pn4:KjRbU0abRVaX`Hpm60192"go.sgS>d^2Qk`A=Fb
%)SF_%]tVd5>SMAAKqEfUITciIMeZl9$mkmBc\D\'!['<=Xa7Wes"EhG1Gk<g##cNI+o^9"F^O/^Gd_Kp",Q:9Q9BD`HI7$B<bm39
%)/_:10jqguY6-hap$t%`fQ`DMCf!G'ptYcbK\D<-5YuWtSZeY4iGVmGQNb^N^GRn*XhR?lf<-"FVM)h5\cNd-Vjk8'eNPCmf(uGu
%41!>03XGGT>OU+STPDb\Jr.lOHYtYZIE!V%X2BRbp1rKJAV$<LqpfN!j(4UfDWCPjcf[p[k'st!$+)A9HMM52?b7<RSE0HDr71hZ
%__@LID=ntMWc`Zh6K0u)r`-;fL6VF[lErlWg'l+R0)].<S`^1hPA16]!#!-24<eGEa,jPQ6:<jaN3.9HDoa\]9i)&8r8FmMRM2.h
%0qhYNToV%6N>h$(."i['PQ*QrqT<0-=WORBb>aGY]o]8rr`r+hcdC]DYD-?h>,!-#U6=P$c5/1#s$]<Nrr\V]hZ!,]=<%:`CsZrU
%?N+l0`HZ5(o4r_$2q#YDgJV*3%!%n4#Vc9m]_4Ra!5pAd]0I7FOk0)<-r_;]`qr7?fk8q7GN#h\!=FDDmjK;QcF4],)X[\'JaqO`
%K/%=AJ*YQ6B;.XKps/m@`D7c9=o5,o;C<8BrTfmoo[CQ<KWf^:p'QQ$\Dsg5*60lHQ:7K"WNnUA+U=$6RZ1)?V2_q?J)fA]4)bn/
%2H<W@d"p_I/d[1_s$`5^im5#EXnCZc.Zn*&n=WAMYBm[1Thj62lLqI]gA(K$Mqas['RnGE]Dt2:8.p0PK:uh\2.![0-P;bq>e%7X
%<oIKm"$hY7hM3,b,Cq>D2l9am`uE&`rQ\2'j;eOg"+r\6[GHCPe`rsdiPA2JFI/21;eu%FnQN7r@joHfp/n,E'"kd?&S4Dm^O:H,
%"0.re&s2FVe6H0K9;14lB48:GdqnTK?U>,#*'@f\`]r;gjE4LAmaV+&mQp`HejS<fUgUH'?,0OT]3CS:b)alrXN"TB,Co0Xh0lE?
%%LsnY3GS:/O#`OK^oS8Qb\suWPQ5rN=1kaV5B`0_.aM\fjD:JU53ls7dRJto7E16L9OPhDD*dd`7Z4KS]13X.g^HPs/g3TJ(djn;
%%&jZb4_@RKF$%r8fH.5;-:`f][#!6>8;.5C69A$4_j_9;&kiE^U5UrjRK0^KG=S,.kg'PN#4;_iOtf@=+UgYs=p!4tj=!Kh&UHS2
%Vu<.RJ7.SmJ>bPDDkJ#39Wcui8fMuVDB5[V=3#b-hkgV>Vu%b]&s"`(hIiVT%(#RD4H,VM':4$>6,^AODBb"?,EM3!T5g\c0''g`
%N;9eNaIIpV"q]3Uf35;"h]IlFYOiXDc;8qO5"iqGf:QJ.!<$^2/p6mbpuH<Vrg+DU'f=D([bi"J!0iU,<,]KurVbuh&dCg#"&a;h
%<%e[0iejYco:OG1G1,bQ0:4BpJ:lI-.AD)T##efGE8BS4"pt-Ls.eHDY=ZS,Bt]0"o_K6L"rL10J6mjWrOL>UWo;%S`kW_247?OK
%BkXdNg4"BA;feR3chUTh[tD8mHVoR)nXj,.'PJ)n#1"f')`<C9oVtG#7lf*"<Xbu$dVX1pWcY(3!!-)HBb9GuT7T*M_ouEZUBVpG
%*WRckC=V3W@[T7Yesg&U7BYG/J:#Pe>H=BFD$jG)2*tKEdsZ#dL5''ChTp8(ND0)$[0`:p)0tRS&L?k<=^3Y/Y'#A:gf2[uW<G-`
%Z3dPHAG([c(blg=.eb55%'(npmO9MF<([KI,S#ME2ncibJ?J[sm!;22Da_#0A;Mk1c>s(&>TfM'1LM$kqm'WI:lfK5E#EMqWX_PF
%=3/+_KDPc$*Q_!K"@tA<d#u,-g;=@^+a(luZT;ePlUrS.of'8MV!)3NTn7%C2u7n5+`I#L9a4h"o,@E6@Qr>S6FD-u(b<>K4\g1T
%T'E*"jn5"b!8GX(,u@B(KkgHaC>^^=#9/!_.2s^5@.(\%#]7!qT>GfBF9o23FR61=1<71XXV8lTMB[_(.`>9<4OA@`0"YZt2_,34
%]]BO$*9?dWGV@n)FM%FAr[Ye$Jgs%NSW@sgs$UOW;h2>H``g'B>-f:$A+-8CI/,k*57gH3=sn?_+2NC!)bo)BnWIclLNqpsdM_jC
%e4+h"G13n?s,<<!#EQ"CD:HBP$LSfOjeB?8Q>D7_o_fN_>S,]([!G"b3)U[J3#:"N1iakL5l(-=I=K#IFqUEMkW-]q-P[pD.Y?R4
%Os:.%NP<tjNV?I*`3:W9r'uL]Dpj7)5N*=NW*@(\!MKZ8kV`A;GJ)]7o<fO3J7(2Dd/6?ajLE\%0(=a]f.BKXZ6I#.deIaoGuF+F
%eSY%cNj_gjICi^17B.^3a_CN-.,[^)3l(4lAmO=fA94==-"g"1)Dl83oW8CIEU_e8e[&:n0VEbnql>/OU;##hedLp0`]tA-m(7FY
%pr24>NPIM!r[aAOEk)<?)hkWHm]Ms0f9%Jce]!O7;gr`Xni<IU((V2t2a@."IaX1_?Rr_di0XD!4BU,mchk]PS$i4*1OZi@/&*Ob
%)tm3IEW%`gOdOaEee?5p\^OY9Z+0>7QC'nJYnB\O%=%O;Q;0"1XILT&%^4$3A`Z`e1@*O@dX=#NRf?sk[,)r7Y5E!M*^=N*78l-d
%2n?,][H4<$49&Md?H#iSkHS?N-+hump#j1ik@edLhs,'G4);U[eb4uB=m=f!.-6r`om(\nYl:@L'_3j,M`rp:BRhfE>dnJoQ7a8&
%'?fODR94i.T-7/\Q;nPjO0@6TI,hQ$R-th1#hlp"R^$slT8G=a])i"C_qLOS,63TI#tVbJrENKpgR'J&.]"paF'IChhKaXTgJ-dP
%p:AJa39YLsX1c^E?.7S11<(2#Wk]:\RCptWI\frhbNl6%0QAZ+Xa=DYfLkH7k0N&,G%+KG"R4ELT:WIg3dp5K5CT-53p!T5gZqYg
%mtHe]g$(llk/=IPSa#9Xk/P$^[DZp#qXXIcHLZ[]fD=:B9'LNFX4,&<(Lt^fe(jTfjipZReLC2Y\i$X/P\Mpsm+LW&ooD,^dT95W
%3`W1u00?n=c>(@AKlEjnXN'q6ZG#)-p4fsNIA)qOT5dVcp;!3DIBB_K:Zge1Vkb+eX*XLqo0GD@P'jDlBD&][?bSY=:?MjRaga;+
%l&0-A:-1OaZ)"F)d:r#>=e59PoVMFmW`S&J*`WuQ^N2VpU=34BFPE;Q'WZ\RmVHViou=UBA,^do[<ZcQg$)JDQAm1rh9*(8s/YA4
%Bl5u"27&c9SR+N1eb8gLkS.Ee]%rr\T09-&>^1G'rQDkGKlhJuO_/Z<\biHhQtC(sQL)k5/bQ@&K`P;"*ks\4ju`!+%sF$%=f9lp
%.2SfUCcZth3X$Fc@D+*>#@G7:hOX(0rKmiA0;`B[a3FI@Dl9l$Iep[_j://0];V5?I/eG8]!"=<<3)JpcVDf1)nVhCQksDEB8=%h
%-biF"b,+Z:H$=S=4FR5*\?P8K.7fiLL\75lXI#p_A&ke%6fn(5B$mO*b2VkAZWeWE`fb4ADjJZjHoq9_Fad0Zl1?U+gt/,5]fH<8
%Rl\,oI'+`UQ95cWn8S'agM+:6R<nVnoMBh5*0a$m87QOD]hkW0qS.3e3ph*OQD[l`chb;4Bbmh)MG?78:%btaVeBA;-!%TAH:bqj
%QNfK6?;Gu6<3E[&e+KkJe#]p[QWU/Xeq0sOjP0(O)sK2Fe;DlCY#@TU.[?d`D<u@i:_Xs&F%oTu]?si^r(5@42cGtfd4*/t9J?8t
%pU\GAP!63Mg38FkqVo)3FGl]%#!:'UVq/%qG+d<tKWERT<]p@(S`7;`r(=S/rR5)VI*tbK0+JJ^WZ6!UkG(c$S$MX-;NdYerNCm_
%dX$("[5G8`1Rl`u^H14i)tUj%)qhg[dk23L@Dh7WYq@MA`teGu5V:lp.gK:i7\1(spmY">i,mH;HWj5U?MAO%Be8N=]VHMoI[be)
%=-Va3h,D(dO31ViZgW2iCm`s'jm7"KiUcb[=ukJ$9_gir.Mms1[.i%WKED)BPK:)nK9Bt>\\(J7e#,r1_l%k(jnnVGhpV\hpP`,1
%(`RjOV#8M<8q(]N-o]WNHbZJ.Pl%MN"kQ\(Z+IYhs6"7@kNt?(H+6u,rLRmUO1@d(kNQIm?qE$<B76B';QBDc*VqmHSlUcU%opBB
%BBoK"WBFUI]sQ=b:T`UIp?TA;rF^W2qe>btFhYH<^[]4/eiQIIc0l76.KuD;C<+0>]g<pVZaE)k\g=!"D^O%o]g(@LNVPYt0PfD>
%0>H]EMefA#Vpa&Bo"ljIpctQjFAf=*MoBl.Le=k1ohJD*bpmr1,*S<FkDVsJDKf#RDIrZcV<[kgrgGg5jdXCr)Tn:ZWL/,`Q&;".
%7<n4$_d7[^2K:Q7m8*"m>+[%jptcg0G:kr$>9Pp]LLt<3I)r?1ipM>9I9X%+f',k<rHTGDE2iubcH:u2=Eg[M\b2.tmd(o83qPUZ
%b<*st/0rg[D=:5ZlRW!1VlHp<=/V_1lu&*RH1@4sVdL>`2\'VPSN[4!]"Mo?o`"1Cm'Pu`gKRhIfq%Dg:<ag>lJl9;GIlUPTQ_k3
%GA<Ym`0-kLma%)cp?e)@Rnos?9nMPIkM<+WI7q3u\Q];j^GOhCM=9BW.=)K-U/QT]d;@^S;tK5)Q%,]FO8,G.Q:-Yld1=f8"1(&%
%ZGa=%T,=-&"P6!I_eQ>DC=0OQLfSHnK[rM)6#?OQS23Lm@,:)Ypuuk/,t@j@diu'sW,U^_'caub/mYDKp9.[Y0?g;$&Yb<0:JZm#
%CuSD$`GM-h[W-P*bF`XnJdK'Hb9iG6(Ja.3V_?%N34?k+7aJ>3.e3N32Hd7uqr.amc6h5Jg/V8mq5tPT<5'rbQ2BDrNPdH#V'0bV
%P3gfK@@L_]gAG1q$OD7a9+D*IGV<YmlK'9f1Ah09gf/HL#A%!,):DDoM>guZ<2IC'n6RQlIj-#+r*o.-TA1*oPD"IIkfNo3m9ccs
%$fj$l?t1:5c/7OlH:_rBe0B!f4t0@^P<A..@B>MV\@OXFZM]PfFii0u*?b_5GAgsJ^?u,&QCoa#ao7O$]W"i]&MP;cGLZM?q(OR`
%bW2_](Z*iXKHnYhHID0]d<!"NEHGSU&'`.X_otRR_:Y'BY_VQV4nH"5.fHmJHE$?p*]=RkmGo)$*=9<'i3%*El/G<<E-lXPFaQ;:
%gJmnX,(LG%\q"jP[QGQ=)Z<Z#8^D9rk1;ZN38QjpMC&5NOaq246KLr.%i(qtqtqHC:s=!h>dQk?KKTOqS'JM;B3hsW9OfbRjiet]
%oB<BS!LA'3,/\*7VI\uLGW,9No52^\.7kaGq+g;cnD1GE*<Bb*Y&i7n0V0bKTQUG"o'p?&Cq[_4>:+VJb<b5n<P/8[P!p^g7c8\A
%'S!C(die?,D#erY)<baKWL+ks,+aKFZ:3Z5.;u'TXUgN6^V$X%0tS-0c7(K^#H$S2liudc@*p370nAPhkGO\0D+:GB-t[\X,uk7Q
%3YbTSq0h("CGU#n&Zd?g?)V';X,&;W&VdC[k>^r4ckD1#BuM$,c[/Ks2<SW#3JTF3TI\"B78P%Ucd/"E_dY[Fk*K^7`2">]r_SX*
%*\SkhQr<r_^[u8ubfe@m3>G0]\0PcKd+I+.pXR29(1Pl)"6A3/l=OKBF%N`I0ubDA4:]itpi\[#>4Lmo<sZ@=@pp<TC$?W)qi4V&
%#8so*$@2qYB6F@<Qu$/Wg'Ri,kL>0pEX12mp4mXPkC$t5I4(?1B3+a;`kkK\gD:7<c=8nU(r7:0?a2<'1d-/2/Rfj--pn<)!hf_4
%e[MSLD/>a;Z99'r/32o5Y'bSsW;]7>5hgR0L1El>GtB:&9aHQgZV1QL_V$W75J&$AC6e!'3.`%Y)s4ld8dlq.r#"M@Y060NH@2E=
%EX\p3*E<)!GMN\3h!S\U!0R2/G,#Fq@/0SVF'e>:/41XFbYiE/XO4I&^QWCk;rta);#F7_!.;Hj:"YcZ@\#\H3I![@GMg-Q&5*Lg
%X?[Qq65F8=j2lqp)Nr&[aDs%\RV=J]Mgt+S=kq%h$]Qe'1FlC&;'I9:Z%T<o!'bBU,V/7Z*$dA+"q&3K!T>2)eAs0*gmDN5Y<@=*
%o)-iNZriOmLH]3r/)u:A..?Uj0:2(2!HRL*.0^_2V/o>ZhN(U07umJfq?7Ip*A.QU'<g)1`G>B#H.k@.i&%8h=&/TE;d/(k81%T_
%kBdmFNTn8>kj/fp1UABdPGgAmeDMIBgCj3YKDS%G10kb3gl,VIGP7SBE&<$s]NCdJLX$2PGP9kX04HbAVXp'[$)cXD!/`(T.G[QW
%`eX[]U9XXtI5c`X!496M*=dqn*;36P5.3"Oa/S8hoFU`5X]Z072[;KAcUgd7n>QP%WNU9.-*Hj!.U8O(\3;''[=.TlXX-E`G6.4`
%Cs7pK#4bE?GUkTdb^>O`1,=hMDCciAD*I&r`I!Rt]UabM7cV$+:>/j@#ZQrr1KHT\&OmFlT_V,gkqSE9a19suBmtNXV7\i2H\FaV
%(hh.TGE&\AE*SDlT4i"f^8QFMeY9-4`>f(qO@03&,s1RYBMc,M_2Ol'Q&uVNip'uhM2(U'B&ui)I#paKVE?+Bh%;C.$5,0RPXP,O
%PV=_lO3RR3&AKn"hB1POi(IRRm6m'[_6&gtafA:W8,-aQ^.ph;ipF^-:.58I/WU3B$sF9Q98E9m,A\&am"-]Hc78&L/@[W]6!9G/
%LpH3D"HR_Sf:F3jAlk<caDtQHnj4rc(+s--;8qm5eD1XA@`IR/mH[NO2]]`!-F;jieDr,g6JM#fm<r2Yl:S[ZEOS3[<c!OPE906i
%SZ!Kg@\*qNh:QDGC7u$38FINHhX*b@2QTUn7.=nW]P?Hr?2^@JI=LFpCVdI!,ATY[/C;-*dY0k>=DVeAqd,jmFXfHZ/QS?%S;7r5
%G/i,t,Qm%FllAK)2#`%eGqWEI40#JB%+^+R&k8Eq*aTcike`T!m^74R_j/`5?A-WO^_.(:[a4pNONg^5)htO->"SP%UBHi:%u0^\
%I04+j6q__Xc;,>tR_+!g7<gmJWXpFkSJ]NRcX\SA=;C#i15_@][<a<JHrklmC]EdDIRB8H_@a6cB.knc9e0OU0>#_sCZe*MGd=N:
%FrdBEjIL'/a#s'u\`#2JICKC,6SXoP%eE^nL\O>92b[XYfmn>cC@qcM$R+Nn&JD3j4Z,<[M;d<D-rKOmM6fWfb_OlDHX<1[75$Dj
%KPl_o6h1`q]:"T%M^nuWZc*.j(K5bS,\K"?,[50Hpg^p]=aM\q^]%34f$)]4omGeq68Ib6aiWVj/I#h68Jsm*jj;,=W!5'AjAQ-"
%ae9*fTG-"1j5nWZSU+hn8NV^Jb+T3gTTc\ca2t"_cCbQd(*"fZ/i\JYc5%BILFtQ=cC$7DH4F5""s)6'j6+bmB@%eJ:EkQH3.m7.
%10b<[F$jt5g7'*!i2^d)G+F*eeoucj7>UTQTY`U)+1?f]F1R:&m#L.f]G^FOm'M5L0d=:YF$o=@pKusm/NZ<n,N+FAQ+=5;#'ZLr
%>cs_F]YOJj?>FohNJ6c;nq#,X1D1jP/i%hBaOM+uIgf'cV*g-)q%smX$5c[]BdXF\1cL)hH)P-Ee!SNM)#SA<GUj'm/0\m7WJn/A
%-X01G\?Y'o!8?89$T-182ke?2_eoYJnFnZjD<QfG+@,%11bU:/fe*&$&79,XM"0++16NT.PT2PJ/'8X/NG#B\1*K2e3$e)MR`p*/
%I_m9SOcrIS;ial9'B,?glB0+'PeoCZi!a+W>!Sn8&LR#SS2g\,B^%-0_^*umQATa-`u(dirgHR(8rJo=B(j-dM';Hb*e&jd3!m[d
%F')b?H$g!?d)nR1XmVY]j#3`$p:tSOm=@Jc[3Nj<o>gFs_Y1c8cf=WP+YMrj&!=oqMI;/N"5+:FhcNF$:"4.p+8O?7c$X1I6Ve"*
%VD8,$M\.WYP(#2,`q46hEs@*XnWJol:*f]c,^Ul$/\C&'q$q!F$"f6a0,G`_HlBeG$$5eGGH7Fcq0g<,g%3i$)o:4nDhd>&#hrK=
%i63&'DpAjMKVO*XT&O`HMUQp[BA*kD@>T"g1F-,-3s-uX!H+9CY+6rP3dEq(*Kf@iI^/FI/@bfSk$tqE5_]Z>J\@gRpF9i,J#_:H
%B>ra%hYUV-QZB0tG,,WpKBaF+Cb[SGI3Ao;+]??F,Kd]PBOlJVc`SqA$W`<Wicr7;A9RY"LEpR"cgGc2SUep=k:-t'JD78d8-7b<
%EK23q-\?XSC8cq^^lWM*`+8'\-mE/nfbJ@#_aS*@?BR,D]A@a%A2#<DS;<,sZ*1jG,;T,>8nuAhO-:k`7(6TCpkXm4^]1]#G!lO"
%1K+4a4//XH7?#:jSYnm(d)M'd?kSprb"*Nr,-r(/+qom#TB@;YM3OOJD&C4:;!Buk]-K-aA!uL^L#eps17%Z_2b4@@PIU06A.j<=
%K7Q0eqW:416L&6;F2R^jc<7nF]obRLO%Q#]+7lAVrJ4Yo_U?JDlU$8@_9fj+E$60YOB35EIl*7,8`jMJfIb5M&ICOJ+]'O4qsgk*
%Wuf@'3VPQaPkbuF['M91nR:L+32\FL1ZBaP%l`qPA'sl+_J!a@q/GsO4a0BNnEgAA_aWIV3_hl/A1("fEKe\'$U#)D,5H0Y]:la6
%3IuQ;q'I<s2OmT-*8L_ccA7s35+GCakCiHcJpfAgAY&53p&m/:;8ItQ-',\d&t2^nfp36D6pbD;"F)$XI2681b0pc\G!]M/_OMaN
%%."BDIYF,qj)gk[8)k>>+mk5Z@o$9:9IT-tBp!#+*RDH4!.4*aO0mpb%.T;\2]Gfc9#1e/qt_M@iUp<._Xb4ugK`C1.FGUOc[EDc
%-X;]-DG?`"Ngrl0DiL*r[PeOgBU=oC%@FL9G.('In!179,TD&EZ-/!.iME_1oKQ'nGFS9e^lcE@VkG[HT%42:%I>R]ZCr:RT8_:R
%e>_m;`_d?CH]f8G^F,G3qKjt8WH[55a@K=/Q7%iX$LLM4,8JrN59gnIR7'LoB!6n1"7=gokF93i$kdMmC8=Qnc5Ugi5RasW@s@:L
%(6pRO1>LMDHG!/7A1\R.7un>)W,?tW=jW@'KbI_5P2ZD&<4J(hb+V_lr6HLSA1AST&J:0I3Hckl3CEH_=I2GJc^oKtJr*U6Ot_]X
%puL3Q&Ukq:I92lXr47q)*r/&YMQq*G"e_Oka>g?:VgULU%<Lo#A2nsV_)E;RPLq'1i<5^sMkW=$<1[IRCNsm+CIkUl^7>r]m=Gi)
%K.7<',!">oUHeQXo[N,!5-abMk6s"45DUWU!qF=L_Z$R(==TsB`XB`2n,i.O`56dCLS%>GAgt!ts-QeA=.ac8N7QaUnrS.8aa%/3
%c,GkD8k62A8OeiIm)V9Sc-<WWb>XtRDQ2fednd^e4(J7B.,!urfsan#WO>U#\S73Bje#uU&<uOIaSL+<QYP9Gl@\j$q<+<N-11jf
%;>[bD.Wt$f/e5(Rp<BhbIOo=6?Kh0\J6`C+]=f_t:7_.Lh=(,OfHia<Qd:,OecIng<`T:jj*T[Qp?a\V2k@SM6gmoLL>>gOGLeXP
%aKE^^Hh*#+ir-MZWcpR2GOF_gX#Y=8Sqta&pZM'F5):.d(5Ab.+60F1D_Iql$8j5T*5:NX^k+_;rGlh@G=PV&9'r>H=ESun:Ynq^
%s*LiU4HF7Nh/h\Mg(Sd&bM_BH=0->QS)g),qJko0T@?SU?;hXp$?n6a2,6'*M"KPi_f$N7m->%hb059f>^-s#LeHfVi=!Ep/aTd*
%..DMQV)E?$C6X'7U*;b]-ALa^U:_K`GEMA?a#s;RTX-eqM.P.]\JIWQ@3T72H2.K4;7Nm:l+D'$_U!uT2OhuB-5]BN3h+DFQO`h&
%ZIs>+PS9O22P"d9HD9)7?5lIj3?]YO2I4rV`Q;Z>H*,P?YJ#s[:$8$FRS2hY1,<T&SbLk(UpK=`F%.LE9c*>iX"gsFUlG+l/tM1*
%kZHM[?HO\Y#SKlVS'Ge?dVAH.ZK]#Bkr`k-))Ic-C]<ZV+X`RMkLC8NiLO@7SQ@G78']2CflWuuCq+;m&<'=3S'EONDFf^TaJSRO
%V=Vg6)C(`sbOTc<<f`kIk9Y);pEiQXS'GfWK_UfGc),P?0H9/fNgNQ(2:&ue,9pjMaYUl%<W_p:LtQn,I\e\Y7a.`nOC=WArg@#d
%B%)#+,b76^B9_DK`cM4&qYj**+F,>7%Q,tm'#aP^rp17&cuE7LW/4<Dd_]^(9]Edt&F3dlpXO,*gfETL>suS/kfpOKOckNps1NBF
%amd\K!7)Vp]8:\Sg=1QG.pL>jp-H12Kj@"13M_5^*B9uGll9_1gr#(!@05q_M_8Fc4X,<oqTLo^U-5tU1q<G(*<buE/^&Feh2"(,
%,$sWF+"!^R*q>]2=HnX3f[no@fL=F]G7bMQ-?+;)=P)?M=e*2Bh*k+<o"!n#aGAi3fA(X@'\sS]%@O7RGg5'[8`3nkh2SYl"8%1e
%(]1/o>jY<@c_@a1RFA`e?<2N7S]e>]]GJKB#oT1&kI(&'aM$.ak@7k]ZgYO#f=b*/oR].(9cR$:d`C6d+ktbGD'D@&j<IO-mgWK]
%"d&Q0TVII6GRd.iqdMpppL%YuEai+cmW9;E&KDB)@Q,"+q'WKfMWFbt9k/_B-l\j(A3Nar.>5(f0N^JM5@Q^lW'&t.?.dFn*&u:P
%\?Oq[_@\Cp-]Rqo/K!FNG'@E_T6b5pZ1^sVF=eqfin'fKUappXm(:(Sh9ae@,[i%a/mhSL[0S7;]C.UjBaLlK_&_$lo[)@N>;Dt,
%r^m8S7n1Zq\X;FeL)6&c_=5=,a=nh,?ab`qhu,>Q(WS6X6n<i#3eqE^r)3Z14/:V4mI4JeSU`:Z_sLG-#4Y5p(h879Cp-,_KJJTV
%L(PX!,M[8$R9t5"2B,7_:%$m'YT*#)=l\Q!E$o3\HJWX#AEJlt%<j&QPW*\JOj?aIj0GBEL:b7mq'4sU7(_D1k22OfZ$)o^m\6:f
%^4#`=G%)8Zd]?2tS7iKtYu[FdoGcnu#GWZtW`-gkP4"h8=HAPj&XrO:ZeNM\kDHV[.@M!akDHW&?=GL#L$6\L'5N(&SdW#]\oO29
%p4:IGOfllkD&@I8e)9@,bhou;<a_M=/an&D!n_J5,c3)tdc@IJ][N7"P16*%K6Q[p^8R&R2"hMi]:dnqpZ>(]ln\]E7S%"",/3qb
%r6!&tYQO@f.t)Nf8h(jcQSHuDF@?pP:k<=S_]"9UFM65T$^=EGlo*'`H^,(3GMeWDClW9[mD$tBL]Z0gn,XD8iuCcNJ?ar:p\<MW
%$a>2meIcVb;E>mcCIYrcn*2Y(/YIQ.8`W@PM-]i]6OGld,BAgFi80I[@EYuA2?O2tDHH/M`0)ZCDpQ#7m(RQ=[?XjA8ag(k?]!k;
%V=aq+`h'bE(WP)T7qu5:V^B$M;l!se4`"'NMWLB>[l-,0Rh+-LGtRr]iB],4g:R7-\OCKKS&aoBG*^cT;!-XWe`jiYErY!Vc?q^E
%<VIPAr&T9!9hgNlHfe2q9S1f_Rb!u-W;G\oR6)AF1LE&9Y'da).1+>7.nrA"]&qbH;RM`6T2'IV1T+U6K3+tU,f1I]E&^kb)?-1E
%00NV;Fui]#jZc/ob+49R%dN[ocF;8?mp[O#eS-R+F8r]:Qd6\Y>.8bNj:e#=q9mOR=-S"A5@6!F_YDX)9n,B,Y)YkRb^M7W@qlWT
%AF9dWUJpN88::q8<N88hIhcNF\d7%;W@.,=*ctVXa<^t#oX1^E's"Pj6NJ"M3G`$*>KifO.dBLI_1aLEo#&+?K?rS7C?_$iiEVG5
%=X$A!DTe`?TST/#_0?l1CK3o+g4HMT2-a1Nh[WB43PCR=BujR`^3b2<^<f%-;7#]+mLJ<EkZN*Q]@gX\%*JUcRj%T=2;hM]3h!mu
%Ytip)j"O/Io@G6mM+[8WZk6fPf1Z'^Jm/_D<UMJl\&(O=\#rD8Q03I=HMmP?AJ4/a@LaODhU0ZW-9(3Y$u")QW,EGZaFTo0EW@?I
%MhQF.Q,$[/OlBlr9dAr]g<R%u*=R!g#udm"c:<?7VkQjQKKT%`e=e.h#'Sf2H.WiS/)Vh'*h]3pp!KK`T4Z,lXc,?Wk[T\#;eSM(
%gV@k$&c.V&ai$g2lZTMo2FJaWq;]mFj5a<*LR`E._IZ,=qId;5T5tR[)OE%PJUlpfWIWFp\X!oBo(OB,Ee`Fr1GF<-H[@s$DJ5b>
%A7Fal\19.WA%qc=pAJI<1c@20#@K)>QY..o:$Tq7BZt\^EYOH9,btmF$ThC68'D$nC)oA(8fKYrd)hRP3Ii0KC(-4.kT#5)%\W-:
%j<:i0UZMP3am\Nsq)'n^NHuZ3@RFZ,qM;_6*5K?O;F@bj_c;W@?A5)Y!.F>sO96>aA*&W/Tl8HPp5u+^!Ck<7o_"?-0>*tsku,5-
%De'gX;Eiuse;7MS(D9`8d%u,pkX&d<9DMh5llWg'O%)W0]`BeOV0kB4pWm0gLGXa<qI_JC)ufiZ;(gu%N%3bYlCO>W'&/h7-L>Os
%q,T`U(:-T&%HW#=hp@cr554o5E&Q2Op\O];2M&3.`4^W[lr/djY?u8"h#u#X,5:qnIl:8jHi5/M=,q^4T>6Ig.)U\#8%R;j,OeaK
%=>GKMDI^`e?GGGS\OO9acV5"s>Q*>=<CX[R0,V(3q^[H3f.Zo"^Th\W@JBU%!u.6O]maBO<$uaj?gpKdZ/cICc3!G,$g(c5NP!Z#
%L:u1l=OF\GZ'"MJF)4\l\CGMV';uoFq?:f.MG<;@^[Q'"8_iVJI&l.Dp[S(:lSmUII&#QakA8+cX.R^0X[D"3kJ*RHp+i%_rIPhb
%W#QcV?GF;J'XDY);H[K.\,*Z,?:V]\06j#lp&66)oaBVqm@05!jLp"k=^]Zm_O,TZcrc+nLdfX:W!D/E(S1<@\_#.S1s]D)7_Fe#
%aAY3Kn)G?Omm4P8Dldc8$X_N?[6u!K[r$eFrIQu:gA1V()if*F?gr=^ia/5Hme*nbXumAmjc#nskspC#qM!+t8_iVJI&l.8mc+]0
%U_38`^6&rT&`2gVme,VBGl,q,S_c&FY@$KnI/XajKR<ZLOtH+9WF%[b]mcR6A`)c3DH9pt1IkWP*:$qG?o(<qX<6b75Cm[T/DO+j
%iu:/ifB5?3EMH[>>Q)RRO"Y5`DSVhoO*ggp9nm:@M.>H/k?u2Y>Q%)G'=cYT-aS*Ul:9sgq"OUgDfd0=licbL$[18B`[7#CjF+(9
%oXL_2A+"^B7eS?f]%>8(#1?`S-FA-('RZsRla6JMn+@(&eM!5I?lFoE[Lj0^4Z2d9p\G'Nl5*oj78J^K][]f8.#rGRhZu-a#l"2k
%c6QQ.M4@ijEj&i7rKcL$lPHWB0KSK"&,#ppN<Wtnb(8f2JK5hU@$fP#b1jm-`Z<ceZ2anI]^ajH[Rd\a,^Sac@TY<E-RHV&Nn)\!
%QAbm.-=E`:eYZLrL/2L*\V'+N?Ku\m:)dE*rn:[E21M64EuS%h;?cZkFr&D"C>D;KDK.RcJY9s:_p1ar^&Fq6\@V3I/Zu4I?8%m/
%52/]+ngC23r[b6$ebrhYOSmXPj$;;sAM#D;]17q)_:RGREnmaG-te=HV4@!4/sV@Oa.%+KoUF"b_toGbHhfFngalaT/,.@ga3)<;
%eXQ,SWqVc+rG#)Q3_]M;G.X#5[s-G1mJa&db?2(Io4Y"IF88rq#u:AbgGuauGhkC:3O7MM0(3`8'+;.gX-4EB[961pS8I`>IXEK?
%VQA!=C:a5(gbl1dj6&X.jg>8`#akBil53#eA4fDX=Y,sh<6rmSb"VaK8l+0415*m[aY3&S0V.hYZ!=q"UamS@4b>1Q(U==H!+Xcu
%<X_76caWJPp+YCk*\B#P=9fs+k-#QPoXQQM>21b\e[Ll.Ac)8dX#L!=HcF:["RC!d]<\qa*o/<6l=5G.,lU[kQha-lc(C.ZXtR>E
%/LUETY3^L-I>N3L"Id\$[bdpM[^1hd[3Hp$S=."-N8&A^VJKiW9Cl@l=LOPur&&VMBt$V-?o,&mcsIGZLK?QoL$r`+[.\>lR\n\L
%C5XK!B@MWu\f+5-)RYN]E'8*@*[J=-EiKlAd"G2-*HgWFI02Z=IM91saa?j[akQZNp!m-.<'!C\U/4Og:OhX;nA`a9mI+o[H]dg@
%c6=c@8M/uSAbPf4?ql.ckZ;(S^F^aqh,Oehm=S_Rs7bu/O90ig%<EaY0-1Z1pk*_Q7=%q&.BW23V.K0^/)FNIncucEnGmC/pB#h`
%XP+1+@)A($-*t;!5g#`9/=$+h/hMqFEmNLPBu'Jk!iWE:7;-=[?G#\)q1/dK.f$)_?6nIpaju("^`tQGEV<2.93>m/XR(7q8.u\k
%-:lSf'*Q`<9^TrA"s_;a7.J.G$e"ACSXdpGXe%O8qpaT\F$T`sg,)!!KFZF;9'5tX=i/f)n)Xj&5'O><cICEW=5I/&(Y,pNn].M;
%SrC4.oh0I5]t@,-^`mf_bl1#"jmnZn3ko>,ZHV]<ZFVnp5;2K>Z>1oj_CLmMo!u22?:t2r;`hV'g3iL3RM"7rc*1&AP6pXPGSuXO
%"R++>i9NgdSHoRpY8$[*@!<YUh5]!(bre4()qM1CL/0[tIsNtC'5Wgr:J$Jf7$5C=Wsj@Lo2ahB*`S!9SjA\aCp<GW^?YDWT='H-
%r`FT=^YRM5%_n29QHu`SOYD+/eBQP?_u*a',?I#\2U,r7$JK;qJ!rb+a(VDHqF/;P4E@?1qH%CCdhbJ3r<GdI<jturWM]5^YF;Bp
%WqmFfli/\Ageo1h[XVFcR,;#j?S5+p<hBkc(=B>^lsh]PltnCf@BT$>Mj;JdS\kAk1**+1R<<MRinP.)N)GcgL_oK[5H%D]n?V![
%Lr\CSM><p9'U,1S/*+_/*K[:jkDB"(F!IsFqK7QkeIk@h:g]/&@_ejWrL/U,@%TcC0HYAa5^9Ra[;V:Rf3Q1sJ]LH[iTk!GPNL.1
%DMJ*Z\[b8l-G<KFS5m/AjQ:SHNG[!UF'FKJ1@]$E/s0Xk_#IZobquU"Bc>T</?LH9ZPb#lA^;mJX)D;cm17E)5.Z8No%a=$93;0>
%/0FH^&s;!`;'IRgRDk0`j\G()Zgd7AY6PF,P'u3-35rT]3)JE`Ick*ZhN-X3d=Mhb4A@]2`!92*QJn*A<0e.'$D,tD@WSPL<Hjb0
%.Q3q$`^JQCS#7\)IP&&Rg!l8u8p4^X,7Ir7qbl5^(>aRi\+uVV-!0M1%^!TC0"2#!er%GEUZj#oF_/!e?7A\%QZamoMtPQ$[rZ[-
%Sn_n<CHB()[:W0@9D<e^40(U7@,.Z>mNqAr_DX=Y:qmi[.<<9*Z!]@D343He#7b0$1UFJeq7^(\9BF42H0O:jZ?+Gj\%W6<6@&=+
%dArS&C69AD7_->E]&"#\beUL#.sDr^l#a,7fXU`*S6u9`Y1B`CBAr2)nWEk.3Ba=jC3/X^c0Nja@5I,dr1OOcCu;"@!Q-*+S51eg
%K6mO!Q.,!*hpodH]t1V_pNc$-Y&,Vu!Oej@2h#?P/q8s:&r,k:\b<biTb#\o7DcAtK'&q3%Sd&Zog\I-Pl`UQ#ZO1;S#[L7_tVBO
%jo.sLY.VH]r`M36leb&Q*F%%#ijHA`Mt2@N`qjajA#D<L?5I,"Z@9*nLshIBAR2jIIbUagWkNc8h^UL`Ze_b,\Z>2$p.k@nqREmg
%>r[:?3rfs31Zc)Q]i2e+]u9kS=a<`Mb.s8m0J?q^F9HEtm!I]<iOtR':6&A(3Snj=js'jI9+D.%LkNckWf0A[2W/nTRjd$o5)ks>
%m(%-C;I;/i[^Osu/-",-%mZ)F*IpMj\R4"2-Ft<^b@eeO[^0OFba5.upL3/lp#_nNr3G.k]Xi_f\&qaKfD-O#3m<7SR,(4$?s<gk
%qcI=);^rMHk?<)7A3$3QlOCi",>4D3JB*smj:n%:J0TRPK[uP7N'nj=)]+PCQ%=(_a\8uK1IaW5b@Zt-)Z'?+F'DUM!spcd=HB,m
%_6Xt^M\!#/0lHdt(bJ*hZ&t"](S\l?7o<,H%(MhSE5bE^lN'hC"1,)J]Js\#)Iq>:8BX8F/Ws?^+gfsIg,DEU>cIC;kepWfVNHMo
%MMWX]H:5Nn0,1h4nm1>c?+^:3me5VUEYh)QB/Fo=<L+9@k44/Rj&<2Q-?8qHHKC8FIPs\,qdKeW*O[X)ZV3ldbg2Z6dOVeaa!Y*c
%eT*SF<&e7`P:H%Xk4W1@;H$e8S(4kd)uaHMDe'>5+3@P"2oo*=W2'*7=l6gG?f-PT3)<MFElT9=QpBO&2(-snVFU#QH[/lK>.sfX
%/>l:9]!5f1D8#T^abIW,>t.4Ml\Ve5O(C:?OQT$H7+0o/Bl7BC%I?q3%Gt$f4Xhs@N2>T3UQasa:``8)`dS3]3L1ZA:DdEPr^39%
%@c=$6Z!F[MpQEP8HnaEJqSb1>d?WEN$m<n1fD;g/UQG]k#LY=8F=j*djq0.L.\CI\,jGic,r[8L/PW"/=F,AN_ll[Al+?PV0"<J3
%RT`,hEh&MHH8A]?naTVWLSFc8qIO=@?s=FPi(h9tFc"jLrA&9:Q.f0u'7AllGNK29E-`Nj[;s7??MYbo0@;U\//\KHLu<l<\XY*q
%"_4@\pr%e>.+D#u_a,riOb$rQs&FN;m7a8Ur<t*!Gnbc2NJ5XLQmNM&(XUg]qK7#q#QJ@%@BcDrfhRg2lnou.\PG<_B;0hWEbl.&
%o*<m2`r+M*7$rPFL1.7tRELf6r7Pk!k/(]?bAV\#TPJTuH*L=B.pD%YnbT2ge5<X]0>EOIjitd2?=BhH10;2hp?rAN\Yl4)\+@m[
%V0i5i]Xk(KRcWecT1XBMTqYW72tPY+Uau4!RF%SLWf&/N*GtO+DT&"=UuE*+7n=gUY5#s2$X\Jqk`39K4k7r-j9`gT]E"!=K4BIr
%EFND!&OV[JFWV0I*BEINBMT-\*ufpn_&E(3Hd^)oDXTI$Q1u_:Y_2A-B7*An4[,1#\P6QblkmL/7.=3h4;G.h22KT/\U)$_Oh\(i
%<&3?hCsQM_A$KtMro(INkZ[u453q@q_Hl-uim0spfgb].iTKK9!^<_cW6^>.Nbp6d;UH;\O.X[NC8"f-'?NlkT:haoC+lhp^L[3a
%GS"sFC.!sAk#/$Fic[L8O&6h5:Wj-P];oIHKN>acomOfk\=;M#RWpUTnk.n+1@aE=h5g#U:-=qfcnGFc`04oU?(M#Z`04nr-3)q\
%+)-^Qk_U+&HN2*D-dtiYJ,(H>SkOKQ$T;t`WG1f0S4WUUE*gTq.[r<[Nc'22V[Pl&/X$f=`8Rm#"K<E^/q/lY?H(3(a1c<";1)$b
%d^.VM<U,I+9pH&ap.Ef1j/sHW^c[I6g.a+U.]t*69/E%Pi<O'GlWP)9OKtjbNQl>.S[K>Fk]+V?WmrBd`(>*J5*aC&R^fpi.G.?O
%;GrMW+[0:a']!q6\Q`@jB30"On@Hb8lLmT6V@etHd)a2,b;:famlfZ:\@Wg>\bFa#4%KK<]_fdajQBj2`T$1+nKDdgTCTMj#P0<&
%5T^A<^DCY54[:o$c_i[>mpVm/2EXg,KY?$toCA(Vg[,YDmrh`NjnoiWRcZ^3090R@\mB,+N"tOM(\nLu488!=58T!Vkd=3rWSJUi
%;rF3O8'3#WMehG2R>lk])$rO:a#4R5S<lAj8gq4:lH^FR/#n8Sd`q([nW=+jSC^T"rK]`?J5-nm,SY'\^1D2V7ti,oYZ%u>,u$rj
%'(d(-1IF7So>dI3"ko%&9*^,W,U?n'@:(>7R0lAL[s3<OOH=d[3PG$XKDCab`T14^M;;\',,N(%k.R4>d"(UmjqgL'_JWc/QQMTt
%%-<<@V/aL?cg=jV(Q<Gi>>n<[(lZ\K@o-]M3>tbo&K6HOK:5o2O369B]Y1Zp`@aVr@XJKg[,f\(eCdre81KqtD8H=.]8:W_g!I3W
%V,F)ijSdfpZ*T:,M/#V%2*g/2__n,W5c'ApS0o@?/SVkSgpCImhUM7Ja\a^t+R74Yo[OV(pY;+tXLB%'`e'l+7$]lc`nX9>O3&jh
%M*POlOZ5N\*.\\"ibh(#(C[e&iA<Fq(u"IhE7%cW&*LAAA,WX=8=Sg\A9CBER]"XY(lO7XD/$pC#`YpF92o*KQQft"*&JU<']VXg
%/sk37)Hh.)SZ#GA\6RrnD=s,eG(%JtDd5H_>e-hU+4<*QA76j0Zr=!<n,5QH3@hCSB_o#_K-PT8J#B50+jssP%kDEHDs+Xe@OYki
%T?GsKcKc*7@\W\q1Z25[OA*)>nOE/qM^b*b`7+D;'-<PB6T4)K=0P!"g@05rOX2`E"L7=E1AuOVX-65L3IPLVm0RtIP5M24X`pA!
%\h=S98SL?@%i442V<"u]?qGfdTt]4kdc:H$66EnE^Y+Y^l(-q(h%0MCLo.JXgBUY7]51>>B6m+`fFO:e"5s.Fc3hkr;22!&*@\pH
%=*JZi3;Z3&[%]`K,ji$i/^c,p*>KIMf<T7,cVSNtb,G3@^>qnNP(+q!'2W%ZNj78EXP&r0>Erdf?<7s1Cf$S8V9S1(CrDjAj[J\$
%=gG>Dbs-$H.[MrL)tH]m/0&Y%cd?_QV??3rK%gTLKs)^g4,P"Vb"VQ\(,&_#\W%!WW0"cD:!m@fr68ArVfLXO,fD&s8i/nUro`s<
%"8R:8Spd`RZ]5+H2l1&eI']kO&hh!>BA'3FKuQ=Tgcj()LWY#3OaY[70k9`tQ8\5WZ\@f&V"$dR2L+5Bbl`[6rV1HVg4#L*Z75*/
%:.p"=IJmY?0N\hGn))G(/5O"o,s0b$>&:(n(P)6U?JZ17qn%\@Z0[?^a!l%fL4._)XE<q9?Sj1rae.BMn+8e23I4`<0PHXDm-61A
%6S,4_Q>6rAVTrp_IMH,J.3+]"n#PR4e4\cmr,/\.]Y*nVA^VL>%A*.En)S.MJd/lfO'*&n,&tWH/;n^KVE&It(Q[ki'T7%uB+#us
%QK5@bR=p,^Kup.JPo:A^p"CWca\I`U<7ZDg9/IT9JYf!>;]2^MI(MopXIYQc9MVsFZ;MT:d($C'FIjN6P-&?/:[cHo.O:#,4q!gW
%0.WG",DFg/C#q4;>2_K).g1eFaPYTR11YOl?kM(@J!hTc^9;1lHY[I%.Tb)>_RfCH<Zb%iFGVO/*%LbMAu-AmgKTTWI"s[#Gp\`a
%X36%*B8+Igm=Phnf0#e+6ojpkqdEU]6<l)u.OtA2)mR%ik2L"(1uk"QT4Yc`ghj\_>4JHAC+N<9<Rm#YCV/<&f?`d_m?cQ\5@=(a
%5J@cV'[B=_]4SKVIqc[Kj)en)nksF\dKeNt-Qb>-fX=;kY?67[[Qeu5:Y0CD2s#A']r>pVhc[uOIAc_onhn!6[e.uB^qG)/bQ0oF
%orrIG=ZOu&B!9g#7T-2\-MMYh[es*AkC;g?X"<'l7:Y\!A,WsBe2c7;g:)AIk0D]LFL?O,>ZSF[2bNnCH@9+*0<DpMr7\t3;\#l7
%.EqjN/#bP:>an(Tp@-Z`*X6Tc:sV=M,W-,#$gV`!,^q#!1N7$Ng<A.h'h!-/f1\FFY9&Po?=kaO^$FWY>Mik81]*E2\`^b\$Vh1"
%96"U$F8oGn9is;j^R29[iLR].fdUsu0iHFK&Pf3dd[)9'An,UJ4s`NjY]oT&G5q0<-*imaVN\UK?6SIU]\G=4R,aD:WGc0%JQ?e-
%,3:a5fX?hUP[B@8k_AI4N?j_27hV>BV2U0mY^Gf$h.9e<j'b<><DF%PoL+MGodd6b:JMYcD\[`7in#^7/FZ;jT&ZNhc_Ta7Ks43^
%E`#$TiqbY%a;57L<^7WN+K(cg6NsVg1LBIB,TF/1$Us'tMtN?5iF7!'WUu>1mhF%TXl&ctLuRg="1'Vfq3NU9R@WY%Gs0:@qg>Un
%SIIk\5Bo@ddpjONGNF,HWA\ljO,=K0$"NH`q@;1n9[`OS-T8BYmoarH"LWeE0@C\k<ajS'3V'sL8mkdc9B<FV8I%MRI;bb6o(d0B
%`H@B0lird(*cglW%H?uS2f+Jm24?L#lX3Ga`r9h02ut`$_?0[8\_C>aT;6K$hfVho'sAE(Y0l<J^35t,[q+qI1sF\9PsN`D!;cg+
%WpO.BAqW"(Zc'k)b/f`nMA2^]5#]Kcnn+gVFk1B>\Ohj9=ShG*H_79I+55a`YJ_c*Z$=qP#g6a1(,(#gX<pZk@e$a*fFI!L=tF"R
%MXqlFT/2pH\MA,AVctjs%f(G5NtdB@>i86n8*+**JZl]L=sNBWf/CrCX?kOQ>=psrpgBTKfNo;pGN#fo3@umqhIq8=V+d_kG$M:R
%6[oP'n2'IaFZ$ce]-DB_EAg<<"JY^BjGl&Z;]CR3B+[A)mBV[V#4o-BL.B+V]$se[;X'[%*Qk.tFigX;4jNA"3jia?p$7jGTWp@)
%^L]fDZuMBDag'h6@hI>>S1A:DdSkC`Mo=RZTe>B[7`'e:"L>>VODlG>!(J3.!0<dmU4?+HN.fp=O[+MIgJgm]+Wn3L4oB?+Par@s
%M'.Ta[XNU*;T8'q^uaYE'1#67I\c&^!'(YbX>N`djIF`X#/XH\\$%k*3$P:%G"VKg?p&TW1_@`nGcp.Q@$"kLg!7;D_>*LI.TZ_"
%+2L2Ubs^&.I&,5f+K5U'Z!k3?jLRL=GQ:hMR^h[B-Xfakh'1"uGnG0W:7f)S@uqY>EAc\0T70],NO@YQj5d!(7G%T5F>,n.7V",5
%=88S^#ff=EDk(qFVC:L$9/N=.*+$B>0m7tXe'>?X>,?P[j#AmhqCr&&>WHNB]q+?^HT\9K?$?s<9k.&Bo_Kf&5R,6d_Utb6M$sDS
%lc0Bu87Rduk`.-8C`9qbR2V.HDl0GM26tfF'29b7/jIW$HNg%^OuhZ1VYYKR-:5`Ai?NL?(oVli_Sl%YD`io%DY7k+4JLb[rf/1F
%4>h/73M^=6^9+1^.12KS>qdtoq$Ogs"-QKrGL>i7V6DIliGouBM*;Nlai#.'Q_9/pAE&S.00p2jai#.'Q_9/pAE&U0QD&hbj(.//
%r9R"iLuW%*NQg;SNAsZ[hAAli7iWliD^9Uu!>3Ao`#E]?:JeuL1@[iRqn<Z_ai#,QEYT:.N#6IaMURpFh?bYVp:g;RFs&g.kn1/-
%WBE"(MnIL"2m1&q;,X598S&8G[ei"aVTA^dn7s&O>rKG_[nYALc4%/XMGj2<+-+%B9Mto\kj4eXNMXfN5K#Fo7K]E((Futd[u\0b
%Cu%Z5mX3^$Ub9o?AB;FMcc[7TX?Q%Sg0_4BN8*'0460(P&d1U7s.ggOV2'G(g.GeG#jYYLTrSJVU^,O,l)M8)I??;P'4KSaZJ4gP
%Y-&kC=^5lWMh`$5H4`Fk+5/<49V*#(4DN^OIlCi;Yp?J<5#tjjo(liIR=pa0HN0mq's`n>qKnu[;#@l]NN$po:P"#j4)`)<c&?Gk
%/:>QKl+qEl7I%nCq=k!_pR!COqrPgj^X6rL\pqb%YitBAi*s/8?]!7CO&1$XSq>?<O&-c:c/YP],E2+HVSil3s6;hR+8E>7".tY5
%^QQn(9gbh28Y$QUcB"#9EAa*+`_5o"o\Z%Q`X2,5%:Ahe_]L<':L$oZL[j,G-2n8@>b/kC<DVduWZ'L\C-&Q\bkP752m[5A1j)Zm
%kOc-T"/*6%V/s55'.&BJVR)S+`a<2^9ZtCr8iE4tE`Tgj1DD.;>H112e2,U%3iD-2c8$]:f5g@Hae^jnfAM:Dc>%V\DNE=#H&3E-
%RT<gd;CsJe[^:FR[?SqX-*0=Y&'GC10eO;-JF-3GQi^$^bf5BGW+fP(&2o?qQWQ,B.sbAXbrclFY$2%^36Ia@Q0E$9S]a?8#XDEF
%*@:NgSq@LRfqQ\a>DCF<W>_"70RntT6oWOS1S<dtOYT9sRp%]\[>_JilUK[N.VU3$_\+i/OYLEi(gIRJdrKu&]P7ME>6o![&-9k+
%H<NM(`EC8L>8k/I.6rYk4dX_7eW`Z75[[ngjGU;p^lnpi@u6X1Eq(^=(?ii(9+6=tCU3\JR>"S?kMfZ/$g>QDKHXt;_hqA4",cFX
%J6@Zdjc$9?$X1]PL+ZXB-)*V$VWZF*@cdZ&MYF2J)'I&.'PCQT9BWW"oLWX5&<P/SN+n/+<kAKBZuTja=BUl&0LSpiEhXjW_Y_7F
%lnY4Y2:$"LCtVq!9;K*0AI@O4%B);q1^"?k\kRFF=YTS\9U_5)/FoABeLf5MWlYA=^uQ`a5X7dKL2>qX[%UWJK%4[D6#+T@'d.+f
%7&!8bbbeWsH)+?g!XMLf/hmAF,AYU9PT_8`FVEDebVTm/&7(gh,Yk.7UKaIO;ANZdDTOMnq@dE?NFcWt(f7jq5%Vg=GsW$>)<5Hm
%dmd*lquQVD;F?G1@kaNh'=^_lYV3PGM+eWeGM^[lOf;M<@b#LT9FXCl@HF:?(`)b5dtGf,8o0V]b6WmaTMYg1[OB>bBgp,FNKMd$
%'hU$M$fEQs##c0]0/5Lc<@Xcj.&prPPjnZY4Rg^V]n(bca#!m;B4UU#:k+<W>>T)R!,+r5fg_&k*\),o@DIC^/X2Nd+kklYP4kY>
%RS&q[3)PC'M)'tq8D85^#>q9'bhs:&0FlB]Z/A\EG%fQX<KrRTFF7QukU$kb_?J9pYnMqinqe.#BhS]m"G)4K_jl;15nYr3[#+Eh
%QSmk[?q03h/?om39.\29?uQfn39$9l<2NQ1M^=74:b$2/["o,%eWsJ@0Bj6`.(bLWVXrFd?j=D'liJH5XJqASlloh2<QUCbVM,XY
%e^B=`dB41JDfuEs:ks#kr),*KL]M3*=V?]";5+'N)O0;N=UrAg%WRH;bX*74AaE^5%.&Nr?jh8\]$6XF!r>2M)\UP-k!]<'ciAe9
%PsCmT.'YTd$i1H+7Kr<rU@,go<C8';"Thn0ZoeB1Yd+6?(^N)jdnia37>3BE7D97V"sIfFk2=d;SkY6.;b<=5KsYa7O;3Im!2(d:
%/-c6J9UH"+67&?R$ZZ6@d53(\(E`e<I2s]#f0N"s@T?-!E?G=Z&f?[`r;@7lb(+'QCtqlqk&^&YMFMRl<jG?^h4bZ250`+G`%OuB
%BZOCK"&P042$6IdW3_#NeJr$(&^*gD+oj'e8sF(AKJq6Uk6SIgm/H3qX@rfBLdM@C`lauG0nJsKYRa9S-LqNtGp23)'a2pe-(s3K
%%DZU,$dcTpLepEp=c4a;0\',kPKMB+^ng3#\WJca,R.SL>+hrsKi#Ni#'4@-2#t$L#cJ"_T2#E;4ln[;pfc!8FY)%PE\hlqe/9pW
%+mC*OTGGla(jOK5#Cq/p+qKq='m-*6_#C3!WZ_&0Xu):.ZD+ELb)jfR/1G"G%[KZS]n,lD6VPT_H2taZg6-d?AYM?ek$X%@#=?@?
%9#sP3()gI,'MUH'TOsD2%,E,Y\0t9PC(Sfm2'^;C.#7.!goBOXU'-Pfpc!>.XaD&Lh6\,a$G[`K=+S**b!8Zd_dimq:^=P$:Dl!m
%.Y_2_o5&1"j5C6ib;+A&;"I._SnHJ7Oa3Z:C1r;u9MX,,M+guoR8&+VOp4*&-W!J.B:#:1"/F!OWb#`C)AABsOd/Q6m(@Se(q3Bg
%XF]10NXesI>\7P5@l?cDV>to&Z8huHAYQ.2K2T$(1^/V9$11kM9W8dFMeZ/;V5X3[>b[sE[ePZ`bT9j7A$!na@)T$qYn"3=<[`SR
%;24*X*^EXV"*<9$>/_+.s)BGp5:@ZBYlqYd#s&eo1RU6+W\,sIR\U@.^cZm@!F$A`^dTq6VW^9I+M.ZW<)oY+<1B2Q)_s9bi:f![
%fX3OSX<9*/(:F>UA(IB=C0:ludtkD>js5n[]$6Agd?t%d`@aI8%*_uB4^&&KVJ$7:MKGgQqGL9J9J@i9])^a2UC,DF3h1q!'Hp!Z
%L_N;(&l!5;77<9Yb#!HI3UURC`diXR-'uNH5Z6[jl\<Co@cHnj*'k'.YIpVGLal,q[7mql$%<?5;^PDTV)*?^1J24QB3@,_3(&q(
%EM#a9!0]n(EEr<%p`i0pZPg/D&4@k(6nL]e$;/o9$:S5d]EM&#WWc#1;M\!]A\^C-Wlt$hU<q*t)\]/%Vp\]NdnHZL1T\5;6.g%%
%fX9)h1oZ#JjbY!mQe:GYUWbPCc1<^FBX,Y^WDZ#5iY]nPSeWP)KJ-"fQ"p]o!CB;A4c"k0-]b$JVeSu_,F<E+,KcDA!>@A(BTf7?
%FGp2:H!0lT3_W@NccWZ2+O+\fe<!sDlQ3$!kS\JH'I3'F-?KbO'=nEB<asPc3M80Z,>/DMKj(?Y97s2iAB/hR>pAMS;9!a>V?88u
%W?Z*lhOglrd#cPR=fI\rNNIO1Hp[Q9ba@c@$`r$ma&0iuO'QA`*h4S>g2O/<0I1`N9KBWJN`s4KH;<$SU."2d?7+p)_6F@'UO``R
%T_t&`Hb2u@#R1q5k\+t"*@$qZf/jCf%IHg;bf[=Y!c"$3f\7^8Te2NaF.BV5lB5RO,,Vs>0^NdY7b5Z&[;9OCQJCtL_]E%+)0q!G
%YFu&.=AkQQ7@RGbKOJecaE2-_flRNP6)cR),lkG`%ho<aB*lI^!s;]P>&lEBM:<CrZOM7t868NB`<Lm7)tk2kH0.3AAiHYc?nWdL
%@6WFW`8FIt6pR0=`,_/>R4p>5]3]%aJmgX]<0^l28ohL7XU$/,;AOmiC>KXNJ-iNiK)VXGL$K^JhH<1cKd@WH=c,!4OJQn?``*^#
%a<>k(&-tas"r"eXTHu(qA69/`#.WKhQBQ''bbA^s9ML^D:_&])M^Xd.P:&$EIED\q`Ogb6dbIi4)TlgEO4#SC,mr6TM__H(Ta\%[
%NG4Hi1(.&d?752N+?/Ud7"mWu(&",gAS;sM3K(RcP$!6I)0>Fd\->SGY+H29%Eu9GJ=i/_Z&'KW,)sSmF:G,$@\F3>m-87aB8sPP
%H%G]tSq%pE>$tbO+,l&';4sTRX0T4=8B/EI!R^/3B,S.SA6%)]#36-`)V7ge&h<"5Nm3dWR)Jk]G\Vkh>,YL2aj?B9JC-kr;dc#n
%)\+@J_*"H\bZSOhF*(Z4N-Io?+?0ho81FW@VQ+_=NKqV)&'S1?8"u@aY@g/Xjg(?A/D4TtZQtejB*h3>7FQssKI'c$L'EuSd"]b+
%A/U]4<2/*l&if`NMaMGs+JgPCSdgqhiT/Yl,u'\P6nR5j_U*IlTRU3Bct-hrb]kf^ntn)AYf+nR]Ps2''$48hA_^G*eoQ*mD`^9F
%9X8afS0a`E_l]G.#<[7[</%Z385\rr"0nCCWJio3;A!u98;U)ROL[[0\=tLbln%B*<l[J?W27qmFPBqB-,d*qI3f#_kuHJ>Eg/:c
%8X+4%#q&1i2B_aGlj8r),sVga3&7O?9+WB=Pm.PZqaraa8\U?eB)>1u)&'_TCkSs.0*oU1WM]#3$#J7:5bjc93\sQ'.^;,_7iCo_
%ln[<&Zt[JPJI$E-B"9Zm$-/I[=]r;$brX'I)T76V;pr!T[W%%\k?/O^PQO&//5ao]MjP-=hA\$)YJ#cZ=Y'!]A4^<U+NXYr6'!d6
%fMSr_oXk8'SMqNOnhNcIM'B*Xo!j%^a@R9sYH`VR:d]M\XtE81$ng_Q*YKbc&b.Uok.JY7!?PgX-5'lp';5T(3cke;T1'*PAKS(e
%/%R4^!YDc0/4B^\KI4k%;Mr@KdW8fh\]$BB^'YuV;FI74.j@h7'G3!>JF/r8!C]CcW4:D)4F0L8oB<#+lA4KS-YH`EWe22jAlMa_
%Ta0Fb$W_F&>iRP0<11-=$>bK(.^P[i*NUL)`9'5+Ckpk"ZQ4AJ+ssTP>rY`$-QSD.)M/,4BdK"LMU&=e<>QsE-R6dD^OltEQ7=o`
%G'B*2:W?qd:;;=5]CQYW[Q?]5?/2!;E+Z`RN\]bBgLYu??uGO\;\tJ*KHT$?a8)V3YGe:-(u:?s\L=`=H+Qajh$;!c$mciBDE3hN
%;CZ)XBpVXO1:Z4Q;]9O[:eY.A7g#*69h-Lsm_#9/U)d*=PG;)hP9+U$0Ql3`a<jA_ACI9(la<8A$(^$/<HP/b@\ilaZ>qOa//m=*
%e7b1>e0rI!2&[=P0]ZdR]0D,jEE!iZrY2aW/=[O\E&K;ZB8KQ]KJ&`,*G(0Bm4t.DEIP4)0%$5C*Ld[]Wkm'+bI,\s2C,>$.^:GM
%/sE5OE3)bTA\d,`RS(dn8`eo#6.>)ofL6Q.o[E2cX9^ZuaoVYb)NaADdV@i_/"M^tV(>o:^]8L2m7elWb*m>g,6_7?QMBPsble^#
%6!2L38sV\,.2b[N3%Dho1uZ6uNK:)J;+$rM8PL.?O!7poK%mcM+k%]`#O$t]GnYpj<5bjWl+OnG@IMj&nl5+ujLMKV&.2DokY^JX
%mhfFVX+oS8e@!JQ]d"7HH\ZF,r;RZsQX*1G+q6b&]u/O1":H@Mm_5JqN&4F)1L`Vn[T+#99:W.cFhrmC+8^Mn\=C^3@b>dnT83md
%GB7i;r+=@)4AD6$b@V-*20`lBb@_pKX.\(HG1d?QEYpnDG(&UegEpjbZ&?G>_8>-0Xdf)m4E#[4_PF(f@efP@2X2"jI%&mJ\P0nL
%n'l)UIapB#VAV%]%"/0$<8)'T>`c160$%Ji*8'qd*u=60:<g`#\QgO5Y:"L5]J!AHhEkVd*f`0M)4-\p6()TRESS_F%O_\4h1sln
%LWfBOJT)XP\5%&dmb;$6!eMeiYKKqrI,m:`[i7AKEQL8sD?uV"(r6r_+aKVRGPll/\T_S.\G=s"&_rddJ8Ln28oB3n\'?MJr9Ui!
%e(s0"Qi$<.]7%M=GP_Gq]+$MaDqQ.F*[\nU`SI\F3]H98BR"@Xn?tX&aD]jN?<&PXMnAol$[;KdG'BDZ8aN7jOZjQOibk6XBKs<;
%4g$ib;""%P=RPVN+[$WcqgojVp&thJ>;G?WNc:gP[a?_L9&BN6O5h]of*ZY3GIT<IiGcQJ_Vm\__r9H`jRAr_6=26MrG;bmo3@W_
%c7K_/p>[tLl%&eP#mB)pgSU($Ws@ZKRq10;C+!VJRRt51:-q(feD*8Oh)DTp_.7p!l&MisVC90Tpj4i[Y\eA],62/Pd%bgJ!!;u:
%4#8X?&^RMR=N^G<s"mMh3k&Et(4ga#.[a*9KY6Vf)E35Ciaf[]jW:>X+#]72HsW?6M[a]lrU6(+^\P(ZT76S*qj1Z;qsA=Z^]42s
%mlu:#N_@&HV*epDq9A@mI.oR7=4YR0^]*lqe*!'95Q:W%5QCZPLQ=[qFk$]pQ0Wo!_tSZZlrU'f?hs*0c_!G9`hhdt&&3VhbNDM-
%c$K3)044_U:Rhc'gKo@+l,&C%JlSsK"CnIMpNJAX?a05uLH>t&lkM>SX,ol`Mi_-_Bt_::hEaaSX2e4-)Aj!8#TI%5iWc&Y`3u=^
%XW%LS[s$;NGTdCEW<tf0EgYbDhGe3BUmG#eDsn1W9L4"tHFZ*o&lI5m)kaE1'L+GceEJT_eCZfME0je'nlLu@G0/8H#L;V&:mbPF
%fEq%Z#@8JXB@q(a3D@Ic0M%M$a"JmjQ*FZ-,*h/l3d%4Y1,Pp5eXAA"0q%WNCMQ8N*75;Y7G.c=4/)#jq7A!/rgBBg%*%qpNoduS
%'JnL`4P9'PMXi^27CGX$VJ=E$jD_74Hn%3cChRJ<DKPicfaaM6`E%:0E4OGQDSb&+(CYl;R2%W,:AQX\kMl"kfep5dP'Db"8F#qs
%c/DNd<tTNM5lPrnI_j7cW6h(;K8k`I3JM>ParYk1LlHDCNTpeHkKR@?;l6Uk_oVu4hsK#jf&QP/rkjZ:YP/s6R8gn^Af)i=o2^\F
%QqXN=jF!BT:AF4uqq_!+#C:s2Hc^(:HgIde3CuYG.RQ%'R_I9\0&DCtT33;NS<68oVOq]oRT?,g`+Imdk8n/4S6r`>2s,"8'4jU,
%PT[=n]3d6C6ZW?`'t;].bW@1+PWep+$A56snsG^-#YA:urR#,f@"^g?r[UWoib?Xf'9F>I@bTcUO[[6Z9[fI;c.,p*6sUA68`>pG
%c@4nH.:@MTJ\`Dj\*aSp.dHX?,GK'RJ%se8"DT8bAnQW7X7Zl_Dk38qo,2Qd`GsckCmP@e`&8C6YO,)+aZJ?2e/"7_.Lg9-OnJuC
%i'_"JD@:o5Bu0*n]c#lN7!gnf":t^$*jej%7GP.!81Tg][0Meeh+[MFFP:=3JB9V_<?$3Y;/@tNW"U0(J&uu)(!dtoaUg+)TW"Wb
%i+)/:4$1!DiFmi^*WN5SqpgTUW&$Q;`P-uI3Ghb]qDP+m9\d$J4ug/jaTD#09M2Wd,M?4DN?C.qG/L?npLjq?M3!46J,qJ^0m%!F
%.slsV:6eaG=(thN<Jj_ijB95aV$F$X7(6&Tn6X9sF[Vs&LDZboTMYLthMmCUOIVQ<[XHf6`m.SJH,r-X[okW;e=e$C#1AYE(22uI
%`q'Cp#D,r*ZlrOT.o+4O,<&,,`[SI#c/3I"Zl2!J<'l9FBUb!@6@B3(@<9,>mi7P?(3Hs8NhXsS_B8u]<0RmG_A%+&<6t[h[bc<K
%50'UA'aYWP9cI!ZO&'ia,X0,k@XhY-]DS%#h_cbTa5MkdFFk[]bW8dqg6j,GE+3Y+cHaS@M45U_NtA=H!1ICI`^3+n</-<g<1aIn
%%A[\$KKm]G&-YY\Pj0GC/"fb71F1WL_j8#O+/C4o+Ld=,g/U7J(K%`P"Ts.7l=E\i"IX:#W$YgE<AA$aMAn(r8^*?@M>98kAg64I
%9Fuou=TV3&RU7>l]Vp3nl?<m&[k.;ND.WE6=RV2l/fK7=\mRX:p^T2QHUsI<Kq>QOLs,-a6(PKb$m\u+TN98e&..g#VRu42_QeKs
%ASdr;s)tL7L+;]+^$?!u6\eB53Q//oCtqso+QR)_UL0NnoNo2P!_\ltT:_:00V;Q79RJVKSSfO:i9ioo2VB.r%pI?`d?N)EO?Y&h
%Sa(6Sf'[o5e-iWA<HMtcR2[qMF.'kLAoXUkZ78]FolA,cT$!e>YdW2YAiV@I"sO,G9YoG2qj#*FLUl6R)NUGoBg/d1d)U)J15QQ@
%;^QNZDqmp,3jQm"6a0%(AYqh`#u7eJ;@+8aQYU`u3L]a($c@_O(mhsC0]n_HA1qMp5?:n>&"'H'D$X?p:s%'RYAn(e;'TK4Ah!$c
%f@1(:^/q/BRuphCUV!MSfn;d/?9'oj/V+IW\>bpFb.n'?m#f"e6co?fb\NfJCEV.a-^2V!OZAXSqEu(NC'>KQ7jY?qP*2b@c/(B<
%&T%J(?"Fp/4J:+)+iK'_XfbOha?Idk71(LIQ`$5<biE@ChD?ShOL&9'BZRiofBJc#Mun$_h;j#FfTmNsIC_Ed'7bX7c(cJ/,/g/M
%FI,_=dN6<.Df/4ZjX]q+2F)Bm6HIZZA,-`en1__eaK,(h[D@$Z3bW2Y=Wu=Z+rn-0a6^`a1T3j59+#:hi]pfK]#9_)jEKgX\jo&P
%S^qEJco=)5_dA*li[Pr-B'W?@4lILY<mOn9:fC;]50#Q1d^%5"iCu(.OiTtFD4>;V-V/GCPuD\m:G>//i7a(tc+>"_NPiMpf@#(_
%kFu!Xb=,BM/ahq,nWI^tM)s%,5K'O0L!n[4T`ABpBHVpVTI%<'#Jfm>dT)Af>*r@[d&3KYK+qZp%"m$ObhgdW0UP;f+)&"AVu0g!
%C4r57BA]YT[`=dHP3>f<F']*mUuiLcZ@+#hoHl>o%O5'10I/!:FpOZUc:j1ajsB_s\t$sdnZ&]F2^c9#/Js/40/*P/)h#q)2r0^t
%?,2!:*8mDQGHtN23NG&@dlh3E_?Fu_9dV%h-OeeuD&$fkNBgapNr.q(/AcO.X=oDdV^Gp$Yo;,..E6niW'eff>0@tF)=6iu&N!0W
%>9Qp-DDlj1f%/BshJ`J,7t*q]%<037Z2R%jIJ=j3)2"S\\i_!1Q+U&B>p>N/R3FsJLa_;_98p.5A94/nTHf(Pc@f4UAo\9Y'h,@E
%f#ALOL'&<,PB4@`e"Xdh0kp07oW2e3&UL_HQ4;$_U8*@da545Tm)^]/S;`Bii^aciP*=Mg5ORsW2Luj?ENBmUCPo>&;n.O;d8$D0
%FWZaq,FYeqOc;bhJ^7DfY;T2!DY=YcVpln1%6]3`pMIP2$W^d@Vs;fFG@;uj.pd56SL[D*PeFhh<cR^U?C<R7)T-mg8,Ue2%H[N!
%6?mBjdlj@a5SOO@PP=t@+!\_DShlL*@0eb#&8I$4.3V4(/1&LKf=@[E*g3)$*-`TD1,3miQUgX&>fA<fg3[2V9a>_GNsl3!\TQns
%0snuW^+dVm&*n4].+ZA,FPB+3-eS6,"79A]BU[PI(hW3ae.TA;2^Eu]b7g#Y,pl'K`;K"C)t?+DR!6S-Fd^UAV?rkjMPRdQEOi87
%Q,A*P-.E^-oPp/OUU%FcYG"VDPC"\<i^6eR!hG?D&hkhV>Z$?X?6!(ag!:V6JDP'EWbb(<Atg2Q2k+qrX+]Itf^LLi@?e7B/Tcjg
%Zi?&3WZ\A1`7`UCQ2(Mo%V6.IT_KS6__eHP6'e9Q/a5!6S^ZUYc#VG:.TW8-Eka!qCLei2IS\r/i`)L$8'+EN\%NToGooZ.hsFk@
%mu]brC9,T<`pS\SL+TAlS!<O\Rrn5#3l],4!$d$KC,k8=1r7SPH-!SZaEP42K2_.^KZ@LZIm1.7"iJ*m])h6f-<JEE@9Y?!F3Du2
%@W]*"dPdZ%1c)9B[bmsh5%Ese?"aOFnEMd2CGO&5#AM;n)%PAT4J18?=$=jh>mq'<Eoe2t'i\d*_kn/MFk/?`$4q4,,ALCn1?NUH
%9rm8cI@X56gDGU&ehqPQnapj8f*Iq=fGQa3??<jW)*6mRV^QP3kZ$Ai>+ED@3e^J,T8h33c/XbOdRqUVf4WaCk+IJO@8i?r1(*U]
%Rt?HZF:"G.fGTKECEK(.Vq;U44E#WLSKZEkZ(=5DNFg*L5CkG^fPc-=?%]$6(@2pU8:+?_3PZRndU$l`[^kOgp8S7>;FJ8Em0+#1
%Bcd#U=03'tgXBK;=k0qBb^.YobsU<Lor@B5Ra.^qJ?3hiaEjE0RJ-1jbF/%_VbNfV1[F/h&Obp.HI]Sc]%aPtifh0.3jN''AAXsu
%S6'PP=pF@S0@S6j=D[r[H&7"oG3G@dK"7SJiK<bA"hFhd:O3>p0-*Wf$ZmZ(1sAP0j;E+f]nFLWgll%eF41/kU_d8XZNfPLklk'Y
%S<+u[`?[#-s4``D&;eVsman8$kXM[]0Z9rl8>sV_?kS3qO!Eo^.#3/tlggK7dYlfQ.Z-#ZFCJn293@%AE=BCZO9m5HGV,9C1[2m%
%CSXJKM^_Q>Gu&e'L+6\<ZX/U_=@q1l+F-o`33llRgDjA"`tuBq30g!!>dI=#f;mpg2"to^Pt`WQiq^`jJPG-Wd':XGjV?3Id>[k]
%%L+3fKu?:\'4g&:>!:B^\%;V5Y,ppD=^aqIXF4hsc%mZR#?tEU@i7A5+8V(@o(('sE.:5-,GlSO'8gp-9^29=`!GgQgT'[.1,WMu
%nbR]\iGT>I]"L0["]8MPJuQ\BF,S`s&DI5Wp;0R'kHdn"T`gHhWH]kbHsi[Hb[kSCPLS$%'c,`k/fWO^MKk8m;1K(6OP[iLm#b'W
%*Bea4c7qe<h55@?"<h/Wh*nj!-+$N9pGe:`\MbA)3_!Ms?tABP82^_<.l$c<]_YkWR$,JRM(TsoY!ma=[fs^"d7/?-K%8I=JP(9^
%kfZ\=bd!`_$Rt(9h*Dqrir%;dm8JKNk#rCs'/_;J)#G@H"A'ocE.*rD+(rEW/p?)V;i)rk$rH<%F10tDNnr*qaG?h%hR..)pEN&2
%7Y@IH)a[C3[&;V*_S!?NMS'MJceu'th)nU=.^HJlV3B.ef'\KAiZ-)=;ibi&U6h7;;(QGaW^elh2r]+HcU]MOWNOrY0J=fh&7MrA
%qGLEB&ho%l#+^i&$OaD->AH5[0:E_"2OAY]ig-dhK,;%#mkmgB1VfHPi3dOB/e`td?C0J[8$DjDgZ.Ygg<.)=>Y!KqDGcS3@roQ0
%<eqZqOG4Xr#:88U/rsu)g*c\VL$1XMR,Q<O^_@&/-n.>Md9Cjd;lpiaHo[=S+sLNlT7LRW3`d"_5:!E(a<(0/e!:gEj,t3a5(a82
%"jeNJ1faaK]GG3Dhp,MQa7`YT^JujlSml3?dCEcJH3lg8ZN;0r$maV%:BTY&=/O'/b\<A5pm^#CmV!*8_hN31!chF^VT'2$6f'qm
%R8i?T4DmpG!V;k_Sg(<tS]\B!cV`QUS_3%@*nFY[hT8AaO'RS&qg-(2G;!Y"Dimdf\tOB*2TOOVgtpgXXEpWbm8IhNWo#lQBY7fD
%7slbdf>6pC)E;!*H[#qT:!kfF]?b]5?kK'HrsK75&=NH_f_K^C9[Na06'j\5Ds06BY<^.?5/-9!RSaaM6suD*,A42]/6!+,%9%6R
%(LF?b+Vc]mL=D;Bmdqb:!@G1W[l!TM'\c`#BVNZ*q2`$"r2j`;E9OO/P;\7/D"`c\:06tXNh<"R$#\/dYj'd/Y[^4+n<d2<Ya:QS
%0/"-*E-j>p#Eajj_;'a83pB^?O1a-JoBGem**mF%*d8rX]u16BlB_gM=afc-M)QuEe@;Lt.@pT<j@AR)kt,fadl/"1RRZuj\"<tJ
%F-f-R!`]6[Xaq3qahacn`@JO0DG*`JB+d-tl\p?-X0IC7[$Rh^a$TPIkq/Y/7>5uU=6:(Q=/tW#7bMc?88+qtM[3Ys4AOn.6)%?^
%#/q`PZp.<R4p`nYnm)pj-!=<Nm(\iKa`tS'j:gm#n$0%AY]F+M,''itZsFK&LarAJY0/MchOYUjK"(,!<[+<=dhI?9,D<A:\B^D=
%cS)LULS=fM%Njf%c2f!=jmHa(U$@\OfSieY?/5qM&O+8!.\/Duk,`h;k>MfK:)e-?I=_ps;/oYLFAaIG)0F0q_qSo9k5+b"Y6=`&
%QFX<FRV:.(GEk1g&AX8.JuR*kQB(VMp8-C_>E#>g,`AN4L<@Ak/*_$[j_.%D(@;#G'"<tfmMNt])[C1<8';s"a"N^slC!1])T;#8
%27O\1Ge<j%Sn/qkRh%S94WC6uXa;qrQ$MC,dtgJmF72`9]!E98KDMHJ&V!-(a6Mr]?Ai#q<MeR;0^dW9WA;mmLTofso-)86VUddR
%eEL@X;)40sJ=tp.b`"QpYIi\YeEIa^Xj6@50t[oZot)%(G+;9KScSmumOC.a3d/O.D6[l@Qsl]$KF;>8h>:Dr9T+%KQ!Rb\->1fc
%Zc/Cbce\GGWbsgdI[B4/F#SaIadOHHgo0/oMA2b7i[`Q28N:5[1%%M457g8Y,_u8"juokMPUS=pB.AWYnPuG&dS\NkW^D,6!8dDC
%'iQf<+&\r_g`<"%NHn@th2ABQdXDhiV2.K[HA<C_M;GLheY0E@.>2)T^t.lSf*eUe%Efk'I>2/6XbHo[,)X)]OZ#uJRt=IYb*G?;
%;5DK1>dk\W=GIb[999mS\WZmYA*l?KWF#>8RqM0RMoa?]9orX%$safNh0N1%E[+!fXh,HWI<dbO^Oi7F@t&jsA=,=5*--4f>!gd]
%1_efMlChj;@rPeZ_ohj;G1qoT!^"oG]_X:AJdZb4pM8E(/76@+7K*"qT(L[Jn)AI*%dZ<2<#M1C#(43=Dc5.fYfj_5!k2@)A!^%W
%N)-4W,>:;^FjpXSP7%WSgjZL:@l/RS6&g/m(o?S,'\H-"1l6[a0<a\up?Uu1]e(e4bB"3\ng4lWf&>:+]F0M*HI!/cF:NGGfr.@l
%/NO9d;oQX,<1KsEcL@t#*G[d4:o?6<iu_Etq;nHEl?T1e5"JU?Q(C+P8T[t\83GN+/MmW^7rC"V;e'q<-DQH(0N%^8X&7AA:Doa(
%m,$.1B%7:'^oD#YWqUfAEL%O=%WASiM'/Zj3UBWV(0clW]Xq#2?=8):\futKSt0]!*pqhAaM2IUL\N#>E8,)I1Hr#DeTEDjpbY<\
%p,JO]BhGJEV$K.5V<eLs8rj>.fXhCSe,/m$l%$gJ,kuI]hBm%>:FF=0`UK(&6?$q#);)Dh2aJM>'IH8u'^EljI/smDYK1o7h6n\*
%fSSG]AjCFbjZ.?JHtCA,gN)iX9D\(<(68lF';\9fc;;*F1'ZRTM+@3`Q`>fI-g$QSAbE^="@`3q%l4HYO*8?A3=NRgacI.<C#?kc
%0C"kD>gD7sDN!KjP'u/Q!!6S1ie%Qh.4&0DgAE0C$;l]WUJsk/;2M!>WAdso]8.n>:SNTdlPp<q^Q58hMRr6oe=383F[c,,kB4]V
%gZ/8?-];i0,AjHX(@P8,W"7LAGYfkWPWOpTg9PHl&Ql2M%k%5m+Hh)RL<R6@0\6LX=9KO0fpn&fnlL%W8?enu?1L-<%P%^+PpB]c
%Q_TkE%fc5&Ln#F@)/"'_OLFa%R4Gs56#Nt/;Dg7Z>BBID?:BOaM-CC,OQ?o)i4uQR^<slM;<j)DXB9/1Qmr]sMEAtnYY5BI5'cH.
%Kb?Uf;l-8jT=.Th1FM?dJ9^W.gLcbQ[d6V>9!TF"]KGrs,F[&'6mZPBffg^.JPCUs%JJ64c)t=%k,:^<GH&][nkq:>9]eK*'3-aO
%#q&llLXgfaplVHgf2QKY=YoSi8phID=W$>=g;$ohC1PDD28b[R8"4mpcss1<Fk.cO<Q$p'>a*pLB4XF_(I]HH%1&5UBUd<K:WX5_
%Q4"$;NuLAIDWGf3oL\BN5+a+>5tY?*e:pKaDq^+qi>p?%'g8ZhBbmhZVZ56nC5*@$j)&XX&]jhr+ui4D=t"\EElujRrpB5t<A[IY
%+N[b128scFG)YgcHmk*0`dZ?\LH<_P0"++>)Oi#3CA(tX;3[YO$T.eZ<9BPYU3LN)o826JlArD6fiQ<EI(oHNk-5=uSnG'"lSO%K
%7jX2oMVQihFm#YKEj?nLC>'j$@"":#a,u14M<P\Q$NqQtSqdNAA\W!F6P3X]b7ERTnhgp?(%\pR?hTSMRi9d#ZHp!1S><'6F!"Zs
%&qVXO`P;+6-@odslC4[^Vnhs?-aXN6ag;=%*p;,Z6RQn]%Ajqr$Dn]^f]i@!jm2BoEj+]CmG3W8":Bkrc3?LN$:;*$J@61g:FYUr
%'\2InaRoIG%]'>6C$NS[1pEW.#$%g>T3bTa:K2[!A]=I#7r\a5=^rHr'k.,#ScA+0a#_dVGK,C^H2[gYIBu@i&fNY"rBjd7ZYOsg
%`!MNqB&5b'`Q['PV3C\&/GUbISHW\`"TR7MdQ!;+qT;B13L%+<2#jG0QOLb`64+\"rUQR]CrJUrj#(9k[b6ZIA$Ja@f6U3r<W+Gg
%C&;mBgF"I`2DHgC2pCrW+]2W=a>#*)/a?5VDVaqbW2'2VC/83]+oC;)f]$,_bW4!5:(J@Z=6ki+!=D!R5rQ/N%^+rh2V:s']Qbr2
%=I>2m?S@e(l;[\Z#o[5H@?^j^Fl)a'!;<?IXY8Q_U;4r&So*`tF4d4O;Ugk7[>&"$`&[/JF&mVQ49$T'kBEr9n#:VPSW+Vq*-l#s
%UkAs)5D'7$FATJa9Gg;SCR8rb^MiZl4IM*'-rJkpc>mr/Vlo!R?,rbrhOW:_H1uOGS]pnc)mq!!k1UHeH'VI3rtp:X;/mf0nO2cY
%HRR_2MCXTDN'/Dk+EPtR;GW]%8^U6-<7=QKk13:@=48Xcn_I%-k2p*?>0=:?n.3!#=LR"jl_l8`/ur4T]p]1/Oar^$GWG%Y-\nG,
%:Xd>Q%lS"5g#^^Umsir4RX@h9NqFfR2fHV+a.lAHrEK<mlL03"ZbDLsX'`R;k*uDKme[NEq"3AQJ,Aa"h=j-`pQ#h<hu3<p%4OL=
%AH1!!pRaYIr;#BN%kg0Ip#H(&fId!^hgG%-s7j'IrsQ1.H`6~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial 684 1025 a Fo(C)8 b(S)51 b(C)8 b Fp(A)g(P)g(S)g(T)e(O)i(N)
g(E)93 b Fo(M)8 b Fp(I)g(D)g(T)g(E)g(R)g(M)51 b Fo(R)8
b Fp(E)g(P)g(O)g(R)s(T)1510 1225 y Fm(F)t Fn(E)t(B)t(R)t(U)t(A)t(R)s(Y)
35 b Fm(1)t(6)t(,)d(2)t(0)t(1)t(8)121 1491 y Fk(A)10
b(H)g(S)59 b(M)10 b Fl(I)g(C)g(R)g(O)g Fk(-)g(A)g Fl(I)g(R)58
b Fk(V)10 b Fl(E)g(H)g(I)g(C)g(L)g(E)58 b Fk(C)10 b Fl(H)g(A)g(L)g(L)g
(E)g(N)g(G)g(E)1617 2591 y Fm(P)t Fn(R)t(E)t(P)m(A)t(R)5
b(E)g(D)36 b(F)t(O)t(R)1317 2733 y Fi(N)6 b Fj(A)g(N)g(C)g(Y)34
b Fi(S)6 b Fj(Q)g(U)g(I)g(R)g(E)g(S)g Fi(,)35 b(P)6 b
Fj(H)g Fi(.)g(D)g(.)1649 2958 y Fm(P)t Fn(R)t(E)t(P)m(A)t(R)f(E)g(D)35
b(B)t(Y)1568 3158 y Fo(G)8 b Fp(R)g(O)g(U)g(P)50 b Fo(3)8
b(2)1253 3358 y(M)g(A)-10 b(V)50 b(C)8 b Fp(H)g(A)g(L)g(L)g(E)g(N)g(G)g
(E)1439 3566 y Fi(J)e Fj(U)g(S)g(T)g(I)g(N)34 b Fi(S)6
b Fj(H)g(E)g(R)g(B)g(U)g(R)g(N)g(E)1569 3708 y Fi(K)g
Fj(A)g(I)g(Y)g(U)g(A)g(N)32 b Fi(F)n Fj(A)6 b(N)1500
3849 y Fi(Y)g Fj(I)g(N)g(G)g(S)g(H)g(I)34 b Fi(H)6 b
Fj(U)g(A)g(N)g(G)1815 4217 y Fh(Abstract)p 0 TeXcolorgray
0 TeXcolorgray 127 4347 a Fg(The)25 b(pur)r(pose)h(of)e(this)h
(document)g(is)g(to)f(pro)o(vide)i(a)f(re\003ection)g(on)g(the)g(prog)o
(ress)i(of)d(the)h(Micro)g(Air)g(V)-5 b(ehicle)25 b(project.)g(W)n(e)g
(are)g(no)o(w)g(sixteen)8 4433 y(w)o(eeks)g(into)d(the)h(project,)g
(appro)n(ximately)g(half)f(of)h(the)g(w)o(a)n(y)g(to)g(completion.)f
(Here)h(w)o(e)h(will)f(outline)f(prob)o(lems)h(and)g(possib)o(le)g
(solutions)h(w)o(e)f(ha)o(v)n(e)8 4519 y(encountered)c(this)g(f)n(ar)m
(,)e(as)i(w)o(ell)g(as)g(a)f(breakdo)o(wn)i(of)e(w)o(eekly)i(prog)o
(ress)g(made)e(thus)h(f)n(ar)m(.)p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 1 2
TeXDict begin 1 1 bop 0 TeXcolorgray 0 TeXcolorgray 4018
-296 a Ff(1)p 0 TeXcolorgray -148 -144 a Fd(C)t Fe(O)t(N)t(T)t(E)t(N)t
(T)t(S)-150 80 y Fc(1)178 b(Purpose)3648 b Fb(2)-150
303 y Fc(2)178 b(Project)24 b(Goals)3457 b Fb(2)-150
526 y Fc(3)178 b(Justin)25 b(Sherburne')l(s)g(Report)2997
b Fb(2)68 671 y(3.1)197 b(Curr)o(ent)22 b(Pr)o(ogr)o(ess)72
b(.)42 b(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 135 w(2)p 0 TeXcolorgray 68 815 a(3.2)197
b(Futur)o(e)21 b(Goals)32 b(.)41 b(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray 135 w(3)p 0 TeXcolorgray
68 959 a(3.3)197 b(Pr)o(oblems)34 b(.)41 b(.)h(.)f(.)g(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray 135
w(3)p 0 TeXcolorgray 68 1103 a(3.4)197 b(Solutions)36
b(.)41 b(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
p 0 TeXcolorgray 135 w(3)p 0 TeXcolorgray -150 1327 a
Fc(4)178 b(Y)l(ingshi)25 b(Huang')l(s)f(Report)3072 b
Fb(4)68 1471 y(4.1)197 b(Curr)o(ent)22 b(Pr)o(ogr)o(ess)72
b(.)42 b(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 135 w(4)p 0 TeXcolorgray 68 1615 a(4.2)197
b(Goals)41 b(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)p 0 TeXcolorgray 135 w(4)p 0 TeXcolorgray
68 1760 a(4.3)197 b(Pr)o(oblems)21 b(&)h(solution)72
b(.)41 b(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray
135 w(5)p 0 TeXcolorgray 68 1904 a(4.4)197 b(GPIO)44
b(.)e(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)p 0 TeXcolorgray 135 w(5)p 0 TeXcolorgray 68 2048
a(4.5)197 b(Code)56 b(.)42 b(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray 135 w(5)p
0 TeXcolorgray -150 2271 a Fc(5)178 b(Kaiyuan)24 b(Fan')l(s)g(Report)
3155 b Fb(6)68 2416 y(5.1)197 b(Curr)o(ent)22 b(Pr)o(ogr)o(ess)72
b(.)42 b(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 135 w(6)p 0 TeXcolorgray 68 2560 a(5.2)197
b(Futur)o(e)21 b(Goals)32 b(.)41 b(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray 135 w(7)p 0 TeXcolorgray
68 2704 a(5.3)197 b(Pr)o(oblems)34 b(.)41 b(.)h(.)f(.)g(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray 135
w(7)p 0 TeXcolorgray 68 2848 a(5.4)197 b(Solutions)36
b(.)41 b(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
p 0 TeXcolorgray 135 w(7)p 0 TeXcolorgray -150 3072 a
Fc(6)178 b(Conclusion)3531 b Fb(8)p 0 TeXcolorgray 0
TeXcolorgray eop end
%%Page: 2 3
TeXDict begin 2 2 bop 0 TeXcolorgray 0 TeXcolorgray 4018
-296 a Ff(2)p 0 TeXcolorgray -148 -144 a Fd(R)t Fe(E)t(V)t(I)t(S)t(I)t
(O)t(N)35 b Fd(H)t Fe(I)t(S)t(T)q(O)t(RY)p 0 TeXcolorgray
0 TeXcolorgray 599 -113 2703 4 v 597 31 4 145 v 989 -12
a Fb(Name)p 1591 31 V 570 w(Date)p 2118 31 V 231 w(Reason)21
b(For)i(Changes)p 2937 31 V 99 w(V)-9 b(ersion)p 3300
31 V 599 35 2703 4 v 597 179 4 145 v 648 136 a(Midterm)23
b(Pr)o(ogr)o(ess)e(Report)p 1591 179 V 99 w(Feb)h(15,)f(2018)p
2118 179 V 192 w(Initial)h(Cr)o(eation)p 2937 179 V 275
w(1.0)p 3300 179 V 599 182 2703 4 v -148 378 a Fd(1)96
b(P)t Fe(U)t(R)t(P)t(O)t(S)t(E)-31 548 y Fb(The)23 b(purpose)h(of)g
(this)g(pr)o(oject)f(is)h(to)g(design)h(a)e(vehicle)h(capable)f(of)i
(competing)f(in)g(the)g(American)g(Helicopter)g(Society's)f(Micr)o(o-)
-150 692 y(Air)f(V)-9 b(ehicle)22 b(challenge.)g(W)-7
b(e)22 b(have)f(elected)h(to)g(compete)f(in)i(the)e(autonomous)g
(category)-9 b(,)22 b(meaning)g(our)g(vehicle)g(must)f(be)h(able)f(to)h
(\003y)-150 836 y(without)j(any)g(user)h(interaction.)f(W)-7
b(e)25 b(ar)o(e)g(r)o(epr)o(esenting)f(Or)o(egon)i(State)e(University)h
(for)h(the)g(\002rst)f(time)g(at)g(this)g(competition,)g(and)h(if)-150
981 y(our)c(pr)o(oject)g(is)f(successful)g(we)h(could)h(gain)f
(additional)g(outside)g(funding)h(similar)f(to)g(the)g(OSU)f(r)o
(ocketry)i(and)f(solar)g(teams.)-148 1279 y Fd(2)96 b(P)t
Fe(R)s(O)t(J)t(E)t(C)t(T)33 b Fd(G)t Fe(OA)t(L)t(S)-31
1450 y Fb(The)21 b(goal)h(is)f(to)h(cr)o(eate)e(a)i(vehicle)f(capable)g
(of)h(navigating)f(the)g(competition)h(envir)o(onment)f(without)g
(human)g(contr)o(ol.)h(Addition-)-150 1594 y(ally)-9
b(,)18 b(the)g(vehicle)g(should)g(be)g(able)g(to)g(pick)g(up)g(letters)
g(and)g(deliver)g(them)g(to)h(other)f(locations)g(within)g(the)h
(competition)f(envir)o(onment.)-150 1738 y(Ther)o(e)26
b(ar)o(e)g(additional)i(constraints)e(on)h(the)g(size,)e(weight,)i(and)
g(speci\002c)f(functionalities)g(of)i(the)f(vehicle,)f(but)g(fr)o(om)i
(the)e(computer)-150 1882 y(science)c(standpoint)f(our)i(goals)e(ar)o
(e:)p 0 TeXcolorgray -31 2076 a(1\))p 0 TeXcolorgray
95 w(The)g(vehicle)h(must)g(be)f(able)h(to)g(str)o(eam)f(one)h(camera)g
(feed)h(to)f(the)g(base)f(station)g(for)i(manual)e(contr)o(ol.)p
0 TeXcolorgray -31 2221 a(2\))p 0 TeXcolorgray 95 w(W)-7
b(e)22 b(must)f(have)g(an)h(emer)o(gency)g(cut-of)o(f)h(switch)f(in)g
(case)f(of)i(a)f(loss)f(of)i(communication)f(or)h(contr)o(ol.)p
0 TeXcolorgray -31 2365 a(3\))p 0 TeXcolorgray 95 w(W)-7
b(e)22 b(must)f(have)g(a)h(manual)f(override)i(that)e(will)i(shut-down)
f(autonomous)f(contr)o(ols.)p 0 TeXcolorgray -31 2509
a(4\))p 0 TeXcolorgray 95 w(Ultrasonic)29 b(sensors)h(will)g(be)g(used)
g(to)h(calculate)e(distance)h(fr)o(om)g(objects)g(within)g(the)g
(competition)g(ar)o(ea)f(in)i(conjunction)130 2653 y(with)22
b(the)g(camera.)p 0 TeXcolorgray -31 2798 a(5\))p 0 TeXcolorgray
95 w(Image)31 b(pr)o(ocessing)g(at)h(minimum)g(should)g(be)g(able)f(to)
h(identify)h(thr)o(ee)f(objects:)f(The)h(letter)-6 b(,)32
b(the)g(landing)g(ar)o(ea,)f(and)h(the)130 2942 y(boundary)22
b(lines.)p 0 TeXcolorgray -31 3086 a(6\))p 0 TeXcolorgray
95 w(Any)27 b(\003ight)g(changes)f(should)h(originate)h(fr)o(om)f(the)g
(base)f(station,)g(and)h(motor)h(contr)o(ols)f(should)g(be)g
(implemented)g(on)g(the)130 3230 y(vehicle.)p 0 TeXcolorgray
-31 3375 a(7\))p 0 TeXcolorgray 95 w(Our)22 b(vehicle)g(should)g(fully)
h(comply)f(with)g(AHS)f(competition)h(r)o(ules)g(and)g(guidelines.)-148
3673 y Fd(3)96 b(J)t Fe(U)t(S)t(T)t(I)t(N)33 b Fd(S)t
Fe(H)t(E)t(R)t(B)s(U)t(R)t(N)t(E)t Fd(')t Fe(S)j Fd(R)t
Fe(E)t(P)t(O)t(R)s(T)-150 3844 y Fa(3.1)79 b(Current)23
b(Pr)n(ogress)-31 4014 y Fb(During)d(the)g(course)g(of)g(this)g(term)g
(I)g(have)f(been)h(developing)f(our)i(image)e(r)o(ecognition)i(softwar)
o(e)e(for)i(the)f(competition.)f(Curr)o(ently)-150 4158
y(I)28 b(have)g(implemented)g(tracking)g(based)g(on)g(object)g(color)-6
b(.)30 b(This)d(should)i(be)f(suf)o(\002cient)f(for)j(our)e(autonomous)
g(design)g(because)f(the)-150 4302 y(boundary)33 b(is)g(marked)g
(yellow)-7 b(,)33 b(deliveries)g(ar)o(e)g(r)o(ed,)g(and)g(landing)g(ar)
o(eas)f(ar)o(e)g(black.)h(It)f(is)h(possible)f(to)h(implement)f(some)h
(form)-150 4447 y(of)f(pattern)f(matching)g(to)g(\002ll)h(in)f(the)h
(gaps)e(if)i(the)f(color)i(is)e(not)g(enough)h(by)f(itself.)g(Curr)o
(ently)h(I)f(am)g(exploring)g(an)g(open-sour)o(ce)-150
4591 y(guide)25 b(written)f(by)g(Kyle)h(Hounslow)f(which)h(fully)g
(implements)e(object)h(tracking)g(based)g(on)g(color)-6
b(.)26 b(Using)d(this)h(guide,)h(we)f(ar)o(e)g(able)-150
4735 y(to)30 b(identify)g(individual)g(colors)g(in)g(near)f(r)o
(eal-time)g(by)h(\002ltering)f(speci\002c)g(values)g(fr)o(om)h(the)f
(video)h(feed.)g(Once)g(these)f(objects)g(ar)o(e)-150
4879 y(tracked,)22 b(their)g(locations)g(within)g(the)g(image)g(frame)g
(ar)o(e)g(stor)o(ed)g(in)g(a)g(matrix.)f(This)h(matric)g(is)f(easily)h
(addr)o(essable)e(and)j(can)f(be)f(used)-150 5024 y(by)27
b(another)g(function)h(to)f(pr)o(edict)g(wher)o(e)g(the)g(air)o(craft)f
(should)i(travel)e(next.)h(Because)f(we)h(had)g(to)h(r)o(emove)e(one)i
(camera)e(fr)o(om)i(our)-150 5168 y(original)22 b(design,)g(the)f(curr)
o(ent)h(plan)f(for)h(the)g(autonomous)f(\003ight)h(will)f(be)h(to)g
(follow)g(the)g(boundary)g(lines)f(until)h(we)f(\002nd)h(one)g(of)h
(our)-150 5312 y(tar)o(gets.)p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 3 4
TeXDict begin 3 3 bop 0 TeXcolorgray 0 TeXcolorgray 4018
-296 a Ff(3)p 0 TeXcolorgray -31 -144 a Fb(Due)27 b(to)g(the)g
(complexity)g(of)g(the)g(calculations)g(being)g(used)f(for)i(image)f
(pr)o(ocessing,)f(the)h(majority)g(of)g(the)g(pr)o(ocessing)f(is)h
(being)-150 0 y(done)20 b(on)f(the)g(base)f(station.)g(Ultimately)g
(the)h(code)g(will)h(also)e(contain)h(the)g(contr)o(ols)g(featur)o(e)f
(and)h(open)g(a)g(wir)o(eless)f(link)h(to)g(the)g(vehicle)-150
145 y(for)25 b(contr)o(ol.)g(It)f(should)h(r)o(equir)o(e)f(one)h
(parameter)e(to)i(be)f(passed)g(in)g(at)g(startup)f(which)i(is)g(the)f
(IP)g(of)h(the)g(vehicle)f(\(unless)g(this)g(IP)g(can)-150
289 y(be)h(\002xed)g(in)g(the)g(closed)g(network\).)g(Str)o(eaming)f
(of)i(the)e(video)i(occurs)f(over)g(the)g(W)l(i-Fi)g(Pineapple,)e
(which)i(acts)f(as)h(a)f(simple)g(r)o(outer)-150 433
y(for)d(our)g(purposes.)e(This)g(has)h(been)g(tested)g(and)h(works)f
(well)h(in)f(a)g(variety)g(of)h(conditions.)g(W)-7 b(e)20
b(will)h(need)g(to)f(continue)h(testing)e(on)i(the)-150
577 y(r)o(outer)h(in)g(the)g(futur)o(e)g(to)g(make)g(sur)o(e)f(it)h
(can)g(withstand)f(long-distances)h(and)g(ar)o(eas)f(with)h(str)o(ong)g
(network)g(activity)-9 b(.)-150 852 y Fa(3.2)79 b(Future)23
b(Goals)-31 1022 y Fb(In)e(the)g(futur)o(e)g(I)g(will)h(continue)f(to)g
(work)h(on)g(the)f(image)g(r)o(ecognition)h(side)f(of)h(the)f(pr)o
(oject)g(and)g(assist)f(my)h(teammates)f(with)h(their)-150
1166 y(softwar)o(e)28 b(when)h(necessary)-9 b(.)28 b(While)h(I)f(curr)o
(ently)h(only)g(have)f(one)h(color)h(being)e(\002lter)o(ed)h(and)f(tar)
o(geted,)g(I)h(should)f(be)h(able)f(to)h(have)-150 1310
y(several)d(objects)h(being)g(tracked)g(simultaneously)e(by)j(the)f
(end)g(of)h(the)f(week.)g(After)g(that)g(happens)e(I)i(will)h(need)f
(to)h(conduct)f(some)-150 1455 y(testing)d(to)h(see)f(if)i(we)f(will)g
(also)f(need)h(to)g(implement)f(any)h(pattern)f(matching,)g(or)h(if)h
(we)f(can)f(move)h(forwar)o(d)h(with)f(just)e(that.)h(After)-150
1599 y(the)h(tar)o(gets)f(ar)o(e)h(identi\002ed,)g(their)g(location)h
(within)f(the)g(camera)g(frame)g(is)g(stor)o(ed)g(in)h(a)f(matrix.)f
(This)h(can)g(be)g(used)f(very)i(easily)e(for)-150 1743
y(logic)f(contr)o(ols)f(and)g(movement.)-31 1887 y(The)g(ultrasonic)g
(sensors)g(will)g(also)g(need)h(to)g(be)f(implemented)g(on)h(our)g
(design.)f(W)-7 b(e)23 b(have)f(not)g(yet)h(decided)h(if)f(that)e
(information)-150 2032 y(will)j(be)g(r)o(elayed)f(to)h(the)g(base)f
(station)g(for)i(calculations,)e(or)h(if)g(it)g(will)g(r)o(emain)g(on)g
(the)g(PI)f(zer)o(o)h(contr)o(oller)-6 b(.)24 b(If)g(it)g(is)f(local,)h
(we)g(can)g(use)-150 2176 y(that)e(information)h(in)f(r)o(eal-time)g
(to)g(avoid)h(obstacles)e(and)h(track)g(our)h(height)f(fr)o(om)h(the)f
(gr)o(ound.)h(Because)e(the)h(sensors)g(have)g(not)g(yet)-150
2320 y(been)d(tested)f(or)i(installed)e(on)i(the)f(air)o(craft)g(we)g
(do)g(not)h(know)f(what)g(the)g(distance)f(measur)o(ements)f(will)i
(be,)g(or)h(how)f(that)f(information)-150 2464 y(will)k(be)g(best)f
(used.)-150 2739 y Fa(3.3)79 b(Pr)n(ob)o(lems)-31 2909
y Fb(One)38 b(of)g(the)g(biggest)f(pr)o(oblems)g(I've)g(encounter)o(ed)
h(was)f(in)h(r)o(egar)o(d)f(to)h(the)g(camera)f(multiplexor)g(we)h(wer)
o(e)f(planning)h(on)-150 3053 y(implementing.)24 b(The)g(documentation)
h(fr)o(om)g(the)g(manufactur)o(er)f(wasn't)g(completely)g(corr)o(ect,)h
(so)g(it)g(was)f(not)h(able)f(to)h(str)o(eam)e(both)-150
3197 y(camera's)j(at)g(the)g(same)g(time.)g(Instead)g(you)h(could)g
(only)g(switch)g(between)f(the)g(two)h(feeds)g(using)f(the)h(GPIO)g
(pins)f(on)h(the)f(PI)h(zer)o(o.)-150 3342 y(Unfortunately)g(for)h(our)
g(situation)f(if)h(both)f(cameras)g(wer)o(e)g(not)h(r)o(unning)g
(simultaneously)-9 b(,)26 b(then)h(one)h(of)g(them)f(was)g(simply)g
(dead)-150 3486 y(weight.)-31 3630 y(The)i(second)g(pr)o(oblem)g(we've)
g(been)g(experiencing)g(has)g(been)g(fr)o(om)g(the)g(ME)h(and)f(EE)h
(teams.)e(Curr)o(ently)h(we)h(ar)o(e)e(one)i(month)-150
3774 y(away)21 b(fr)o(om)g(needing)h(an)f(alpha-level)g(pr)o(ototype)f
(for)i(the)g(competition.)f(This)f(means)h(it)g(is)g(able)g(to)g(be)g
(\003own,)h(contr)o(olled)g(manually)-9 b(,)-150 3919
y(and)30 b(have)f(some)g(autonomous)f(implementation.)h(The)g(pr)o
(oblem)g(is)g(that)g(the)g(ME)h(and)g(EE)g(teams)e(ar)o(e)h(still)g
(working)h(on)g(getting)-150 4063 y(things)25 b(implemented)f(on)h(the)
g(air)o(craft.)g(The)f(motors)h(have)f(not)h(yet)g(been)g(wir)o(ed)g
(to)g(our)g(motor)h(contr)o(ollers)f(or)g(attached)g(to)g(the)g(PI)-150
4207 y(Zer)o(o)e(on-boar)o(d.)g(The)g(ME)h(team)e(is)h(still)g(working)
g(on)h(slight)f(modi\002cations)g(to)g(stability)f(and)h(balance,)f
(and)i(the)f(EE)g(team)g(needs)g(to)-150 4351 y(install)h(voltage)f(r)o
(egulators)h(and)g(contr)o(ol)h(modules.)f(The)g(CS)g(team)f(will)i
(have)e(r)o(oughly)i(two)f(weeks)g(to)g(implement)g(their)g(pr)o(ogr)o
(ess)-150 4496 y(on)e(the)g(air)o(craft)g(befor)o(e)g(we)h(need)f(to)g
(demo)h(for)g(the)f(competition.)-150 4770 y Fa(3.4)79
b(Solutions)-31 4940 y Fb(Our)28 b(solution)g(to)h(the)f(camera)g(pr)o
(oblem)f(had)i(a)f(couple)g(of)h(dif)o(fer)o(ent)f(options.)g(The)g
(\002rst)g(option)g(was)f(to)i(mount)f(a)g(second)h(PI)-150
5084 y(Zer)o(o)i(to)g(the)g(vehicle.)f(This)h(is)f(possible)g(given)h
(our)g(excess)f(of)i(thr)o(ust,)e(but)g(we)h(would)h(have)e(also)g(ran)
h(into)h(issues)d(with)i(power)-150 5228 y(and)d(contr)o(ol.)g(It)f(is)
h(simple)f(to)g(have)h(all)f(of)i(the)e(components)h(r)o(unning)g(to)g
(one)g(PI)f(Zer)o(o,)h(but)f(having)g(two)h(on)g(the)g(air)o(craft)g
(would)-150 5373 y(unnecessarily)21 b(complicate)h(things.)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 4 5
TeXDict begin 4 4 bop 0 TeXcolorgray 0 TeXcolorgray 4018
-296 a Ff(4)p 0 TeXcolorgray -31 -144 a Fb(The)20 b(second)h(option,)f
(and)h(the)g(option)f(we)h(decided)h(to)e(take,)g(was)g(to)h(lose)f(a)h
(camera.)e(This)h(r)o(educes)h(the)f(amount)g(of)h(information)-150
0 y(we)e(ar)o(e)g(able)f(to)h(r)o(eceive)g(fr)o(om)g(the)g(vehicle,)g
(but)f(it)h(also)g(r)o(educes)g(the)f(amount)h(of)h(network)f(traf)o
(\002c)g(and)g(complexity)g(of)g(the)g(pr)o(oject.)f(In)-150
145 y(r)o(eturn)h(we)g(will)h(need)g(to)f(r)o(ely)g(mor)o(e)h(on)f(our)
h(ultrasonic)f(sensors)g(and)g(be)g(a)g(little)g(mor)o(e)g(clever)h
(with)f(our)h(autonomous)e(contr)o(ols.)h(The)-150 289
y(r)o(emaining)k(camera)f(will)h(be)g(dir)o(ected)h(straight)e(down,)i
(and)f(the)g(air)o(craft)g(will)g(mostly)g(trace)g(the)g(outside)f
(boundary)-9 b(,)24 b(conducting)f(a)-150 433 y(sear)o(ch)e(pattern)h
(in)g(the)g(designated)g(ar)o(ea.)-31 577 y(The)c(solution)g(to)h(the)f
(delay)g(in)h(har)o(dwar)o(e)f(has)g(been)g(to)g(do)h(as)f(much)g(pr)o
(ogramming)g(befor)o(ehand)h(as)f(possible.)f(While)i(we)f(cannot)-150
722 y(yet)f(build)h(motor)g(contr)o(ols,)f(we)g(ar)o(e)g(able)g(to)h
(pr)o(ess)d(on)j(with)g(the)f(image)g(r)o(ecognition)h(and)f(network)h
(communication)g(portions.)f(While)-150 866 y(some)27
b(things)h(ar)o(e)f(mor)o(e)h(challenging)g(to)f(implement)g(without)h
(the)g(physical)e(device,)i(many)g(things)f(can)h(continue)g
(development)-150 1010 y(without)23 b(har)o(dwar)o(e.)f(The)g(CS)h
(team)f(should)i(have)e(at)g(least)g(two)h(weeks)g(to)g(implement)f(as)
h(much)f(functionality)h(befor)o(e)h(we)f(need)g(to)-150
1154 y(demo)g(our)f(air)o(craft)g(for)h(the)f(competition.)-148
1453 y Fd(4)96 b(Y)t Fe(I)t(N)t(G)t(S)t(H)t(I)34 b Fd(H)t
Fe(UA)t(N)t(G)t Fd(')t Fe(S)g Fd(R)t Fe(E)t(P)t(O)t(R)s(T)-150
1623 y Fa(4.1)79 b(Current)23 b(Pr)n(ogress)-31 1794
y Fb(The)h(micr)o(o-helicopter)h(has)e(alr)o(eady)h(selected)g(all)g
(the)g(har)o(dwar)o(e)g(pieces)f(of)i(equipment)f(which)h(include)g
(two)f(br)o(ush)g(motors,)g(a)-150 1938 y(motor)k(contr)o(oller)g(boar)
o(d,)f(two)g(ultrasonic)g(sensors,)f(a)h(straightforwar)o(d)g(grasp)f
(motor)-6 b(,)28 b(battery)-9 b(,)27 b(a)g(camera)f(and)i(the)f
(raspberry)f(pi)-150 2082 y(zer)o(o)f(w)-7 b(.)25 b(Our)h(gr)o(oup)f
(has)f(select)h(every)g(piece)g(of)h(the)g(har)o(dwar)o(e)e(consider)o
(ed)i(by)f(the)h(weight)f(of)h(the)f(micr)o(o-helicopter)h(because)e
(of)-150 2226 y(the)19 b(r)o(ules)g(of)g(competition.)f(All)h(sections)
f(of)i(the)f(shell)f(of)i(the)e(micr)o(o-helicopter)i(ar)o(e)e(alr)o
(eady)g(stably)g(combined)h(which)h(is)e(3D)h(printed)-150
2371 y(out)j(and)g(metal)f(cut.)g(And)i(all)e(the)h(parts)f(of)h(the)g
(equipment)f(have)h(been)f(mounted)h(on)h(the)e(casing)h(of)g(the)g
(micr)o(o-helicopter)-6 b(.)23 b(For)f(the)-150 2515
y(stabilization)16 b(of)j(driving)f(of)h(the)f(micr)o(o-helicopter)-6
b(,)18 b(our)g(gr)o(oup)g(design)g(to)g(add)g(two)g(equally)f(squar)o
(e)g(pieces)h(at)f(the)h(tail)f(of)i(the)e(micr)o(o-)-150
2659 y(helicopter)-6 b(.)26 b(Our)h(gr)o(oup)e(is)h(still)g(impr)o
(oving)g(the)g(better)f(stabilization)g(management)g(of)i(the)f(whole)g
(micr)o(o-helicopter)h(by)f(moving)-150 2803 y(the)f(heavyweight)g
(parts)f(of)h(the)h(micr)o(o-helicopter)f(to)h(the)f(dif)o(fer)o(ent)g
(place)g(of)h(micr)o(o-helicopter)-6 b(.)25 b(W)l(ith)g(a)g(better)g
(stabilization,)e(the)-150 2948 y(micr)o(o-helicopter)i(can)g(drive)g
(comfortable,)f(and)h(the)f(mounted)h(sensors)f(and)g(the)h(mounted)f
(camera)h(can)f(pr)o(ovide)g(mor)o(e)h(accurate)-150
3092 y(data)c(for)i(autonomous)e(detection)h(and)g(calculation.)f(The)h
(camera)f(of)i(the)e(micr)o(o-helicopter)i(can)f(connect)g(to)g(the)g
(raspberry)f(pi)g(zer)o(o)-150 3236 y(w)-7 b(.)25 b(And)h(the)f
(network)h(of)g(the)f(raspberry)g(pi)g(zer)o(o)g(w)h(can)f(pr)o(ovide)g
(the)h(r)o(eal-time)e(video)i(via)f(the)g(steam)g(video)h(softwar)o(e)e
(fr)o(om)i(the)-150 3380 y(camera)g(to)g(raspberry)g(pi)g(zer)o(o)g(w)h
(and)f(then)h(sent)e(to)i(laptop)e(or)i(desktop.)f(Our)h(gr)o(oup)e(is)
i(planning)e(to)i(use)f(the)g(footage)h(to)f(detect)-150
3525 y(the)f(assigned)f(places)g(like)h(tar)o(get)f(location,)h(pick)g
(up)g(location)g(and)g(destination.)f(For)i(the)f(footage)g(analysis,)f
(OpenCV)h(is)f(an)h(open)-150 3669 y(and)20 b(wir)o(ed)g(sour)o(ce.)f
(In)g(the)h(library)-9 b(,)19 b(template)g(r)o(ecognition)h(and)g
(color)g(selection)g(ar)o(e)f(useful)g(tools)h(to)f(analyze)g(the)g
(str)o(eaming)g(video.)-150 3813 y(Curr)o(ently)-9 b(,)24
b(our)h(gr)o(oup)f(can)g(use)g(r)o(eal-time)g(laptop)f(camera)h(to)h
(\002nd)g(the)f(boundary)h(of)g(the)f(competition)h(\002eld)f(which)h
(is)f(separated)-150 3957 y(by)e(the)g(two)g(color)h(and)f(r)o(hombus)g
(shape)f(of)h(the)g(tape.)-150 4232 y Fa(4.2)79 b(Goals)-31
4402 y Fb(Our)21 b(goal)h(is)f(to)g(design)h(and)f(deliver)h(a)f(r)o
(emotely)g(piloted)g(micr)o(o-helicopter)h(or)g(r)o(emotely)f
(autonomous)g(micr)o(o-helicopter)-6 b(.)21 b(The)-150
4546 y(micr)o(o-helicopter)26 b(our)f(squad)f(designed)i(will)f(be)f
(used)h(to)g(compete)f(in)i(micr)o(o)f(air)g(vehicle)f(American)h
(helicopter)g(society)g(student)-150 4690 y(challenge.)d(In)g(the)g
(application,)e(our)j(team)e(designed)h(to)h(drive)f(the)g(micr)o
(o-helicopter)h(autonomously)-9 b(.)21 b(First,)h(the)f(micr)o
(o-helicopter)-150 4835 y(will)f(be)h(able)e(to)i(detect)f(the)g
(boundary)g(of)h(the)g(competition)f(\002eld)g(which)h(is)f(yellow)h
(and)f(black)g(tape.)f(Second,)h(the)g(micr)o(o-helicopter)-150
4979 y(will)f(be)g(r)o(eady)g(to)h(start)e(fr)o(om)h(the)g(assigned)g
(starting)f(point)h(and)g(then)g(drive)h(and)f(cover)h(to)f(the)g
(selected)g(tar)o(get)f(point.)h(After)g(picking)-150
5123 y(up)27 b(the)h(envelope)f(on)h(the)g(gr)o(ound)g(fr)o(om)h(the)e
(selected)h(tar)o(get)f(point,)g(the)h(micr)o(o-helicopter)g(will)g
(put)f(the)h(envelope)f(to)h(the)g(dr)o(op)-150 5267
y(point.)d(At)f(the)h(end)h(of)g(the)e(task,)g(the)h(micr)o
(o-helicopter)h(will)f(\003y)h(to)f(the)g(destination.)f(In)h(the)g
(meantime)g(of)g(\003ying)h(movement,)e(the)-150 5412
y(micr)o(o-helicopter)f(will)f(per)o(ceive)f(the)h(obstacle)f(in)i(the)
f(\002eld)g(and)g(avoid)g(them.)p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 5 6
TeXDict begin 5 5 bop 0 TeXcolorgray 0 TeXcolorgray 4018
-296 a Ff(5)p 0 TeXcolorgray -150 -144 a Fa(4.3)79 b(Pr)n(ob)o(lems)24
b(&)e(solution)-31 25 y Fb(T)-7 b(o)30 b(connect)g(the)g(har)o(dwar)o
(e)g(of)h(the)f(micr)o(o-helicopter)-6 b(,)31 b(the)f(using)g(of)h
(raspberry)e(pi)h(zer)o(o)g(w)g(pins)g(ar)o(e)g(necessary)-9
b(.)29 b(Our)i(gr)o(oup)-150 169 y(has)g(found)h(the)f(connection)h(of)
g(the)f(ultrasonic)g(sensors)f(with)h(raspberry)g(pi)g(zer)o(o)g(w)-7
b(.)31 b(Pr)o(eviously)-9 b(,)30 b(the)h(old)h(series)f(of)h
(ultrasonic)-150 313 y(sensors)27 b(on)h(the)g(micr)o(o-helicopter)h
(cannot)f(connect)g(to)g(raspberry)f(pi)h(zer)o(o)f(w)-7
b(.)28 b(However)-6 b(,)28 b(with)g(the)f(r)o(eleased)h(documentation)f
(of)-150 457 y(new)f(series)f(of)i(the)f(ultrasonic)f(sensors)h(have)f
(impr)o(oved)h(the)g(accession)f(of)i(the)e(har)o(dwar)o(e.)g(The)h
(new)g(selected)g(ultrasonic)f(sensor)-150 602 y(can)j(detect)f
(objects)g(fr)o(om)h(1-mm)g(to)g(500-cm,)e(and)i(the)g(pr)o(ecise)e
(range)i(is)f(fr)o(om)i(30-cm)e(to)h(5-meters,)f(If)g(the)h(distance)f
(detection)h(of)-150 746 y(the)c(ultrasonic)g(sensor)g(is)g(closer)g
(than)g(30-cm,)g(the)g(data)f(will)i(appear)d(as)i(30-cm.)g(In)g(the)g
(pr)o(oject,)f(our)h(gr)o(oup)g(still)g(need)g(to)h(connect)-150
890 y(the)30 b(r)o(emote)f(contr)o(oller)i(and)f(the)g(raspberry)f(pi)h
(zer)o(o)f(w)-7 b(.)30 b(The)g(connection)g(between)g(ultrasonic)f
(sensors)g(and)i(raspberry)e(pi)g(zer)o(o)-150 1034 y(w)f(has)f(to)i
(pr)o(ovide)e(distance)h(data)g(for)h(the)e(calculations)h(in)g(the)g
(pr)o(oject.)f(The)g(motor)i(contr)o(oller)g(also)e(needs)h(to)g(be)g
(connected)h(to)-150 1179 y(the)d(raspberry)f(pi)h(zer)o(o)g(w)-7
b(.)25 b(Our)i(gr)o(oup)e(is)h(going)g(to)h(use)e(the)h(documentation)g
(of)g(the)g(har)o(dwar)o(e)g(and)g(then)g(pr)o(ogram)f(the)h(pins)g(on)
-150 1323 y(raspberry)21 b(pi)h(zer)o(o)g(w)g(to)g(send)g(the)g(data)g
(to)g(the)g(laptop)f(to)h(analyze.)-150 1569 y Fa(4.4)79
b(GPIO)-31 1737 y Fb(\224General-purpose)21 b(input/output)f(\(GPIO\))j
(is)e(a)h(generic)g(pin)g(on)g(an)g(integrated)f(cir)o(cuit)h(or)h
(computer)e(boar)o(d.\224)g(Our)h(gr)o(oup)g(has)-150
1881 y(found)e(the)f(pin)f(muxing)h(of)g(raspberry)g(pi)f(zer)o(o)h(w)g
(on)g(the)g(documentation)g(and)g(r)o(eliable)f(website.)g(The)h(aim)f
(of)i(connecting)f(pieces)f(of)-150 2026 y(the)23 b(components)g(is)g
(to)h(customize)e(the)h(function)h(of)g(a)f(GPIO)h(pin)f(on)h
(raspberry)e(pi)i(zer)o(o)f(w)g(for)h(micr)o(o-helicopter)-6
b(.)24 b(Every)g(physical)-150 2170 y(pin)f(on)h(the)g(raspberry)f(pi)g
(zer)o(o)g(w)h(has)f(alternative)f(functions.)h(Some)h(of)g(the)f
(physical)g(pins)g(dir)o(ectly)h(supplied)e(high)i(and)g(no)g(volts)
-150 2314 y(on)e(the)f(raspberry)f(pi)h(zer)o(o)g(w)-7
b(.)21 b(High)g(volts)f(is)h(fr)o(om)h(5v)e(to)i(3.3v)-9
b(.)20 b(On)h(the)g(raspberry)g(pi)f(zer)o(o)h(w)-7 b(,)21
b(ther)o(e)g(ar)o(e)f(two)i(5v)e(pins)h(and)g(two)g(3.3v)-150
2458 y(pins.)k(The)h(no)h(volts)f(which)g(called)h(gr)o(ound)f(pin)g
(occur)h(eight)f(pins)g(on)h(raspberry)e(pi)h(zer)o(o)g(w)-7
b(.)26 b(While)h(pr)o(ogrammers)e(code)i(for)g(the)-150
2603 y(customizes)22 b(pr)o(oject,)g(they)h(need)g(to)g(decide)h(which)
g(kind)f(of)h(number)f(module)g(they)g(ar)o(e)g(going)g(to)g(apply)f
(on)i(the)f(computer)f(boar)o(d.)-150 2747 y(Ther)o(e)k(ar)o(e)h(two)g
(ways)g(of)g(numbering)g(the)g(IO)g(pins)g(on)g(using)g(computer)g
(boar)o(d.)f(The)h(\002rst)g(numbering)g(system)f(is)h(BOARD,)g(and)
-150 2891 y(the)h(second)h(is)g(BCM.)g(The)f(advantage)f(of)j(the)e
(\002rst)g(system)g(is)g(no)h(r)o(ewir)o(ed)g(connection)g(with)g(the)f
(code)i(and)e(har)o(dwar)o(e.)g(For)h(the)-150 3035 y(bene\002t)e(of)h
(the)f(second)g(system)g(is)f(mor)o(e)i(pr)o(ecise)e(cir)o(cuit)h
(diagram)g(for)h(the)g(design.)f(In)g(the)g(code)h(of)g(the)f(pr)o
(oject,)f(the)h(numbering)-150 3180 y(system)22 b(can)g(set)h(as)f
(\224GPIO.setmode\(GPIO.BOARD\)\224)g(or)i
(\224GPIO.setmode\(GPIO.BCM\).\224)e(The)h(pr)o(ogrammer)f(can)h(use)f
(\224mode)h(=)-150 3324 y(GPIO.getmode\(\)\224)d(to)g(con\002rm)g(the)f
(numbering)h(system.)e(For)i(the)g(pins)f(on)h(the)f(raspberry)g(pi)h
(zer)o(o)f(w)-7 b(,)19 b(it)h(is)f(important)g(to)h(r)o(emember)-150
3468 y(that)29 b(pins)g(can)h(use)f(as)g(input)g(as)h(well)f(as)h
(output.)e(So)i(secondary)g(in)g(the)g(pr)o(ogram)f(is)h(to)g(set)f(up)
g(the)h(initial)f(value.)g(Assume)f(the)-150 3612 y(name)d(of)i(the)e
(initiated)g(pin)h(called)g(channel)f(so)h(that)f
(\224GPIO.setup\(channel,)f(GPIO.OUT)-6 b(,)25 b
(initial=GPIO.HIGH\)\224.)g(\224GPIO.OUT\224)-150 3757
y(means)h(data)g(channel)h(used)g(as)f(output)g(value)g(on)h(raspberry)
g(pi)f(zer)o(o)h(w)-7 b(.)26 b(\224GPIO.HIGH\224)g(means)g(data)h
(channel)g(set)f(to)h(high)g(volt)-150 3901 y(on)k(raspberry)e(pi)h
(zer)o(o)g(w)-7 b(.)29 b(The)h(other)h(way)e(to)i(appear)d
(\224GPIO.HIGH\224)h(is)h(\2241\224.)f(At)h(the)g(end)g(of)h(the)f(pr)o
(ogramming,)f(simply)h(use)-150 4045 y(the)25 b(command)h
(\224GPIO.cleanup\(\)\224)e(to)i(clean)f(up)g(all)g(the)h(data)e(and)i
(pins')f(memory)g(on)h(the)g(raspberry)e(pi)h(zer)o(o)g(w)-7
b(.The)25 b(purpose)f(of)-150 4189 y(cleaning)e(up)g(the)g(memory)g(is)
g(to)g(avoid)g(any)g(err)o(or)h(in)f(the)g(next)g(pr)o(oject)f(to)h
(use)f(the)h(computer)g(boar)o(d.)-150 4435 y Fa(4.5)79
b(Code)-31 4603 y Fb(Her)o(e)21 b(is)h(the)g(simple)f(demo)i(code)g([)p
Fc(?)p Fb(])g(for)g(set)e(up)h(and)g(clean)g(up.)p 0
TeXcolorgray 0 TeXcolorgray -150 4816 a(import)g(RPi.GPIO)g(as)f(GPIO)p
0 TeXcolorgray 0 TeXcolorgray -150 5031 a(#import)h(time)f(library)i
(is)e(for)i(the)f(sleep)g(method)p 0 TeXcolorgray 0 TeXcolorgray
-150 5245 a(import)g(time)p 0 TeXcolorgray 0 TeXcolorgray
-150 5460 a(button)g(=)g(8)p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 6 7
TeXDict begin 6 6 bop 0 TeXcolorgray 0 TeXcolorgray 4018
-296 a Ff(6)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-150 -144 a Fb(#set)21 b(numbering)h(mode)h(for)g(the)f(pr)o(ogram)p
0 TeXcolorgray 0 TeXcolorgray -150 70 a(GPIO.setmode\(GPIO.BOARD\))p
0 TeXcolorgray 0 TeXcolorgray -150 284 a(#setup)e(button\(pin8\))i(as)f
(output)g(pin)p 0 TeXcolorgray 0 TeXcolorgray -150 498
a(GPIO.setup\(button,)f(GPIO.OUT)-6 b(,)22 b(initial)f(=)i(0\))p
0 TeXcolorgray 0 TeXcolorgray -150 713 a(try:)p 0 TeXcolorgray
0 TeXcolorgray -71 927 a(#turn)f(on)g(and)g(of)o(f)h(the)f(same)f
(button)h(in)g(every)g(5)g(second)p 0 TeXcolorgray 0
TeXcolorgray -71 1141 a(while)g(\(T)-7 b(r)o(ue\):)p
0 TeXcolorgray 0 TeXcolorgray 8 1355 a(#turn)22 b(on,)g(set)g(as)f
(HIGH)h(or)h(1)p 0 TeXcolorgray 0 TeXcolorgray 8 1569
a(GPIO.output\(button,)e(GPIO.HIGH\))p 0 TeXcolorgray
0 TeXcolorgray 8 1783 a(print\(\224ON\224\))p 0 TeXcolorgray
0 TeXcolorgray 8 1997 a(time.sleep\(5\))p 0 TeXcolorgray
0 TeXcolorgray 8 2211 a(#turn)h(of)o(f,)g(set)g(as)f(LOW)i(or)g(0)p
0 TeXcolorgray 0 TeXcolorgray 8 2425 a(GPIO.output\(button,)e
(GPIO.LOW\))p 0 TeXcolorgray 0 TeXcolorgray 8 2639 a
(print\(\224OFF\224\))p 0 TeXcolorgray 0 TeXcolorgray
8 2854 a(time.sleep\(5\))p 0 TeXcolorgray 0 TeXcolorgray
-150 3068 a(except)g(Keyboar)o(dInterr)o(upt:)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray -71 3282
a(#cleanup)g(GPIO)h(settings)p 0 TeXcolorgray 0 TeXcolorgray
-71 3494 a(GPIO.cleanup\(\))p 0 TeXcolorgray 0 TeXcolorgray
-71 3708 a(print\(\224Exiting...\224\))-148 3970 y Fd(5)96
b(K)t Fe(A)t(I)t(Y)t(UA)t(N)34 b Fd(F)m Fe(A)t(N)t Fd(')t
Fe(S)f Fd(R)t Fe(E)t(P)t(O)t(R)s(T)-150 4138 y Fa(5.1)79
b(Current)23 b(Pr)n(ogress)-31 4306 y Fb(In)f(the)g(past)f(few)i
(weeks,)f(I)g(am)g(working)h(on)g(the)f(vehicle)g(motor)h(contr)o(ol)g
(part.)f(The)g(motor)h(drives)f(the)g(\003ight)h(of)g(the)f(helicopter)
-6 b(.)-150 4450 y(W)f(e)33 b(will)f(have)h(two)f(main)h(coaxial)f
(blades)g(and)h(one)g(r)o(ear)f(blade)h(on)g(our)g(helicopter)g(which)g
(indicate)f(ther)o(e)h(ar)o(e)f(thr)o(ee)g(motors.)-150
4595 y(Curr)o(ently)-9 b(,)36 b(I)g(got)h(one)g(motor)g(works)f(by)g
(connecting)h(it)g(thr)o(ough)f(motor)h(contr)o(ol)g(boar)o(d)f(L293D)g
(and)g(a)g(power)h(module.)f(All)-150 4739 y(equipment)26
b(and)i(wirings)f(ar)o(e)f(setting)h(on)g(a)g(br)o(eadboar)o(d.)f
(Python)h(has)f(a)h(package)f(name)h(\223RPi.GPIO\224)f(to)h(contr)o
(ol)g(Raspberry)f(Pi)-150 4883 y(GPIO)f(channels.)f(I)g(implemented)h
(a)f(python)g(script)h(by)f(con\002guring)h(four)h(GPIO)f(pins)f(to)g
(contr)o(ol)i(the)e(DC)h(motor)-6 b(.)25 b(One)g(GPIO)g(pin)-150
5027 y(is)f(connected)g(to)g(the)g(gr)o(ound)h(not)f(actually)f(act)g
(on)i(the)f(motor)-6 b(.)24 b(One)g(use)f(for)i(enabling)f(and)g
(disabling)g(the)f(motor)-6 b(.)25 b(Other)f(two)g(can)-150
5172 y(act)f(on)h(changing)f(the)g(dir)o(ections)h(of)f(the)h(motor)f
(by)h(setting)e(the)h(output)g(signal)f(level)h(either)h(high)f(or)h
(low)-7 b(.)23 b(Connecting)h(Raspberry)-150 5316 y(Pi)h(to)g(a)g(W)l
(i-Fi)g(envir)o(onment,)f(I)h(am)g(able)f(to)h(change)g(the)g(r)o
(otation)g(dir)o(ection)g(of)h(the)f(motor)g(r)o(emotely)-9
b(.)25 b(In)g(W)l(indows,)g(for)g(example,)-150 5460
y(we)d(can)g(use)f(Putty)h(connect)g(to)h(the)f(IP)f(addr)o(ess)h(of)g
(the)g(Raspberry)f(Pi)h(then)g(execute)g(dif)o(fer)o(ent)g(codes.)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 7 8
TeXDict begin 7 7 bop 0 TeXcolorgray 0 TeXcolorgray 4018
-296 a Ff(7)p 0 TeXcolorgray -31 -144 a Fb(The)26 b(curr)o(ent)h
(implementation)f(of)i(driving)f(one)g(DC)h(motor)f(is)g(based)f(on)h
(the)g(har)o(dwar)o(e)f(in)i(hand.)e(L293D)h(only)g(support)f(two)-150
0 y(motors)f(and)g(wiring)h(ar)o(e)f(setting)f(on)i(a)e(br)o(eadboar)o
(d.)h(The)f(actual)h(motor)g(contr)o(oller)h(boar)o(d)f(we)g(ar)o(e)g
(going)g(to)h(use,)e(and)h(wiring)h(set)-150 145 y(up)i(will)h(be)g
(decided)h(by)f(EE)h(team.)e(Changing)h(the)f(r)o(otation)h(dir)o
(ection)g(of)h(the)f(DC)g(motor)g(is)g(being)g(tested,)f(speed)g
(changing)h(by)-150 289 y(setting)23 b(PWM)g(fr)o(equency)h(will)f(be)g
(tested)g(in)g(the)h(futur)o(e.)e(On-helicopter)i(motor)g(testing)f
(will)g(be)g(started)g(once)h(motors)f(and)h(motor)-150
433 y(contr)o(oller)f(being)f(wir)o(ed)g(by)g(the)g(EE)h(team.)-150
707 y Fa(5.2)79 b(Future)23 b(Goals)p 0 TeXcolorgray
-31 878 a Fb(1\))p 0 TeXcolorgray 95 w(Contr)o(ol)f(thr)o(ee)g(motors)g
(by)g(the)g(Raspberry)f(Pi.)h(Thr)o(ee)f(motors)h(need)h(be)f(able)f
(to)h(r)o(un)h(independently)-9 b(.)p 0 TeXcolorgray
-31 1022 a(2\))p 0 TeXcolorgray 95 w(My)29 b(curr)o(ent)g
(implementation)e(is)i(setting)f(on)i(the)f(br)o(eadboar)o(d,)f(the)h
(r)o(eal)f(air)o(craft)h(wirings)g(need)g(to)g(be)g(set)f(up)h(nicely)g
(to)130 1166 y(balance)21 b(the)h(weight)g(and)g(keep)g(the)g
(functionality)-9 b(.)p 0 TeXcolorgray -31 1310 a(3\))p
0 TeXcolorgray 95 w(T)i(esting)18 b(changes)h(the)h(PWM)g(fr)o(equency)
g(to)g(contr)o(ol)g(the)f(speed)h(of)g(the)g(motor)-6
b(.)20 b(Involving)f(the)h(speed)f(r)o(elationship)g(between)130
1455 y(two)j(coaxial)g(r)o(otors)g(to)g(change)g(the)g(orientation)g
(of)h(the)f(helicopter)-6 b(.)p 0 TeXcolorgray -31 1599
a(4\))p 0 TeXcolorgray 95 w(Our)23 b(helicopter)f(is)h(using)f(the)h
(battery)e(as)h(the)h(power)g(supply)-9 b(.)21 b(I)h(am)h(using)f(a)g
(power)h(module)g(now;)g(the)f(battery)g(needs)h(set)130
1743 y(up)e(with)h(electr)o(onic)h(speed)e(contr)o(ol)i(for)g(a)e
(stable)g(output.)p 0 TeXcolorgray -31 1887 a(5\))p 0
TeXcolorgray 95 w(Implementing)26 b(manual)g(\003ight)h(mode,)g(when)g
(helicopter)g(r)o(eceives)f(the)h(user)f(input.)g(Motors)h(should)h(be)
e(set)h(to)g(a)f(certain)130 2032 y(mode.)32 b(Speci\002cally)-9
b(,)31 b(when)h(the)g(air)o(craft)f(was)g(asked)h(to)g(perform)g(takes)
f(of)o(f)i(and)f(hover)-6 b(,)32 b(motors)g(should)g(r)o(otate)f(at)g
(the)130 2176 y(desir)o(ed)22 b(speed)f(and)i(keep)e(the)h(helicopter)g
(hover)h(stably)-9 b(.)p 0 TeXcolorgray -31 2320 a(6\))p
0 TeXcolorgray 95 w(Implementing)21 b(a)i(r)o(eliable)f(sear)o(ching)g
(pattern)g(algorithm)g(of)i(the)e(helicopter)h(to)g(ef)o(fectively)f
(cover)i(the)e(whole)h(sear)o(ch)f(ar)o(ea)130 2464 y(and)g(\002nd)g
(the)g(tar)o(get.)p 0 TeXcolorgray -31 2609 a(7\))p 0
TeXcolorgray 95 w(Implementing)f(a)h(r)o(eliable)f(algorithm)h(for)h
(the)f(helicopter)g(to)g(avoid)g(obstacles)f(when)i(the)f(camera)f
(detects)h(the)g(obstacles.)p 0 TeXcolorgray -31 2753
a(8\))p 0 TeXcolorgray 95 w(In)k(the)g(autonomous)g(package)g(delivery)
h(mission.)e(Implementing)h(a)g(featur)o(e)g(to)g(save)g(the)g(path)g
(of)h(the)g(helicopter)-6 b(,)26 b(mor)o(e)130 2897 y(speci\002c,)h
(save)f(the)i(transitions)f(of)i(the)e(motors)h(to)g(\002nd)h(the)e(r)o
(eturn)h(r)o(outes)f(between)g(home)h(base)f(and)h(the)g(tar)o(get)f
(sear)o(ch)130 3041 y(ar)o(ea.)-150 3316 y Fa(5.3)79
b(Pr)n(ob)o(lems)-31 3486 y Fb(The)23 b(\002rst)h(pr)o(oblem)f(is)g(we)
h(don't)h(have)e(our)h(motors)g(and)g(motor)g(contr)o(oller)h(wir)o(ed)
f(on)g(the)g(helicopter)-6 b(.)23 b(The)h(har)o(dwar)o(e)f(r)o
(estricts)-150 3630 y(testing)e(the)h(lifting,)h(turning)f(and)g
(further)h(motor)f(r)o(elated)g(actions)g(of)g(the)g(helicopter)-6
b(.)-31 3774 y(The)32 b(second)h(pr)o(oblem)f(is)g(\223RPi.GPIO\224)g
(is)g(unsuitable)f(for)j(r)o(eal-time)e(or)h(timing-critical)g
(applications.)e(This)g(is)i(because)e(we)-150 3919 y(cannot)25
b(pr)o(edict)h(when)f(Python)h(will)f(be)h(busy)e(garbage)h
(collecting.)h(It)f(also)g(r)o(uns)g(under)h(the)g(Linux)f(kernel)h
(which)g(is)f(not)h(suitable)-150 4063 y(for)c(r)o(eal-time)f
(applications;)f(it)h(is)g(multitasking)f(O/S)i(and)f(another)h(pr)o
(ocess)e(may)h(be)g(given)g(priority)h(over)g(the)f(CPU,)g(causing)g
(jitter)-150 4207 y(in)h(our)h(pr)o(ogram.)-31 4351 y(The)g(thir)o(d)h
(pr)o(oblem)f(is)h(ther)o(e)f(is)h(a)f(limited)h(time)g(r)o(emaining)f
(to)h(implement)f(the)h(autonomous)e(function)j(and)f(test)f(the)g
(stability)-9 b(.)-150 4496 y(W)i(e)27 b(have)f(ar)o(ound)h(one)g
(month)g(left)h(to)f(demonstrate)f(the)h(capabilities)e(of)j(vehicle)f
(autonomy)f(and)h(r)o(emote)g(operation,)f(including)-150
4640 y(tar)o(get)21 b(tracking)h(and)g(package)f(delivery)-9
b(.)-150 4914 y Fa(5.4)79 b(Solutions)-31 5084 y Fb(The)20
b(solution)h(of)h(the)f(\002rst)g(pr)o(oblem)g(is)f(to)i(do)f(as)g
(much)g(as)f(possible)g(befor)o(e)h(the)g(har)o(dwar)o(e)g(available.)e
(W)-7 b(e)21 b(can)g(collaborate)g(with)-150 5228 y(EE)i(team)f(to)g
(set)g(up)g(the)g(electric)h(cir)o(cuits)e(together)-6
b(.)23 b(The)f(coding)h(portion)g(of)g(con\002guring)f(Raspberry)g
(Pi's)g(GPIO)g(pins)g(is)g(not)g(har)o(d.)-150 5373 y(Setting)f(PWM)h
(and)h(pins)e(output)g(volts)h(can)g(be)f(done)i(once)g(the)f(cir)o
(cuit)g(being)g(constr)o(ucted.)p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 8 9
TeXDict begin 8 8 bop 0 TeXcolorgray 0 TeXcolorgray 4018
-296 a Ff(8)p 0 TeXcolorgray -31 -144 a Fb(For)32 b(the)g(second)h(pr)o
(oblem,)e(even)g(though)h(Python)g(is)g(easier)g(for)g(coding.)h(The)f
(performance)g(of)h(the)f(motors)g(needs)g(further)-150
0 y(testing.)17 b(If)g(the)g(motor)h(is)f(unstable)g(in)g(a)g(r)o
(eal-time)g(r)o(esponse.)f(W)-7 b(e)18 b(could)g(change)f(the)g(coding)
i(in)e(C/C++,)h(C)f(has)g(a)g(library)h(\223W)l(iringPi\224)-150
145 y(can)k(be)g(using)f(to)i(access)e(GPIO)h(pins)f(of)i(the)f
(Raspberry)f(Pi.)-31 289 y(T)-7 b(o)22 b(addr)o(ess)g(the)g(thir)o(d)h
(pr)o(oblem,)f(our)h(big)f(team)g(ar)o(e)g(going)h(to)g(meet)f(mor)o(e)
h(often)g(in)g(the)f(upcoming)h(days.)f(Individually)-9
b(,)22 b(once)h(I)-150 433 y(tested)e(PWM)g(fr)o(equency)h(change)f
(contr)o(ol)h(the)f(speed)g(of)h(the)f(motor)g(in)h(my)f(hand.)h(I)f
(will)g(turn)g(to)h(work)g(on)f(making)g(a)g(GUI)g(for)i(user)-150
577 y(command)f(communication)g(and)h(start)e(to)h(establish)f(the)h
(tar)o(get)f(sear)o(ch)g(pattern)g(with)h(my)g(teammates.)-148
876 y Fd(6)96 b(C)t Fe(O)t(N)t(C)t(L)t(U)t(S)t(I)t(O)t(N)-31
1046 y Fb(Ther)o(e)21 b(ar)o(e)h(many)f(dif)o(\002culties)h(in)g(the)g
(competition)g(r)o(ules)g(we)g(ar)o(e)g(expecting)g(to)g(encounter)g
(in)g(the)g(near)g(futur)o(e.)p 0 TeXcolorgray -31 1240
a(1\))p 0 TeXcolorgray 95 w(T)-7 b(ake)21 b(of)o(f)h(and)h
(steady-state)d(hover)i(based)g(on)g(the)g(height)g(level)g
(information)h(that)e(ultrasonic)h(sensor)g(given.)p
0 TeXcolorgray -31 1385 a(2\))p 0 TeXcolorgray 95 w(Find)g(the)g
(landing)h(base)e(by)h(the)g(camera)f(and)h(successful)f(landing.)p
0 TeXcolorgray -31 1529 a(3\))p 0 TeXcolorgray 95 w(T)-7
b(urning)21 b(to)i(the)f(desir)o(ed)g(dir)o(ection)g(by)g(setting)g
(dif)o(fer)o(ent)g(speeds)f(of)i(two)f(coaxial)g(r)o(otors.)p
0 TeXcolorgray -31 1673 a(4\))p 0 TeXcolorgray 95 w(Recognize)g(the)g
(r)o(ectangle)f(obstacle)g(and)i(avoid)f(it)g(during)g(the)g(package)f
(delivery)i(mission.)p 0 TeXcolorgray -31 1817 a(5\))p
0 TeXcolorgray 95 w(Recognize)g(the)h(\002rst)f(envelope,)g(pick)h(it)f
(up)g(and)h(dr)o(op)g(to)g(the)g(tar)o(get)e(location.)i(Pick)g(the)f
(second)i(envelope)e(and)h(r)o(eturn)f(to)130 1962 y(the)f(home)g
(base.)-31 2156 y(W)-7 b(e)20 b(have)g(a)g(video)h(shows)f(the)h
(\003ight)f(capabilities)f(of)i(the)f(air)o(craft)h(due)f(by)h(16)e
(Mar)o(ch)i(2018.)d(Since)j(we)f(ar)o(e)g(choosing)h(to)g(establish)
-150 2300 y(an)31 b(autonomous)g(\003ight)h(system,)e(we)i(must)f
(demonstrate)g(some)g(functionality)h(of)g(the)g(autonomous)f(\003ight)
g(during)i(this)e(video.)-150 2444 y(The)g(whole)g(pr)o(oject)g(team)f
(will)i(be)f(working)h(together)f(mor)o(e)h(often)f(in)h(the)f
(upcoming)g(month)g(to)h(hit)f(that)g(r)o(equir)o(ement)f(of)i(the)-150
2588 y(competition.)21 b(The)h(har)o(dwar)o(e)f(delays)g(have)h(slowed)
g(us)f(down)i(quite)e(a)h(bit)f(mor)o(e)h(than)g(we)f(expected,)h(but)f
(the)h(next)f(few)h(weeks)g(ar)o(e)-150 2733 y(going)h(to)f(be)g(the)g
(time)g(that)f(things)h(r)o(ealy)f(start)h(coming)g(together)-6
b(.)22 b(Ther)o(e)g(will)g(be)g(alot)g(of)h(rapid-pr)o(ototyping)e(and)
i(testing)e(in)h(or)o(der)-150 2877 y(to)g(get)g(the)g(air)o(craft)g
(\003ying)g(under)h(it's)e(own)i(contr)o(ols.)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
